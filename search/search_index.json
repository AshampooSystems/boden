{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"WARNING: THIS IS NOT THE SOURCE FILE FOR THE BODEN.IO FRONT PAGE. THE FRONT PAGE SOURCE IS IN themes/hero.html! PLEASE DO NOT DELETE THIS FILE. WE KEEP IT FOR REFERENCE AND TO GENERATE SYNTAX HIGHLIGHTED SOURCE BLOCKS. Build real native mobile apps using modern C++17 and Boden \u00b6 Write your mobile apps in modern C++17 and compile 100% native Android and iOS apps from a single statically typed codebase. No need for scripting. No overhead introduced by virtual machines. Using Boden is straight forward: // MainViewController.cpp #include <bdn/ui.h> #include <bdn/ui/yoga.h> #include \"MainViewController.h\" using namespace bdn ; using namespace bdn :: ui ; MainViewController :: MainViewController () { _window = std :: make_shared < Window > (); _window -> title = \"AwesomeApp\" ; _window -> geometry = Rect { 0 , 0 , 400 , 300 }; _window -> setLayout ( std :: make_shared < yoga :: Layout > ()); auto button = std :: make_shared < Button > (); button -> label = \"Hello World\" ; _window -> contentView = button ; _window -> visible = true ; } Harness the power of native widgets and native user interface behavior \u00b6 Boden wraps the native user interface controls provided by the platform. This is done consistently, down to the level of a list item in a native list control. In doing so, Boden lets you create apps as if you had used the native platform framework. And users won't recognize any difference to the behavior they are already used to. Lay out your user interface with Flex layouts \u00b6 With Boden laying out your UI is a breeze. Just define your layouts using Flex stylesheets directly in C++. Boden uses the Yoga layout engine accross all platforms. // MainViewController.cpp #include <bdn/ui.h> #include <bdn/ui/yoga.h> #include \"MainViewController.h\" using namespace bdn ; using namespace bdn :: ui ; MainViewController :: MainViewController () { _window = std :: make_shared < Window > (); _window -> title = \"AwesomeApp\" ; _window -> geometry = Rect { 0 , 0 , 400 , 300 }; _window -> setLayout ( std :: make_shared < yoga :: Layout > ()); _window -> stylesheet = FlexJsonStringify ({ \"justifyContent\" : \"Center\" , \"alignItems\" : \"Center\" }); std :: shared_ptr < Button > button = std :: make_shared < Button > (); button -> label = \"Hello World\" ; _window -> contentView = button ; _window -> visible = true ; } Reuse your existing programming skills \u00b6 Boden builds upon well-established technologies and best practices where possible. A Boden string literally is an std::string . No custom containers, smart pointers, or other basic concepts. This allows you to reuse your existing knowledge and focus on what's most important: your app. Enjoy the modern lightweight approach to building cross-platform apps \u00b6 Boden doesn't come with 20 gigabytes of bloat and it doesn't require you to go through a lengthy installation process. A simple git clone command and an integrated development environment most likely already installed on your machine is enough to get started.","title":"Home"},{"location":"#build-real-native-mobile-apps-using-modern-c17-and-boden","text":"Write your mobile apps in modern C++17 and compile 100% native Android and iOS apps from a single statically typed codebase. No need for scripting. No overhead introduced by virtual machines. Using Boden is straight forward: // MainViewController.cpp #include <bdn/ui.h> #include <bdn/ui/yoga.h> #include \"MainViewController.h\" using namespace bdn ; using namespace bdn :: ui ; MainViewController :: MainViewController () { _window = std :: make_shared < Window > (); _window -> title = \"AwesomeApp\" ; _window -> geometry = Rect { 0 , 0 , 400 , 300 }; _window -> setLayout ( std :: make_shared < yoga :: Layout > ()); auto button = std :: make_shared < Button > (); button -> label = \"Hello World\" ; _window -> contentView = button ; _window -> visible = true ; }","title":"Build real native mobile apps using modern C++17\u00a0and\u00a0Boden"},{"location":"#harness-the-power-of-native-widgets-and-native-user-interface-behavior","text":"Boden wraps the native user interface controls provided by the platform. This is done consistently, down to the level of a list item in a native list control. In doing so, Boden lets you create apps as if you had used the native platform framework. And users won't recognize any difference to the behavior they are already used to.","title":"Harness the power of native widgets and native user interface behavior"},{"location":"#lay-out-your-user-interface-with-flex-layouts","text":"With Boden laying out your UI is a breeze. Just define your layouts using Flex stylesheets directly in C++. Boden uses the Yoga layout engine accross all platforms. // MainViewController.cpp #include <bdn/ui.h> #include <bdn/ui/yoga.h> #include \"MainViewController.h\" using namespace bdn ; using namespace bdn :: ui ; MainViewController :: MainViewController () { _window = std :: make_shared < Window > (); _window -> title = \"AwesomeApp\" ; _window -> geometry = Rect { 0 , 0 , 400 , 300 }; _window -> setLayout ( std :: make_shared < yoga :: Layout > ()); _window -> stylesheet = FlexJsonStringify ({ \"justifyContent\" : \"Center\" , \"alignItems\" : \"Center\" }); std :: shared_ptr < Button > button = std :: make_shared < Button > (); button -> label = \"Hello World\" ; _window -> contentView = button ; _window -> visible = true ; }","title":"Lay out your user interface with Flex layouts"},{"location":"#reuse-your-existing-programming-skills","text":"Boden builds upon well-established technologies and best practices where possible. A Boden string literally is an std::string . No custom containers, smart pointers, or other basic concepts. This allows you to reuse your existing knowledge and focus on what's most important: your app.","title":"Reuse your existing programming skills"},{"location":"#enjoy-the-modern-lightweight-approach-to-building-cross-platform-apps","text":"Boden doesn't come with 20 gigabytes of bloat and it doesn't require you to go through a lengthy installation process. A simple git clone command and an integrated development environment most likely already installed on your machine is enough to get started.","title":"Enjoy the modern lightweight approach to building cross-platform apps"},{"location":"feedback/","text":"Getting in Touch with the Boden Team \u00b6 We are always happy about your feedback! Please use one of the following ways to get in touch with us. Something doesn't work or is missing? \u00b6 Please open an issue on GitHub . Questions or Comments? \u00b6 Join and post to the Boden Google Group . You'll also receive updates and new releases via this channel. Send us an email to boden-team@ashampoo-systems.com . Stay Updated and Join the Discussion \u00b6 Follow us at Twitter @bodenhq and send us a tweet or direct message. Need Support? \u00b6 Please contact us by sending an email to boden-team@ashampoo-systems.com .","title":"Getting in Touch with the Boden\u00a0Team"},{"location":"feedback/#getting-in-touch-with-the-boden-team","text":"We are always happy about your feedback! Please use one of the following ways to get in touch with us.","title":"Getting in Touch with the Boden Team"},{"location":"feedback/#something-doesnt-work-or-is-missing","text":"Please open an issue on GitHub .","title":"Something doesn't work or is missing?"},{"location":"feedback/#questions-or-comments","text":"Join and post to the Boden Google Group . You'll also receive updates and new releases via this channel. Send us an email to boden-team@ashampoo-systems.com .","title":"Questions or Comments?"},{"location":"feedback/#stay-updated-and-join-the-discussion","text":"Follow us at Twitter @bodenhq and send us a tweet or direct message.","title":"Stay Updated and Join the Discussion"},{"location":"feedback/#need-support","text":"Please contact us by sending an email to boden-team@ashampoo-systems.com .","title":"Need Support?"},{"location":"feedback/contributing/","text":"Contributing \u00b6 Open a Pull Request \u00b6 We're happy about contributions from the community. Please fork the Boden repo and open a pull request on GitHub. We will then review your patch and contact you directly. Questions? \u00b6 If you have any questions about open source contributions to Boden, please send us an email to boden-team@ashampoo-systems.com .","title":"Contributing"},{"location":"feedback/contributing/#contributing","text":"","title":"Contributing"},{"location":"feedback/contributing/#open-a-pull-request","text":"We're happy about contributions from the community. Please fork the Boden repo and open a pull request on GitHub. We will then review your patch and contact you directly.","title":"Open a Pull Request"},{"location":"feedback/contributing/#questions","text":"If you have any questions about open source contributions to Boden, please send us an email to boden-team@ashampoo-systems.com .","title":"Questions?"},{"location":"feedback/reporting-bugs/","text":"Reporting Bugs \u00b6 Something doesn't work? A feature you desperately need is missing? Please open a GitHub issue . It helps us if you provide the following information: The version of the Boden Framework you are using (if you're using the GitHub master, please report your local working tree's HEAD commit hash) Which operating system and IDE are you using to build Boden apps? On which target platform does the issue occur? A description of the expected behavior A description of the behavior your observed instead","title":"Reporting Bugs"},{"location":"feedback/reporting-bugs/#reporting-bugs","text":"Something doesn't work? A feature you desperately need is missing? Please open a GitHub issue . It helps us if you provide the following information: The version of the Boden Framework you are using (if you're using the GitHub master, please report your local working tree's HEAD commit hash) Which operating system and IDE are you using to build Boden apps? On which target platform does the issue occur? A description of the expected behavior A description of the behavior your observed instead","title":"Reporting Bugs"},{"location":"getting-started/","text":"Quickstart \u00b6 Prerequisites \u00b6 On a Mac : macOS 10.14+, Xcode 10.1+ , Python 3.4+ , CMake 3.15.0+ . On Windows : Windows 10, Python 3.4+ , CMake 3.10.2+ , Ninja , Git , Oracle JDK 8 , and Android Studio (with Android NDK, see the installation instructions for further details). On Ubuntu 18.04 : sudo apt update && sudo apt install git cmake ninja-build python python3-distutils openjdk-8-jdk qemu-kvm plus Android Studio (with Android NDK, see the installation instructions for further details). Step 1: Clone the Boden Repo \u00b6 git clone --recurse-submodules https://github.com/AshampooSystems/boden.git Step 2: Generate and Open an IDE Project \u00b6 cd boden python boden.py open -t bodendemo This will bring up Xcode on macOS or Android Studio on Linux/Windows. If anything goes wrong, please make sure that all dependencies are installed and set up correctly. Check out our extended guides for help: Building Boden on macOS Building Boden on Windows Building Boden on Linux Step 3: Run a Boden Example Application \u00b6 In Xcode, select the bodendemo target and hit Cmd + R . In Android Studio, select the bodendemo target and hit Shift + F10 . Step 4: Create Your First Boden Application \u00b6 Still with us? Great! Now learn how to create your first Boden application . Something didn't work? \u00b6 Let us know. We're happy about your feedback .","title":"Quickstart"},{"location":"getting-started/#quickstart","text":"","title":"Quickstart"},{"location":"getting-started/#prerequisites","text":"On a Mac : macOS 10.14+, Xcode 10.1+ , Python 3.4+ , CMake 3.15.0+ . On Windows : Windows 10, Python 3.4+ , CMake 3.10.2+ , Ninja , Git , Oracle JDK 8 , and Android Studio (with Android NDK, see the installation instructions for further details). On Ubuntu 18.04 : sudo apt update && sudo apt install git cmake ninja-build python python3-distutils openjdk-8-jdk qemu-kvm plus Android Studio (with Android NDK, see the installation instructions for further details).","title":"Prerequisites"},{"location":"getting-started/#step-1-clone-the-boden-repo","text":"git clone --recurse-submodules https://github.com/AshampooSystems/boden.git","title":"Step 1: Clone the Boden Repo"},{"location":"getting-started/#step-2-generate-and-open-an-ide-project","text":"cd boden python boden.py open -t bodendemo This will bring up Xcode on macOS or Android Studio on Linux/Windows. If anything goes wrong, please make sure that all dependencies are installed and set up correctly. Check out our extended guides for help: Building Boden on macOS Building Boden on Windows Building Boden on Linux","title":"Step 2: Generate and Open an IDE Project"},{"location":"getting-started/#step-3-run-a-boden-example-application","text":"In Xcode, select the bodendemo target and hit Cmd + R . In Android Studio, select the bodendemo target and hit Shift + F10 .","title":"Step 3: Run a Boden Example Application"},{"location":"getting-started/#step-4-create-your-first-boden-application","text":"Still with us? Great! Now learn how to create your first Boden application .","title":"Step 4: Create Your First Boden Application"},{"location":"getting-started/#something-didnt-work","text":"Let us know. We're happy about your feedback .","title":"Something didn't work?"},{"location":"getting-started/faq/","text":"FAQ \u00b6 What platforms are supported? \u00b6 Currently Boden supports iOS and Android. Desktop platforms will be supported in the future, but we cannot nail down a date yet. On which platforms can I develop apps based on Boden? \u00b6 On macOS, Linux, and Windows. To compile, run, and deploy iOS apps, you will need a Mac. What IDEs are supported? \u00b6 Xcode on macOS, Android Studio on Linux and Windows. Other workflows are possible, but we don't advertise them actively as they have not yet been thoroughly tested. How does licensing work? \u00b6 Boden is an open-source project licensed under the (Lesser) GNU General Public License. You may license Boden either under the GPL (version 2 or 3) or LGPL (version 2.1 or 3). Please refer to our Licensing section for details. If you cannot or do not want to comply with the (L)GPL terms, please contact us to learn more about our commercial/proprietary licensing options. Where can I get support? \u00b6 We recommend joining the Boden Google Group . We read every post in the group and will do our best to respond to questions quickly. I found an issue. What should I do? \u00b6 Please open an issue on GitHub and tell us about it. Can I already build a production app with Boden? \u00b6 Most likely not yet. But we're ramping up quickly, so this might change within the next weeks and months. We aim for a Boden 1.0 release by Q1/2020 and it will most likely be possible to create a producion app earlier. Are desktop platforms supported? \u00b6 Not yet. But eventually they will be supported. See below. Do you plan to support desktop platforms in the future? \u00b6 Yes. Most likely we will support macOS and Windows UWP in the future, but we don't yet know exactly when desktop support will land in Boden. Hint: There's unofficial macOS support already, but we don't talk about that as it's not going to be stable soon and is intended for internal testing purposes only at the moment. Is Boden a Commercial Project? \u00b6 Yes. While Boden is free and open source, it is commercially developed by a full-time team. Our goal is to make sophisticated app development hassle-free for you and we believe there is no better way of ensuring the necessary resources are fully committed to the framework. Didn't find the question you were looking for? \u00b6 Please let us know . We're happy to answer your questions!","title":"FAQ"},{"location":"getting-started/faq/#faq","text":"","title":"FAQ"},{"location":"getting-started/faq/#what-platforms-are-supported","text":"Currently Boden supports iOS and Android. Desktop platforms will be supported in the future, but we cannot nail down a date yet.","title":"What platforms are supported?"},{"location":"getting-started/faq/#on-which-platforms-can-i-develop-apps-based-on-boden","text":"On macOS, Linux, and Windows. To compile, run, and deploy iOS apps, you will need a Mac.","title":"On which platforms can I develop apps based on Boden?"},{"location":"getting-started/faq/#what-ides-are-supported","text":"Xcode on macOS, Android Studio on Linux and Windows. Other workflows are possible, but we don't advertise them actively as they have not yet been thoroughly tested.","title":"What IDEs are supported?"},{"location":"getting-started/faq/#how-does-licensing-work","text":"Boden is an open-source project licensed under the (Lesser) GNU General Public License. You may license Boden either under the GPL (version 2 or 3) or LGPL (version 2.1 or 3). Please refer to our Licensing section for details. If you cannot or do not want to comply with the (L)GPL terms, please contact us to learn more about our commercial/proprietary licensing options.","title":"How does licensing work?"},{"location":"getting-started/faq/#where-can-i-get-support","text":"We recommend joining the Boden Google Group . We read every post in the group and will do our best to respond to questions quickly.","title":"Where can I get support?"},{"location":"getting-started/faq/#i-found-an-issue-what-should-i-do","text":"Please open an issue on GitHub and tell us about it.","title":"I found an issue. What should I do?"},{"location":"getting-started/faq/#can-i-already-build-a-production-app-with-boden","text":"Most likely not yet. But we're ramping up quickly, so this might change within the next weeks and months. We aim for a Boden 1.0 release by Q1/2020 and it will most likely be possible to create a producion app earlier.","title":"Can I already build a production app with Boden?"},{"location":"getting-started/faq/#are-desktop-platforms-supported","text":"Not yet. But eventually they will be supported. See below.","title":"Are desktop platforms supported?"},{"location":"getting-started/faq/#do-you-plan-to-support-desktop-platforms-in-the-future","text":"Yes. Most likely we will support macOS and Windows UWP in the future, but we don't yet know exactly when desktop support will land in Boden. Hint: There's unofficial macOS support already, but we don't talk about that as it's not going to be stable soon and is intended for internal testing purposes only at the moment.","title":"Do you plan to support desktop platforms in the future?"},{"location":"getting-started/faq/#is-boden-a-commercial-project","text":"Yes. While Boden is free and open source, it is commercially developed by a full-time team. Our goal is to make sophisticated app development hassle-free for you and we believe there is no better way of ensuring the necessary resources are fully committed to the framework.","title":"Is Boden a Commercial Project?"},{"location":"getting-started/faq/#didnt-find-the-question-you-were-looking-for","text":"Please let us know . We're happy to answer your questions!","title":"Didn't find the question you were looking for?"},{"location":"getting-started/first_app/","text":"Your First Boden Application \u00b6 To create your first Boden app, open up a terminal (or command prompt), change to your local boden directory, and execute the following commands: python boden.py new -n AwesomeApp cd AwesomeApp python ../boden.py open This will create a new folder named AwesomeApp and generate source and project files for a simple Hello World cross-platform application. The last command will prepare and open an Xcode project on the Mac or an Android Studio project on Linux/Windows. In Xcode, select the AwesomeApp target and then press Cmd + R to build and run the Hello World application. In Android Studio, wait for Gradle to finish its sync and configuration processes and then select the bodendemo target and press Cmd + R to build and run the example application, then select the AwesomeApp target and then press Ctrl + R on Mac or Shift + F10 on Linux/Windows to build an run the Hello World application. Note On macOS and Linux you can also simply type ./boden instead of calling python boden.py explicitly. If you want to build the Android version of the app on macOS, run ../boden open -p android . Hello World \u00b6 Here's a quick look at the source code generated by the boden new command: // MainViewController.cpp #include <bdn/ui.h> #include <bdn/ui/yoga.h> #include \"MainViewController.h\" using namespace bdn ; using namespace bdn :: ui ; MainViewController :: MainViewController () { _window = std :: make_shared < Window > (); _window -> title = \"AwesomeApp\" ; _window -> geometry = Rect { 0 , 0 , 400 , 300 }; _window -> setLayout ( std :: make_shared < yoga :: Layout > ()); auto button = std :: make_shared < Button > (); button -> label = \"Hello World\" ; _window -> contentView = button ; _window -> visible = true ; } MainViewController.cpp is the most interesting part of the source generated for the Hello World application. The main view controller will be instantiated at application launch. It's responsible for setting up the application's user interface. Here's what the code does in detail: First, create a new Window and set its title to AwesomeApp : _window = std :: make_shared < Window > (); _window -> title = \"AwesomeApp\" ; To get an automatic layout, use a yogalayout::Layout and set a default window size: _window -> geometry = Rect { 0 , 0 , 400 , 300 }; _window -> setLayout ( std :: make_shared < yoga :: Layout > ()); Then, instantiate a new Button and set its label to \"Hello World\": auto button = std :: make_shared < Button > (); button -> label = \"Hello World\" ; As the button is the only control which will be displayed in this example, set it as the window's content view: _window -> contentView = button ; Finally, make the window visible: _window -> visible = true ; TodoMVC Tutorial \u00b6 Want to learn more? Check out our TodoMVC Tutorial on Medium ! Found a Problem? \u00b6 Please let us know. We're happy about your feedback .","title":"Your First Boden Application"},{"location":"getting-started/first_app/#your-first-boden-application","text":"To create your first Boden app, open up a terminal (or command prompt), change to your local boden directory, and execute the following commands: python boden.py new -n AwesomeApp cd AwesomeApp python ../boden.py open This will create a new folder named AwesomeApp and generate source and project files for a simple Hello World cross-platform application. The last command will prepare and open an Xcode project on the Mac or an Android Studio project on Linux/Windows. In Xcode, select the AwesomeApp target and then press Cmd + R to build and run the Hello World application. In Android Studio, wait for Gradle to finish its sync and configuration processes and then select the bodendemo target and press Cmd + R to build and run the example application, then select the AwesomeApp target and then press Ctrl + R on Mac or Shift + F10 on Linux/Windows to build an run the Hello World application. Note On macOS and Linux you can also simply type ./boden instead of calling python boden.py explicitly. If you want to build the Android version of the app on macOS, run ../boden open -p android .","title":"Your First Boden Application"},{"location":"getting-started/first_app/#hello-world","text":"Here's a quick look at the source code generated by the boden new command: // MainViewController.cpp #include <bdn/ui.h> #include <bdn/ui/yoga.h> #include \"MainViewController.h\" using namespace bdn ; using namespace bdn :: ui ; MainViewController :: MainViewController () { _window = std :: make_shared < Window > (); _window -> title = \"AwesomeApp\" ; _window -> geometry = Rect { 0 , 0 , 400 , 300 }; _window -> setLayout ( std :: make_shared < yoga :: Layout > ()); auto button = std :: make_shared < Button > (); button -> label = \"Hello World\" ; _window -> contentView = button ; _window -> visible = true ; } MainViewController.cpp is the most interesting part of the source generated for the Hello World application. The main view controller will be instantiated at application launch. It's responsible for setting up the application's user interface. Here's what the code does in detail: First, create a new Window and set its title to AwesomeApp : _window = std :: make_shared < Window > (); _window -> title = \"AwesomeApp\" ; To get an automatic layout, use a yogalayout::Layout and set a default window size: _window -> geometry = Rect { 0 , 0 , 400 , 300 }; _window -> setLayout ( std :: make_shared < yoga :: Layout > ()); Then, instantiate a new Button and set its label to \"Hello World\": auto button = std :: make_shared < Button > (); button -> label = \"Hello World\" ; As the button is the only control which will be displayed in this example, set it as the window's content view: _window -> contentView = button ; Finally, make the window visible: _window -> visible = true ;","title":"Hello World"},{"location":"getting-started/first_app/#todomvc-tutorial","text":"Want to learn more? Check out our TodoMVC Tutorial on Medium !","title":"TodoMVC Tutorial"},{"location":"getting-started/first_app/#found-a-problem","text":"Please let us know. We're happy about your feedback .","title":"Found a Problem?"},{"location":"getting-started/building/linux/","text":"Building on Linux \u00b6 To build Android apps on Linux, the following dependencies need to be installed: Ubuntu 18.04 Git OpenJDK 8 Python 2.7+ (required for Android Studio command-line tool) Python 3.4+ (with python3-distutils ) CMake 3.10.2+ Ninja qemu-kvm Android Studio (with Android NDK) Note If you are not sure whether all of the dependencies listed above are installed, jump to the Dependency Installation Guide for Android on Linux and follow the steps listed there to install them. Follow these steps to set up Boden for Android development on Ubuntu: Open up a terminal and clone the git repository: git clone --recurse-submodules https://github.com/AshampooSystems/boden.git Run the boden build tool to generate an Android Studio project: cd boden ./boden open -p android -t bodendemo Wait for Android Studio to finish its gradle sync and configuration, select the bodendemo target and press Shift + F10 to build and run the example application. Note If Android Studio displays an error stating that permission to /dev/kvm is denied, make sure that you have added your user to the kvm group. Continue to Your first Boden application to learn how to create your first Boden app. Didn't work? \u00b6 Please let us know . We're happy to help!","title":"Building on Linux"},{"location":"getting-started/building/linux/#building-on-linux","text":"To build Android apps on Linux, the following dependencies need to be installed: Ubuntu 18.04 Git OpenJDK 8 Python 2.7+ (required for Android Studio command-line tool) Python 3.4+ (with python3-distutils ) CMake 3.10.2+ Ninja qemu-kvm Android Studio (with Android NDK) Note If you are not sure whether all of the dependencies listed above are installed, jump to the Dependency Installation Guide for Android on Linux and follow the steps listed there to install them. Follow these steps to set up Boden for Android development on Ubuntu: Open up a terminal and clone the git repository: git clone --recurse-submodules https://github.com/AshampooSystems/boden.git Run the boden build tool to generate an Android Studio project: cd boden ./boden open -p android -t bodendemo Wait for Android Studio to finish its gradle sync and configuration, select the bodendemo target and press Shift + F10 to build and run the example application. Note If Android Studio displays an error stating that permission to /dev/kvm is denied, make sure that you have added your user to the kvm group. Continue to Your first Boden application to learn how to create your first Boden app.","title":"Building on Linux"},{"location":"getting-started/building/linux/#didnt-work","text":"Please let us know . We're happy to help!","title":"Didn't work?"},{"location":"getting-started/building/mac/","text":"Building on macOS \u00b6 iOS Apps \u00b6 To build iOS apps on macOS, the following dependencies need to be installed: macOS 10.14 Mojave or newer Xcode 10.1+ (with Command Line Tools installed) Python 3.4+ CMake 3.15.0+ Note If you are not sure whether all of the dependencies listed above are installed, jump to the Dependency Installation Guide for iOS on macOS and follow the steps listed there. Follow these steps to set up Boden for iOS development: Open the Terminal app and clone the git repository: git clone --recurse-submodules https://github.com/AshampooSystems/boden.git Run the boden build tool to generate an Xcode project: cd boden ./boden open -p ios In Xcode select the bodendemo target and press Cmd + R to build and run the example application. Continue to Your first Boden application to learn how to create your first Boden app. Android Apps \u00b6 To build Android apps on macOS, the following dependencies need to be installed: macOS 10.14 Mojave or newer Command Line Tools OpenJDK 8 Python 3.4+ CMake 3.10.2+ Android Studio (with Android NDK) Note If you are not sure whether all of the dependencies listed above are installed, jump to the Dependency Installation Guide for Android on macOS and follow the steps listed there to install them. Follow these steps to set up Boden for Android development on the Mac: Open the terminal and clone the git repository: git clone --recurse-submodules https://github.com/AshampooSystems/boden.git Run the boden build tool to prepare an Android Studio project: cd boden ./boden open -p android Wait for Android Studio to finish its gradle sync and configuration, then select the bodendemo target and press Ctrl + R to build and run the example application. Continue to Your first Boden application to learn how to create your first Boden app. Didn't work? \u00b6 Please let us know . We're happy to help!","title":"Building on macOS"},{"location":"getting-started/building/mac/#building-on-macos","text":"","title":"Building on macOS"},{"location":"getting-started/building/mac/#ios-apps","text":"To build iOS apps on macOS, the following dependencies need to be installed: macOS 10.14 Mojave or newer Xcode 10.1+ (with Command Line Tools installed) Python 3.4+ CMake 3.15.0+ Note If you are not sure whether all of the dependencies listed above are installed, jump to the Dependency Installation Guide for iOS on macOS and follow the steps listed there. Follow these steps to set up Boden for iOS development: Open the Terminal app and clone the git repository: git clone --recurse-submodules https://github.com/AshampooSystems/boden.git Run the boden build tool to generate an Xcode project: cd boden ./boden open -p ios In Xcode select the bodendemo target and press Cmd + R to build and run the example application. Continue to Your first Boden application to learn how to create your first Boden app.","title":"iOS Apps"},{"location":"getting-started/building/mac/#android-apps","text":"To build Android apps on macOS, the following dependencies need to be installed: macOS 10.14 Mojave or newer Command Line Tools OpenJDK 8 Python 3.4+ CMake 3.10.2+ Android Studio (with Android NDK) Note If you are not sure whether all of the dependencies listed above are installed, jump to the Dependency Installation Guide for Android on macOS and follow the steps listed there to install them. Follow these steps to set up Boden for Android development on the Mac: Open the terminal and clone the git repository: git clone --recurse-submodules https://github.com/AshampooSystems/boden.git Run the boden build tool to prepare an Android Studio project: cd boden ./boden open -p android Wait for Android Studio to finish its gradle sync and configuration, then select the bodendemo target and press Ctrl + R to build and run the example application. Continue to Your first Boden application to learn how to create your first Boden app.","title":"Android Apps"},{"location":"getting-started/building/mac/#didnt-work","text":"Please let us know . We're happy to help!","title":"Didn't work?"},{"location":"getting-started/building/windows/","text":"Building on Windows \u00b6 To build Android apps on Windows, the following dependencies need to be installed: Windows 10 Python 3.4+ CMake 3.10.2+ Ninja Git Oracle JDK 8 Android Studio (with Android NDK) Note If you are not sure whether all of the dependencies listed above are installed, jump to the Dependency Installation Guide for Android on Windows and follow the steps listed there to install them. Follow these steps to set up Boden for Android development on Windows 10: Open a Command Prompt: Hit Win + R , type cmd and then hit Enter. Clone the git repository: git clone --recurse-submodules https://github.com/AshampooSystems/boden.git Run the boden.py build tool to generate an Android Studio project: cd boden python boden.py open -p android -t bodendemo Wait for Android Studio to finish its gradle sync and configuration, then select the bodendemo target and press Shift + F10 to build and run the example application. Continue to Your first Boden application to learn how to create your first Boden app. Didn't work? \u00b6 Please let us know . We're happy to help!","title":"Building on Windows"},{"location":"getting-started/building/windows/#building-on-windows","text":"To build Android apps on Windows, the following dependencies need to be installed: Windows 10 Python 3.4+ CMake 3.10.2+ Ninja Git Oracle JDK 8 Android Studio (with Android NDK) Note If you are not sure whether all of the dependencies listed above are installed, jump to the Dependency Installation Guide for Android on Windows and follow the steps listed there to install them. Follow these steps to set up Boden for Android development on Windows 10: Open a Command Prompt: Hit Win + R , type cmd and then hit Enter. Clone the git repository: git clone --recurse-submodules https://github.com/AshampooSystems/boden.git Run the boden.py build tool to generate an Android Studio project: cd boden python boden.py open -p android -t bodendemo Wait for Android Studio to finish its gradle sync and configuration, then select the bodendemo target and press Shift + F10 to build and run the example application. Continue to Your first Boden application to learn how to create your first Boden app.","title":"Building on Windows"},{"location":"getting-started/building/windows/#didnt-work","text":"Please let us know . We're happy to help!","title":"Didn't work?"},{"location":"getting-started/installing_dependencies/linux/","text":"Setting up Ubuntu Linux for Android Builds \u00b6 1. Install Git, Python, CMake, Ninja, OpenJDK, and qemu-kvm \u00b6 Open up a terminal and run the following command: sudo apt update && sudo apt install git cmake ninja-build python python3-distutils openjdk-8-jdk qemu-kvm 2. Install Android Studio \u00b6 Download Android Studio from https://developer.android.com/studio/ (ca. 1GB) and unpack the downloaded ZIP file. Open up a terminal and change to the directory to which you unpacked the ZIP file. To start Android Studio, run the following commands: cd android-studio/bin ./studio.sh Follow the steps in the setup wizard to complete the installation. If you want to run Android Applications in the Android Emulator, follow the steps below. 2. Install Android NDK \u00b6 On the \u201cWelcome to Android\u201d screen, click Configure and select SDK Manager. Click on the SDK Tools tab. Select NDK from the list and click OK. Confirm the change by clicking OK in the popup window. Accept the NDK license agreement. The NDK component is being installed, grab another drink. After the installation has finished, click Finish. The installation is now complete. Note In order to run boden , the studio command-line tool must be installed. Please follow the instructions shown when calling boden for the first time after Android Studio has been installed: Open Android Studio, open a project, and then select Tools => Create Command-Line Launcher. 3. Configure Ubuntu for Running Android Emulator \u00b6 Open up a terminal and run the following command: sudo adduser YOUR_USERNAME kvm Log out of Ubuntu by typing: gnome-session-quit Log back in. Android Emulator should now work on your system. Didn't work? \u00b6 Please let us know . We're happy to help!","title":"Setting up Ubuntu Linux for Android Builds"},{"location":"getting-started/installing_dependencies/linux/#setting-up-ubuntu-linux-for-android-builds","text":"","title":"Setting up Ubuntu Linux for Android Builds"},{"location":"getting-started/installing_dependencies/linux/#1-install-git-python-cmake-ninja-openjdk-and-qemu-kvm","text":"Open up a terminal and run the following command: sudo apt update && sudo apt install git cmake ninja-build python python3-distutils openjdk-8-jdk qemu-kvm","title":"1. Install Git, Python, CMake, Ninja, OpenJDK, and qemu-kvm"},{"location":"getting-started/installing_dependencies/linux/#2-install-android-studio","text":"Download Android Studio from https://developer.android.com/studio/ (ca. 1GB) and unpack the downloaded ZIP file. Open up a terminal and change to the directory to which you unpacked the ZIP file. To start Android Studio, run the following commands: cd android-studio/bin ./studio.sh Follow the steps in the setup wizard to complete the installation. If you want to run Android Applications in the Android Emulator, follow the steps below.","title":"2. Install Android Studio"},{"location":"getting-started/installing_dependencies/linux/#2-install-android-ndk","text":"On the \u201cWelcome to Android\u201d screen, click Configure and select SDK Manager. Click on the SDK Tools tab. Select NDK from the list and click OK. Confirm the change by clicking OK in the popup window. Accept the NDK license agreement. The NDK component is being installed, grab another drink. After the installation has finished, click Finish. The installation is now complete. Note In order to run boden , the studio command-line tool must be installed. Please follow the instructions shown when calling boden for the first time after Android Studio has been installed: Open Android Studio, open a project, and then select Tools => Create Command-Line Launcher.","title":"2. Install Android NDK"},{"location":"getting-started/installing_dependencies/linux/#3-configure-ubuntu-for-running-android-emulator","text":"Open up a terminal and run the following command: sudo adduser YOUR_USERNAME kvm Log out of Ubuntu by typing: gnome-session-quit Log back in. Android Emulator should now work on your system.","title":"3. Configure Ubuntu for Running Android Emulator"},{"location":"getting-started/installing_dependencies/linux/#didnt-work","text":"Please let us know . We're happy to help!","title":"Didn't work?"},{"location":"getting-started/installing_dependencies/mac-android/","text":"Setting up macOS for Android builds \u00b6 1. Install Homebrew, Java, Python, and CMake \u00b6 Install Homebrew: /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" Install Java 8: brew tap caskroom/versions brew cask install homebrew/cask-versions/adoptopenjdk8 Install Python and CMake: brew install python3 cmake ninja 2. Install Android Studio \u00b6 2.1 Download Android Studio \u00b6 Go to https://developer.android.com/studio. Click \u201cDownload Android Studio\". Agree to the Terms and Conditions. 2.2 Complete the Installation \u00b6 Once the download is completed, open the DMG. Drag Android Studio.app and drop it on the Applications folder icon. Open Android Studio using Finder or Spotlight. Follow the steps in the setup wizard. Stay on the \"Welcome to Android\" screen and complete the steps below to complete the installation. Note It's sufficient to select the default setup type in the Android Studio Setup wizard. When asked, grant permission to the Intel HAXM installer to enable Android device emulation. If Intel's HAXM installation fails, please download the latest release from https://github.com/intel/haxm/releases and install it manually. 2.3 Install Android NDK \u00b6 On the \u201cWelcome to Android\u201d screen, click \u201cConfigure\u201d and select \u201cSDK Manager\". Click on the \u201cSDK Tools\u201d tab. Select \u201cNDK\u201d from the list and click OK. A prompt appears asking you to confirm the change. Do so by clicking OK. Accept the NDK license agreement. The NDK component is being installed, grab another drink. After the installation has finished, click Finish. The installation is now complete. Note In order to run boden , the studio command-line tool must be installed. Please follow the instructions shown when calling boden for the first time after Android Studio has been installed: Open Android Studio, open a project, and then select Tools => Create Command-Line Launcher. Didn't work? \u00b6 Please let us know . We're happy to help!","title":"Setting up macOS for Android builds"},{"location":"getting-started/installing_dependencies/mac-android/#setting-up-macos-for-android-builds","text":"","title":"Setting up macOS for Android builds"},{"location":"getting-started/installing_dependencies/mac-android/#1-install-homebrew-java-python-and-cmake","text":"Install Homebrew: /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" Install Java 8: brew tap caskroom/versions brew cask install homebrew/cask-versions/adoptopenjdk8 Install Python and CMake: brew install python3 cmake ninja","title":"1. Install Homebrew, Java, Python, and CMake"},{"location":"getting-started/installing_dependencies/mac-android/#2-install-android-studio","text":"","title":"2. Install Android Studio"},{"location":"getting-started/installing_dependencies/mac-android/#21-download-android-studio","text":"Go to https://developer.android.com/studio. Click \u201cDownload Android Studio\". Agree to the Terms and Conditions.","title":"2.1 Download Android Studio"},{"location":"getting-started/installing_dependencies/mac-android/#22-complete-the-installation","text":"Once the download is completed, open the DMG. Drag Android Studio.app and drop it on the Applications folder icon. Open Android Studio using Finder or Spotlight. Follow the steps in the setup wizard. Stay on the \"Welcome to Android\" screen and complete the steps below to complete the installation. Note It's sufficient to select the default setup type in the Android Studio Setup wizard. When asked, grant permission to the Intel HAXM installer to enable Android device emulation. If Intel's HAXM installation fails, please download the latest release from https://github.com/intel/haxm/releases and install it manually.","title":"2.2 Complete the Installation"},{"location":"getting-started/installing_dependencies/mac-android/#23-install-android-ndk","text":"On the \u201cWelcome to Android\u201d screen, click \u201cConfigure\u201d and select \u201cSDK Manager\". Click on the \u201cSDK Tools\u201d tab. Select \u201cNDK\u201d from the list and click OK. A prompt appears asking you to confirm the change. Do so by clicking OK. Accept the NDK license agreement. The NDK component is being installed, grab another drink. After the installation has finished, click Finish. The installation is now complete. Note In order to run boden , the studio command-line tool must be installed. Please follow the instructions shown when calling boden for the first time after Android Studio has been installed: Open Android Studio, open a project, and then select Tools => Create Command-Line Launcher.","title":"2.3 Install Android NDK"},{"location":"getting-started/installing_dependencies/mac-android/#didnt-work","text":"Please let us know . We're happy to help!","title":"Didn't work?"},{"location":"getting-started/installing_dependencies/mac-ios/","text":"Setting up macOS for iOS builds \u00b6 1. Install Xcode \u00b6 Open the App Store app by clicking on the Apple logo in the menu bar and then selecting \u201cApp Store...\". Click on the search field and type Xcode. Locate Xcode and click Get. The store page for Xcode opens up. Click the Get button again. Once installed, open Xcode by clicking Open and agree to the terms of service. Xcode will install components afterwards. Finally, open up a terminal and run sudo xcode-select -s /Applications/Xcode.app/Contents/Developer . 2. Install Homebrew, Python, and CMake \u00b6 Install Homebrew: /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" Install Python and CMake: brew install python3 cmake Didn't work? \u00b6 Please let us know . We're happy to help!","title":"Setting up macOS for iOS builds"},{"location":"getting-started/installing_dependencies/mac-ios/#setting-up-macos-for-ios-builds","text":"","title":"Setting up macOS for iOS builds"},{"location":"getting-started/installing_dependencies/mac-ios/#1-install-xcode","text":"Open the App Store app by clicking on the Apple logo in the menu bar and then selecting \u201cApp Store...\". Click on the search field and type Xcode. Locate Xcode and click Get. The store page for Xcode opens up. Click the Get button again. Once installed, open Xcode by clicking Open and agree to the terms of service. Xcode will install components afterwards. Finally, open up a terminal and run sudo xcode-select -s /Applications/Xcode.app/Contents/Developer .","title":"1. Install Xcode"},{"location":"getting-started/installing_dependencies/mac-ios/#2-install-homebrew-python-and-cmake","text":"Install Homebrew: /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" Install Python and CMake: brew install python3 cmake","title":"2. Install Homebrew, Python, and CMake"},{"location":"getting-started/installing_dependencies/mac-ios/#didnt-work","text":"Please let us know . We're happy to help!","title":"Didn't work?"},{"location":"getting-started/installing_dependencies/windows/","text":"Setting up Windows for Android builds \u00b6 1. Install Python, CMake, Ninja, Git, and JDK 8 \u00b6 Download and install Python3 from https://www.python.org/downloads/ (ca. 25MB). Important: Make sure to activate the \u201cAdd Python to PATH\" checkbox at the bottom of the installer window. Download and install CMake from https://cmake.org/download/ (ca. 19MB). We recommend using the latest win64-x64 stable release installer binary. Important: When installing CMake, make sure to choose \u201cAdd the Cmake binary to the PATH environment variable\u201d. Download and install Ninja from https://github.com/ninja-build/ninja/releases . We recommend using the latest Ninja version. Download and install git from https://git-scm.com/download/win (ca. 42MB). If you\u2019re unsure about the available options presented in the installer, just keep the default settings. Dowload and install JDK 8 from https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html (ca. 200MB). 2. Install Android Studio \u00b6 2.1 Download and Install Android Studio \u00b6 Download Android Studio from https://developer.android.com/studio/ (ca. 1GB) and start the downloaded EXE file. Follow the steps in the setup wizard. Stay on the \"Welcome to Android\" screen and complete the steps below to complete the installation. Note It's sufficient to select the default setup type in the Android Studio Setup wizard. When asked, grant permission to the Intel HAXM installer to enable Android device emulation. 2.2 Install Android NDK \u00b6 On the \u201cWelcome to Android\u201d screen, click Configure and select SDK Manager. Click on the SDK Tools tab. Select NDK from the list and click OK. Confirm the change by clicking OK in the popup window. Accept the NDK license agreement. The NDK component is being installed, grab another drink. After the installation has finished, click Finish. The installation is now complete. Didn't work? \u00b6 Please let us know . We're happy to help!","title":"Setting up Windows for Android builds"},{"location":"getting-started/installing_dependencies/windows/#setting-up-windows-for-android-builds","text":"","title":"Setting up Windows for Android builds"},{"location":"getting-started/installing_dependencies/windows/#1-install-python-cmake-ninja-git-and-jdk-8","text":"Download and install Python3 from https://www.python.org/downloads/ (ca. 25MB). Important: Make sure to activate the \u201cAdd Python to PATH\" checkbox at the bottom of the installer window. Download and install CMake from https://cmake.org/download/ (ca. 19MB). We recommend using the latest win64-x64 stable release installer binary. Important: When installing CMake, make sure to choose \u201cAdd the Cmake binary to the PATH environment variable\u201d. Download and install Ninja from https://github.com/ninja-build/ninja/releases . We recommend using the latest Ninja version. Download and install git from https://git-scm.com/download/win (ca. 42MB). If you\u2019re unsure about the available options presented in the installer, just keep the default settings. Dowload and install JDK 8 from https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html (ca. 200MB).","title":"1. Install Python, CMake, Ninja, Git, and JDK 8"},{"location":"getting-started/installing_dependencies/windows/#2-install-android-studio","text":"","title":"2. Install Android Studio"},{"location":"getting-started/installing_dependencies/windows/#21-download-and-install-android-studio","text":"Download Android Studio from https://developer.android.com/studio/ (ca. 1GB) and start the downloaded EXE file. Follow the steps in the setup wizard. Stay on the \"Welcome to Android\" screen and complete the steps below to complete the installation. Note It's sufficient to select the default setup type in the Android Studio Setup wizard. When asked, grant permission to the Intel HAXM installer to enable Android device emulation.","title":"2.1 Download and Install Android Studio"},{"location":"getting-started/installing_dependencies/windows/#22-install-android-ndk","text":"On the \u201cWelcome to Android\u201d screen, click Configure and select SDK Manager. Click on the SDK Tools tab. Select NDK from the list and click OK. Confirm the change by clicking OK in the popup window. Accept the NDK license agreement. The NDK component is being installed, grab another drink. After the installation has finished, click Finish. The installation is now complete.","title":"2.2 Install Android NDK"},{"location":"getting-started/installing_dependencies/windows/#didnt-work","text":"Please let us know . We're happy to help!","title":"Didn't work?"},{"location":"getting-started/troubleshooting/","text":"Troubleshooting \u00b6 1. Android Emulator won't start on Ubuntu Linux due to permission denied error \u00b6 Make sure that the qemu-kvm package is installed and your user is a member of the kvm group. See Configure Ubuntu for Running Android Emulator for further instructions. 2. boden prepare fails with a CMake error when setting up a Windows machine for Android development \u00b6 Double-check whether the right Java version is installed. Android Studio requires the openjdk-8-jdk package on Ubuntu Linux or Oracle JDK 8 on Windows. Other Java versions are not supported. 3. The Run and Build functions in Android Studio are disabled \u00b6 Android Studio may need up to several minutes for its initial preparation (gradle sync, etc.) when the project is first opened. If the build and run functions remain disabled after the preparation has finished, please wait an additional minute or two. If they still remain disabled, you may be experiencing a sporadically occurring Android Studio bug. Solution: click on the \"N processes running\" entry in the status bar and then on the play button next to \"Indexing paused due to batch update\". 4. boden.py script runs into SSL certificate exception when using Python 3 from python.org on macOS \u00b6 If you're using Python 3, you may run into an issue with SSL certificates on macOS when running boden.py or boden . We recommend installing Python 3 via Homebrew which should correctly install the required SSL certificate support for Python on your machine. If you want to stick with the version of Python 3 you have already installed, please open a Terminal and run the following commands: cd /Applications/Python\\ 3.7/ ./Install\\ Certificates.command Please replace 3.7 with the appropriate Python version if necessary. Certificate support should work correctly after running this command. Users from certain regions have also reported that the requested download addresses, specifically subdomains of gradle.org, might be blocked by certain ISPs. Please use a VPN if you think that you may be affected by such blocking measures. If all else fails, please use Python 2 to run the boden.py tool. This should work around the SSL certificate issue with Python 3. Didn't find what you're looking for? \u00b6 Please let us know . We're happy to help!","title":"Troubleshooting"},{"location":"getting-started/troubleshooting/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"getting-started/troubleshooting/#1-android-emulator-wont-start-on-ubuntu-linux-due-to-permission-denied-error","text":"Make sure that the qemu-kvm package is installed and your user is a member of the kvm group. See Configure Ubuntu for Running Android Emulator for further instructions.","title":"1. Android Emulator won't start on Ubuntu Linux due to permission denied error"},{"location":"getting-started/troubleshooting/#2-boden-prepare-fails-with-a-cmake-error-when-setting-up-a-windows-machine-for-android-development","text":"Double-check whether the right Java version is installed. Android Studio requires the openjdk-8-jdk package on Ubuntu Linux or Oracle JDK 8 on Windows. Other Java versions are not supported.","title":"2. boden prepare fails with a CMake error when setting up a Windows machine for Android development"},{"location":"getting-started/troubleshooting/#3-the-run-and-build-functions-in-android-studio-are-disabled","text":"Android Studio may need up to several minutes for its initial preparation (gradle sync, etc.) when the project is first opened. If the build and run functions remain disabled after the preparation has finished, please wait an additional minute or two. If they still remain disabled, you may be experiencing a sporadically occurring Android Studio bug. Solution: click on the \"N processes running\" entry in the status bar and then on the play button next to \"Indexing paused due to batch update\".","title":"3. The Run and Build functions in Android Studio are disabled"},{"location":"getting-started/troubleshooting/#4-bodenpy-script-runs-into-ssl-certificate-exception-when-using-python-3-from-pythonorg-on-macos","text":"If you're using Python 3, you may run into an issue with SSL certificates on macOS when running boden.py or boden . We recommend installing Python 3 via Homebrew which should correctly install the required SSL certificate support for Python on your machine. If you want to stick with the version of Python 3 you have already installed, please open a Terminal and run the following commands: cd /Applications/Python\\ 3.7/ ./Install\\ Certificates.command Please replace 3.7 with the appropriate Python version if necessary. Certificate support should work correctly after running this command. Users from certain regions have also reported that the requested download addresses, specifically subdomains of gradle.org, might be blocked by certain ISPs. Please use a VPN if you think that you may be affected by such blocking measures. If all else fails, please use Python 2 to run the boden.py tool. This should work around the SSL certificate issue with Python 3.","title":"4. boden.py script runs into SSL certificate exception when using Python 3 from python.org on macOS"},{"location":"getting-started/troubleshooting/#didnt-find-what-youre-looking-for","text":"Please let us know . We're happy to help!","title":"Didn't find what you're looking for?"},{"location":"guides/","text":"Guides Overview \u00b6 This part of the Boden Framework documentation contains guides that are intended to help you learn Boden to make it easier and more fun to write your cross-platform apps. Warning The Boden API is work in progress and may change in the coming months. Follow us on Twitter and star/watch our repo on GitHub to stay in the loop! Getting Started \u00b6 If you did not yet set up and build Boden, please refer to the Getting Started section featuring a quick start and detailed guides on how to get your system set up for building Boden. Boden Fundamentals \u00b6 Explains the Boden Property System . This part of the Guides section will be extended in the future to explain the basic Boden architecture, design considerations, and how to get started with fundamental Boden features to implement your apps. Extending Boden \u00b6 The Extending Boden section is intended to help you create your own Boden view components . It's also a good place to start if you are interested in the inner workings of Boden and how it implements wrapper classes around platform-specific features.","title":"Guides Overview"},{"location":"guides/#guides-overview","text":"This part of the Boden Framework documentation contains guides that are intended to help you learn Boden to make it easier and more fun to write your cross-platform apps. Warning The Boden API is work in progress and may change in the coming months. Follow us on Twitter and star/watch our repo on GitHub to stay in the loop!","title":"Guides Overview"},{"location":"guides/#getting-started","text":"If you did not yet set up and build Boden, please refer to the Getting Started section featuring a quick start and detailed guides on how to get your system set up for building Boden.","title":"Getting Started"},{"location":"guides/#boden-fundamentals","text":"Explains the Boden Property System . This part of the Guides section will be extended in the future to explain the basic Boden architecture, design considerations, and how to get started with fundamental Boden features to implement your apps.","title":"Boden Fundamentals"},{"location":"guides/#extending-boden","text":"The Extending Boden section is intended to help you create your own Boden view components . It's also a good place to start if you are interested in the inner workings of Boden and how it implements wrapper classes around platform-specific features.","title":"Extending Boden"},{"location":"guides/extending/wrap_java_class/","text":"Wrapping a Java class \u00b6 Wrapping a Java class in Boden is done using the classes in bdn::java::wrapper . There are two classes, Object and JTObject . JTObject is a convenience class that uses templates to make creating new wrapper simpler. First Steps \u00b6 In this example we show the simplest way to wrap a java class: constexpr const char kMyJavaClassName [] = \"io/mycompany/MyJavaClass\" ; using MyJavaClass = bdn :: java :: wrapper :: JTObject < kMyJavaClassName > ; With these definitions you can now instantiate a Java class from C++ in your code: MyJavaClass myClass ; This will automatically instantiate the Java class for you. Wrapping Java Class Methods \u00b6 To be able to add methods to your wrapper class, add the following to the previous example code: constexpr const char kMyJavaClassName [] = \"io/mycompany/MyJavaClass\" ; class MyJavaClass : public bdn :: java :: wrapper :: JTObject < kMyJavaClassName > { public : using bdn :: java :: wrapper :: JTObject < kMyJavaClassName >:: JTObject ; }; Now that you have your class ready, you can start to add methods to it. Boden provides the convenience class JavaMethod to simplify the process. constexpr const char kMyJavaClassName [] = \"io/mycompany/MyJavaClass\" ; class MyJavaClass : public bdn :: java :: wrapper :: JTObject < kMyJavaClassName > { public : using bdn :: java :: wrapper :: JTObject < kMyJavaClassName >:: JTObject ; public : bdn :: JavaMethod < void ( bdn :: JavaString ) > testFunction { this , \"testFunction\" }; }; JavaMethod itself is a template that takes a function pointer style argument. It needs to be initialized with a pointer to the object ( this ) and the name of the function has be be provided as a string (in this case testFunction ). Now you can call the function: MyJavaClass myClass ; myClass . testFunction ( \"Hello World\" ); Deriving from JTObject Base Classes \u00b6 To derive from a class, you pass through the new class name as a template argument. Building on the previous example you change MyJavaClass to the following (changes are highlighted below): constexpr const char kMyJavaClassName [] = \"io/mycompany/MyJavaClass\" ; template < const char * javaClassName = kMyJavaClassName > class BaseMyJavaClass : public bdn :: java :: wrapper :: JTObject < javaClassName > { public : using bdn :: java :: wrapper :: JTObject < javaClassName >:: JTObject ; public : bdn :: JavaMethod < void ( bdn :: JavaString ) > testFunction { this , \"testFunction\" }; }; using MyJavaClass = BaseMyJavaClass <> ; In the first highlighted line you change MyJavaClass to be a template class taking a const char* so you can override the Java class name. For convenience, we set the original name as a default argument. In the second line you change the class name to BaseMyJavaClass . This again is for convenience. In the end we create a using declaration so our code can continue to use MyJavaClass as a class name. Now, just as before, you can create a new class that derives from BaseMyJavaClass : constexpr const char kDerivedJavaClassName [] = \"io/mycompany/DervivedJavaClass\" ; class DerivedJavaClass : public BaseMyJavaClass < kDerivedJavaClassName > { public : using BaseMyJavaClass < kDerivedJavaClassName >:: BaseMyJavaClass ; }; You can now instantiate the derived class. You do not need to redefine methods in the derived class if your Java class overloads them. They will work automatically as long as they are defined in the base class. DerivedJavaClass object ; object . testFunction ( \"Hello World\" );","title":"Wrapping a Java class"},{"location":"guides/extending/wrap_java_class/#wrapping-a-java-class","text":"Wrapping a Java class in Boden is done using the classes in bdn::java::wrapper . There are two classes, Object and JTObject . JTObject is a convenience class that uses templates to make creating new wrapper simpler.","title":"Wrapping a Java class"},{"location":"guides/extending/wrap_java_class/#first-steps","text":"In this example we show the simplest way to wrap a java class: constexpr const char kMyJavaClassName [] = \"io/mycompany/MyJavaClass\" ; using MyJavaClass = bdn :: java :: wrapper :: JTObject < kMyJavaClassName > ; With these definitions you can now instantiate a Java class from C++ in your code: MyJavaClass myClass ; This will automatically instantiate the Java class for you.","title":"First Steps"},{"location":"guides/extending/wrap_java_class/#wrapping-java-class-methods","text":"To be able to add methods to your wrapper class, add the following to the previous example code: constexpr const char kMyJavaClassName [] = \"io/mycompany/MyJavaClass\" ; class MyJavaClass : public bdn :: java :: wrapper :: JTObject < kMyJavaClassName > { public : using bdn :: java :: wrapper :: JTObject < kMyJavaClassName >:: JTObject ; }; Now that you have your class ready, you can start to add methods to it. Boden provides the convenience class JavaMethod to simplify the process. constexpr const char kMyJavaClassName [] = \"io/mycompany/MyJavaClass\" ; class MyJavaClass : public bdn :: java :: wrapper :: JTObject < kMyJavaClassName > { public : using bdn :: java :: wrapper :: JTObject < kMyJavaClassName >:: JTObject ; public : bdn :: JavaMethod < void ( bdn :: JavaString ) > testFunction { this , \"testFunction\" }; }; JavaMethod itself is a template that takes a function pointer style argument. It needs to be initialized with a pointer to the object ( this ) and the name of the function has be be provided as a string (in this case testFunction ). Now you can call the function: MyJavaClass myClass ; myClass . testFunction ( \"Hello World\" );","title":"Wrapping Java Class Methods"},{"location":"guides/extending/wrap_java_class/#deriving-from-jtobject-base-classes","text":"To derive from a class, you pass through the new class name as a template argument. Building on the previous example you change MyJavaClass to the following (changes are highlighted below): constexpr const char kMyJavaClassName [] = \"io/mycompany/MyJavaClass\" ; template < const char * javaClassName = kMyJavaClassName > class BaseMyJavaClass : public bdn :: java :: wrapper :: JTObject < javaClassName > { public : using bdn :: java :: wrapper :: JTObject < javaClassName >:: JTObject ; public : bdn :: JavaMethod < void ( bdn :: JavaString ) > testFunction { this , \"testFunction\" }; }; using MyJavaClass = BaseMyJavaClass <> ; In the first highlighted line you change MyJavaClass to be a template class taking a const char* so you can override the Java class name. For convenience, we set the original name as a default argument. In the second line you change the class name to BaseMyJavaClass . This again is for convenience. In the end we create a using declaration so our code can continue to use MyJavaClass as a class name. Now, just as before, you can create a new class that derives from BaseMyJavaClass : constexpr const char kDerivedJavaClassName [] = \"io/mycompany/DervivedJavaClass\" ; class DerivedJavaClass : public BaseMyJavaClass < kDerivedJavaClassName > { public : using BaseMyJavaClass < kDerivedJavaClassName >:: BaseMyJavaClass ; }; You can now instantiate the derived class. You do not need to redefine methods in the derived class if your Java class overloads them. They will work automatically as long as they are defined in the base class. DerivedJavaClass object ; object . testFunction ( \"Hello World\" );","title":"Deriving from JTObject Base Classes"},{"location":"guides/extending/writing_view/","text":"Writing a New View \u00b6 Introduction \u00b6 This guide will use the Button class implementation as an example to demonstrate the steps needed to extend the Boden Framework with new view components. In contrast to Writing a View Module , this guide will explain how to extend the Boden Framework itself with a new integrated view component rather than adding an optional component which can be shipped independently. Please refer to Writing a View Module if you want to create a standalone view component. The View \u00b6 Boden views consist of two parts: The outward facing platform-independent View class. This is what users of your view component will usually see and interact with. The internal platform-specific View::Core implementation. This part of the view implementation is usually hidden from users of your new view component. The first step in writing a new view is to create a new class derived from View . Header \u00b6 Create a new header in framework/ui/include/bdn called ExampleButtonView.h : #pragma once #include <bdn/ui/View.h> namespace bdn { class ExampleButtonView : public ui :: View { public : ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory = nullptr ); }; } Source \u00b6 In boden/framework/ui/src , create a file called ExampleButtonView.cpp : #include <bdn/ExampleButtonView.h> namespace bdn { ExampleButtonView :: ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory ) : View ( viewCoreFactory ) { } } The View Core \u00b6 Create a new Core interface as an inner class of ExampleButtonView : #pragma once namespace bdn { class ExampleButtonView : public ui :: View { // ... public : class Core { }; }; } Full #pragma once namespace bdn { class ExampleButtonView : public ui :: View { public : ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory = nullptr ); public : class Core { }; }; } The iOS Implementation \u00b6 Header \u00b6 The core's actual implementation is platform-specific. Create a new Objective-C++ header in framework/ui/platforms/ios/include/bdn/ios/ called ExampleButtonViewCore.hh : #pragma once #include <bdn/ExampleButtonView.h> #include <bdn/ExampleButtonViewCore.h> #import <bdn/ios/ViewCore.hh> namespace bdn :: ios { class ExampleButtonViewCore : public ViewCore , virtual public bdn :: ExampleButtonView :: Core { public : ExampleButtonViewCore ( const std :: shared_ptr < bdn :: ViewCoreFactory > & viewCoreFactory ); }; } Source \u00b6 Create a new Objective-C++ source file in framework/ui/platforms/ios/src called ExampleButtonViewCore.mm : #import <bdn/ios/ExampleButtonViewCore.hh> @interface ExampleUIButton : UIButton < UIViewWithFrameNotification > @property ( nonatomic , assign ) std :: weak_ptr < bdn :: ios :: ExampleButtonViewCore > core ; @end @implementation ExampleUIButton - ( void ) setViewCore: ( std :: weak_ptr < bdn :: ios :: ViewCore > ) viewCore { self . core = std :: dynamic_pointer_cast < bdn :: ios :: ExampleButtonViewCore > ( viewCore . lock ()); } - ( void ) setFrame: ( CGRect ) frame { [ super setFrame : frame ]; if ( auto core = self . core . lock ()) { core -> frameChanged (); } } namespace bdn :: ios { ExampleButtonViewCore :: ExampleButtonViewCore ( const std :: shared_ptr < ViewCoreFactory >& viewCoreFactory ) : ViewCore ( viewCoreFactory , [ ExampleUIButton buttonWithType : UIButtonTypeSystem ]) { } } Note For more information about the intricacies of implementing view cores please refer to ViewCore and iOS ViewCore . Connecting the View Core to the View \u00b6 Boden uses the ViewCoreFactory to create instances of the view core. To create the connection between a view and its core, add the following boilerplate to the classes: View Header \u00b6 Add the following code to ExampleButtonView.h : #include <bdn/ViewUtilities.h> namespace bdn :: detail { VIEW_CORE_REGISTRY_DECLARATION ( ExampleButtonView ) } ExampleButtonView.h #pragma once #include <bdn/ui/View.h> #include <bdn/ViewUtilities.h> namespace bdn { namespace detail { VIEW_CORE_REGISTRY_DECLARATION ( ExampleButtonView ) } class ExampleButtonView : public ui :: View { public : ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory = nullptr ); public : class Core { }; }; } View Implementation \u00b6 Add the following code to ExampleButtonView.cpp : namespace bdn :: detail { VIEW_CORE_REGISTRY_IMPLEMENTATION ( ExampleButtonView ) } ExampleButtonView :: ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory ) : View ( viewCoreFactory ) { bdn :: detail :: VIEW_CORE_REGISTER ( ExampleButtonView , View :: viewCoreFactory ()); } ExampleButtonView.cpp #include <bdn/ExampleButtonView.h> namespace bdn { namespace detail { VIEW_CORE_REGISTRY_IMPLEMENTATION ( ExampleButtonView ) } ExampleButtonView :: ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory ) : View ( viewCoreFactory ) { bdn :: detail :: VIEW_CORE_REGISTER ( ExampleButtonView , View :: viewCoreFactory ()); } } View Core Implementation \u00b6 Add the following code to ExampleButtonViewCore.mm : namespace bdn :: detail { CORE_REGISTER ( ExampleButtonView , bdn :: ios :: ExampleButtonViewCore , ExampleButtonView ) } ExampleButtonViewCore.mm #import <bdn/ios/ExampleButtonViewCore.hh> @interface ExampleUIButton : UIButton < UIViewWithFrameNotification > @property ( nonatomic , assign ) std :: weak_ptr < bdn :: ios :: ExampleButtonViewCore > core ; @end @implementation ExampleUIButton - ( void ) setViewCore: ( std :: weak_ptr < bdn :: ios :: ViewCore > ) viewCore { self . core = std :: dynamic_pointer_cast < bdn :: ios :: ExampleButtonViewCore > ( viewCore . lock ()); } - ( void ) setFrame: ( CGRect ) frame { [ super setFrame : frame ]; if ( auto core = self . core . lock ()) { core -> frameChanged (); } } @end namespace bdn :: detail { CORE_REGISTER ( ExampleButtonView , bdn :: ios :: ExampleButtonViewCore , ExampleButtonView ) } namespace bdn :: ios { ExampleButtonViewCore :: ExampleButtonViewCore ( const std :: shared_ptr < bdn :: ViewCoreFactory > & viewCoreFactory ) : ViewCore ( viewCoreFactory , [ ExampleUIButton buttonWithType : UIButtonTypeSystem ]) { } ExampleButtonViewCore ::~ ExampleButtonViewCore () { } } Adding Properties \u00b6 To represent properties of a view, use the Property class. As an example, add a label property so users of your view can set the button's label. class ExampleButtonView : public ui :: View { public : Property < std :: string > label ; } ExampleButtonView.h #pragma once #include <bdn/ui/View.h> namespace bdn { namespace detail { VIEW_CORE_REGISTRY_DECLARATION ( ExampleButtonView ) } class ExampleButtonView : public ui :: View { public : Property < std :: string > label ; public : ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory = nullptr ); public : class Core { }; }; } To connect the property to the core, replicate the property in the Core interface: class Core { public : Property < std :: string > label ; } ExampleButtonView.h #pragma once #include <bdn/ui/View.h> namespace bdn { namespace detail { VIEW_CORE_REGISTRY_DECLARATION ( ExampleButtonView ) } class ExampleButtonView : public ui :: View { public : Property < std :: string > label ; public : ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory = nullptr ); public : class Core { public : Property < std :: string > label ; }; }; } To bind the two label properties in View and Core properties, override the View::bindViewCore() function: void ExampleButtonView::bindViewCore () { View :: bindViewCore (); auto buttonCore = core < ExampleButtonView :: Core > (); buttonCore -> label . bind ( label ); } ExampleButtonView.cpp #include <bdn/ExampleButtonView.h> namespace bdn { namespace detail { VIEW_CORE_REGISTRY_IMPLEMENTATION ( ExampleButtonView ) } ExampleButtonView :: ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory ) : View ( viewCoreFactory ) { bdn :: detail :: VIEW_CORE_REGISTER ( ExampleButtonView , View :: viewCoreFactory ()); } void ExampleButtonView :: bindViewCore () { View :: bindViewCore (); auto buttonCore = core < ExampleButtonView :: Core > (); buttonCore -> label . bind ( label ); } } Now it is easy to react to changes to label in the iOS Implementation by adding an onChange() handler in the view core's init function. namespace bdn :: ios { void ExampleButtonViewCore::init () { ViewCore :: init (); label . onChange () += [ = ]( auto newValue ) { auto uiButton = ( UIButton * ) uiView (); [ uiButton setTitle : bdn :: fk :: stringToNSString ( value ) forState : UIControlStateNormal ]]; }; } } ExampleButtonViewCore.mm #import <bdn/ios/ExampleButtonViewCore.hh> #import <bdn/foundationkit/stringUtil.hh> @interface ExampleUIButton : UIButton < UIViewWithFrameNotification > @property ( nonatomic , assign ) std :: weak_ptr < bdn :: ios :: ExampleButtonViewCore > core ; @end @implementation ExampleUIButton - ( void ) setViewCore: ( std :: weak_ptr < bdn :: ios :: ViewCore > ) viewCore { self . core = std :: dynamic_pointer_cast < bdn :: ios :: ExampleButtonViewCore > ( viewCore . lock ()); } - ( void ) setFrame: ( CGRect ) frame { [ super setFrame : frame ]; if ( auto core = self . core . lock ()) { core -> frameChanged (); } } @end namespace bdn :: detail { CORE_REGISTER ( ExampleButtonView , bdn :: ios :: ExampleButtonViewCore , ExampleButtonView ) } namespace bdn :: ios { ExampleButtonViewCore :: ExampleButtonViewCore ( const std :: shared_ptr < bdn :: ViewCoreFactory > & viewCoreFactory ) : ViewCore ( viewCoreFactory , [ ExampleUIButton buttonWithType : UIButtonTypeSystem ]) { } ExampleButtonViewCore ::~ ExampleButtonViewCore () { } void ExampleButtonViewCore :: init () { ViewCore :: init (); label . onChange () += [ = ]( auto newValue ) { auto uiButton = ( UIButton * ) uiView (); [ uiButton setTitle : bdn :: fk :: stringToNSString ( value ) forState : UIControlStateNormal ]]; }; } } Sending Notifications to the View \u00b6 To allow users of your new class to react to button clicks, you can use a combination of a Notifier and a WeakCallback . First, add the WeakCallback to your Core: class ExampleButtonView : public ui :: View { public : class Core { public : WeakCallback < void () > _clickCallback ; } } ExampleButtonView.h #pragma once #include <bdn/ui/View.h> namespace bdn { namespace detail { VIEW_CORE_REGISTRY_DECLARATION ( ExampleButtonView ) } class ExampleButtonView : public ui :: View { public : Property < std :: string > label ; public : ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory = nullptr ); public : class Core { public : Property < std :: string > label ; public : WeakCallback < void () > _clickCallback ; }; }; } Now you can fire the callback from your UIButton subclass: - ( void ) clicked { if ( auto core = self . core . lock ()) { core -> _clickCallback . fire (); } } ExampleButtonViewCore.mm #import <bdn/ios/ExampleButtonViewCore.hh> #import <bdn/foundationkit/stringUtil.hh> @interface ExampleUIButton : UIButton < UIViewWithFrameNotification > @property ( nonatomic , assign ) std :: weak_ptr < bdn :: ios :: ExampleButtonViewCore > core ; @end @implementation ExampleUIButton - ( void ) setViewCore: ( std :: weak_ptr < bdn :: ios :: ViewCore > ) viewCore { self . core = std :: dynamic_pointer_cast < bdn :: ios :: ExampleButtonViewCore > ( viewCore . lock ()); } - ( void ) setFrame: ( CGRect ) frame { [ super setFrame : frame ]; if ( auto core = self . core . lock ()) { core -> frameChanged (); } } - ( void ) clicked { if ( auto core = self . core . lock ()) { core -> _clickCallback . fire (); } } @end namespace bdn :: detail { CORE_REGISTER ( ExampleButtonView , bdn :: ios :: ExampleButtonViewCore , ExampleButtonView ) } namespace bdn :: ios { ExampleButtonViewCore :: ExampleButtonViewCore ( const std :: shared_ptr < bdn :: ViewCoreFactory > & viewCoreFactory ) : ViewCore ( viewCoreFactory , [ ExampleUIButton buttonWithType : UIButtonTypeSystem ]) { } ExampleButtonViewCore ::~ ExampleButtonViewCore () { } void ExampleButtonViewCore :: init () { ViewCore :: init (); label . onChange () += [ = ]( auto newValue ) { auto uiButton = ( UIButton * ) uiView (); [ uiButton setTitle : bdn :: fk :: stringToNSString ( value ) forState : UIControlStateNormal ]]; }; } } Add the notifier and the callback receiver to your View class: class ExampleButtonView { public : Notifier < const ClickEvent &> _onClick ; WeakCallback < void () >:: Receiver _clickCallbackReceiver ; } ExampleButtonView.h #pragma once #include <bdn/ui/View.h> namespace bdn { namespace detail { VIEW_CORE_REGISTRY_DECLARATION ( ExampleButtonView ) } class ExampleButtonView : public ui :: View { public : Property < std :: string > label ; public : ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory = nullptr ); public : Notifier < const ClickEvent &> _onClick ; WeakCallback < void () >:: Receiver _clickCallbackReceiver ; public : class Core { public : Property < std :: string > label ; public : WeakCallback < void () > _clickCallback ; }; }; } Finally, connect it to the WeakCallback : void ExampleButtonView::bindViewCore () { _clickCallbackReceiver = buttonCore -> _clickCallback . set ([ = ](){ ClickEvent evt ( shared_from_this ()); _onClick . notify ( evt ); }); } ExampleButtonView.cpp #include <bdn/ExampleButtonView.h> namespace bdn { namespace detail { VIEW_CORE_REGISTRY_IMPLEMENTATION ( ExampleButtonView ) } ExampleButtonView :: ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory ) : View ( viewCoreFactory ) { bdn :: detail :: VIEW_CORE_REGISTER ( ExampleButtonView , View :: viewCoreFactory ()); } void ExampleButtonView :: bindViewCore () { View :: bindViewCore (); auto buttonCore = core < ExampleButtonView :: Core > (); buttonCore -> label . bind ( label ); _clickCallbackReceiver = buttonCore -> _clickCallback . set ([ = ](){ ClickEvent evt ( shared_from_this ()); _onClick . notify ( evt ); }); } } Congratulations, your first custom view should be working now!","title":"Writing a New View"},{"location":"guides/extending/writing_view/#writing-a-new-view","text":"","title":"Writing a New View"},{"location":"guides/extending/writing_view/#introduction","text":"This guide will use the Button class implementation as an example to demonstrate the steps needed to extend the Boden Framework with new view components. In contrast to Writing a View Module , this guide will explain how to extend the Boden Framework itself with a new integrated view component rather than adding an optional component which can be shipped independently. Please refer to Writing a View Module if you want to create a standalone view component.","title":"Introduction"},{"location":"guides/extending/writing_view/#the-view","text":"Boden views consist of two parts: The outward facing platform-independent View class. This is what users of your view component will usually see and interact with. The internal platform-specific View::Core implementation. This part of the view implementation is usually hidden from users of your new view component. The first step in writing a new view is to create a new class derived from View .","title":"The View"},{"location":"guides/extending/writing_view/#header","text":"Create a new header in framework/ui/include/bdn called ExampleButtonView.h : #pragma once #include <bdn/ui/View.h> namespace bdn { class ExampleButtonView : public ui :: View { public : ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory = nullptr ); }; }","title":"Header"},{"location":"guides/extending/writing_view/#source","text":"In boden/framework/ui/src , create a file called ExampleButtonView.cpp : #include <bdn/ExampleButtonView.h> namespace bdn { ExampleButtonView :: ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory ) : View ( viewCoreFactory ) { } }","title":"Source"},{"location":"guides/extending/writing_view/#the-view-core","text":"Create a new Core interface as an inner class of ExampleButtonView : #pragma once namespace bdn { class ExampleButtonView : public ui :: View { // ... public : class Core { }; }; } Full #pragma once namespace bdn { class ExampleButtonView : public ui :: View { public : ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory = nullptr ); public : class Core { }; }; }","title":"The View Core"},{"location":"guides/extending/writing_view/#the-ios-implementation","text":"","title":"The iOS Implementation"},{"location":"guides/extending/writing_view/#header_1","text":"The core's actual implementation is platform-specific. Create a new Objective-C++ header in framework/ui/platforms/ios/include/bdn/ios/ called ExampleButtonViewCore.hh : #pragma once #include <bdn/ExampleButtonView.h> #include <bdn/ExampleButtonViewCore.h> #import <bdn/ios/ViewCore.hh> namespace bdn :: ios { class ExampleButtonViewCore : public ViewCore , virtual public bdn :: ExampleButtonView :: Core { public : ExampleButtonViewCore ( const std :: shared_ptr < bdn :: ViewCoreFactory > & viewCoreFactory ); }; }","title":"Header"},{"location":"guides/extending/writing_view/#source_1","text":"Create a new Objective-C++ source file in framework/ui/platforms/ios/src called ExampleButtonViewCore.mm : #import <bdn/ios/ExampleButtonViewCore.hh> @interface ExampleUIButton : UIButton < UIViewWithFrameNotification > @property ( nonatomic , assign ) std :: weak_ptr < bdn :: ios :: ExampleButtonViewCore > core ; @end @implementation ExampleUIButton - ( void ) setViewCore: ( std :: weak_ptr < bdn :: ios :: ViewCore > ) viewCore { self . core = std :: dynamic_pointer_cast < bdn :: ios :: ExampleButtonViewCore > ( viewCore . lock ()); } - ( void ) setFrame: ( CGRect ) frame { [ super setFrame : frame ]; if ( auto core = self . core . lock ()) { core -> frameChanged (); } } namespace bdn :: ios { ExampleButtonViewCore :: ExampleButtonViewCore ( const std :: shared_ptr < ViewCoreFactory >& viewCoreFactory ) : ViewCore ( viewCoreFactory , [ ExampleUIButton buttonWithType : UIButtonTypeSystem ]) { } } Note For more information about the intricacies of implementing view cores please refer to ViewCore and iOS ViewCore .","title":"Source"},{"location":"guides/extending/writing_view/#connecting-the-view-core-to-the-view","text":"Boden uses the ViewCoreFactory to create instances of the view core. To create the connection between a view and its core, add the following boilerplate to the classes:","title":"Connecting the View Core to the\u00a0View"},{"location":"guides/extending/writing_view/#view-header","text":"Add the following code to ExampleButtonView.h : #include <bdn/ViewUtilities.h> namespace bdn :: detail { VIEW_CORE_REGISTRY_DECLARATION ( ExampleButtonView ) } ExampleButtonView.h #pragma once #include <bdn/ui/View.h> #include <bdn/ViewUtilities.h> namespace bdn { namespace detail { VIEW_CORE_REGISTRY_DECLARATION ( ExampleButtonView ) } class ExampleButtonView : public ui :: View { public : ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory = nullptr ); public : class Core { }; }; }","title":"View Header"},{"location":"guides/extending/writing_view/#view-implementation","text":"Add the following code to ExampleButtonView.cpp : namespace bdn :: detail { VIEW_CORE_REGISTRY_IMPLEMENTATION ( ExampleButtonView ) } ExampleButtonView :: ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory ) : View ( viewCoreFactory ) { bdn :: detail :: VIEW_CORE_REGISTER ( ExampleButtonView , View :: viewCoreFactory ()); } ExampleButtonView.cpp #include <bdn/ExampleButtonView.h> namespace bdn { namespace detail { VIEW_CORE_REGISTRY_IMPLEMENTATION ( ExampleButtonView ) } ExampleButtonView :: ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory ) : View ( viewCoreFactory ) { bdn :: detail :: VIEW_CORE_REGISTER ( ExampleButtonView , View :: viewCoreFactory ()); } }","title":"View Implementation"},{"location":"guides/extending/writing_view/#view-core-implementation","text":"Add the following code to ExampleButtonViewCore.mm : namespace bdn :: detail { CORE_REGISTER ( ExampleButtonView , bdn :: ios :: ExampleButtonViewCore , ExampleButtonView ) } ExampleButtonViewCore.mm #import <bdn/ios/ExampleButtonViewCore.hh> @interface ExampleUIButton : UIButton < UIViewWithFrameNotification > @property ( nonatomic , assign ) std :: weak_ptr < bdn :: ios :: ExampleButtonViewCore > core ; @end @implementation ExampleUIButton - ( void ) setViewCore: ( std :: weak_ptr < bdn :: ios :: ViewCore > ) viewCore { self . core = std :: dynamic_pointer_cast < bdn :: ios :: ExampleButtonViewCore > ( viewCore . lock ()); } - ( void ) setFrame: ( CGRect ) frame { [ super setFrame : frame ]; if ( auto core = self . core . lock ()) { core -> frameChanged (); } } @end namespace bdn :: detail { CORE_REGISTER ( ExampleButtonView , bdn :: ios :: ExampleButtonViewCore , ExampleButtonView ) } namespace bdn :: ios { ExampleButtonViewCore :: ExampleButtonViewCore ( const std :: shared_ptr < bdn :: ViewCoreFactory > & viewCoreFactory ) : ViewCore ( viewCoreFactory , [ ExampleUIButton buttonWithType : UIButtonTypeSystem ]) { } ExampleButtonViewCore ::~ ExampleButtonViewCore () { } }","title":"View Core Implementation"},{"location":"guides/extending/writing_view/#adding-properties","text":"To represent properties of a view, use the Property class. As an example, add a label property so users of your view can set the button's label. class ExampleButtonView : public ui :: View { public : Property < std :: string > label ; } ExampleButtonView.h #pragma once #include <bdn/ui/View.h> namespace bdn { namespace detail { VIEW_CORE_REGISTRY_DECLARATION ( ExampleButtonView ) } class ExampleButtonView : public ui :: View { public : Property < std :: string > label ; public : ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory = nullptr ); public : class Core { }; }; } To connect the property to the core, replicate the property in the Core interface: class Core { public : Property < std :: string > label ; } ExampleButtonView.h #pragma once #include <bdn/ui/View.h> namespace bdn { namespace detail { VIEW_CORE_REGISTRY_DECLARATION ( ExampleButtonView ) } class ExampleButtonView : public ui :: View { public : Property < std :: string > label ; public : ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory = nullptr ); public : class Core { public : Property < std :: string > label ; }; }; } To bind the two label properties in View and Core properties, override the View::bindViewCore() function: void ExampleButtonView::bindViewCore () { View :: bindViewCore (); auto buttonCore = core < ExampleButtonView :: Core > (); buttonCore -> label . bind ( label ); } ExampleButtonView.cpp #include <bdn/ExampleButtonView.h> namespace bdn { namespace detail { VIEW_CORE_REGISTRY_IMPLEMENTATION ( ExampleButtonView ) } ExampleButtonView :: ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory ) : View ( viewCoreFactory ) { bdn :: detail :: VIEW_CORE_REGISTER ( ExampleButtonView , View :: viewCoreFactory ()); } void ExampleButtonView :: bindViewCore () { View :: bindViewCore (); auto buttonCore = core < ExampleButtonView :: Core > (); buttonCore -> label . bind ( label ); } } Now it is easy to react to changes to label in the iOS Implementation by adding an onChange() handler in the view core's init function. namespace bdn :: ios { void ExampleButtonViewCore::init () { ViewCore :: init (); label . onChange () += [ = ]( auto newValue ) { auto uiButton = ( UIButton * ) uiView (); [ uiButton setTitle : bdn :: fk :: stringToNSString ( value ) forState : UIControlStateNormal ]]; }; } } ExampleButtonViewCore.mm #import <bdn/ios/ExampleButtonViewCore.hh> #import <bdn/foundationkit/stringUtil.hh> @interface ExampleUIButton : UIButton < UIViewWithFrameNotification > @property ( nonatomic , assign ) std :: weak_ptr < bdn :: ios :: ExampleButtonViewCore > core ; @end @implementation ExampleUIButton - ( void ) setViewCore: ( std :: weak_ptr < bdn :: ios :: ViewCore > ) viewCore { self . core = std :: dynamic_pointer_cast < bdn :: ios :: ExampleButtonViewCore > ( viewCore . lock ()); } - ( void ) setFrame: ( CGRect ) frame { [ super setFrame : frame ]; if ( auto core = self . core . lock ()) { core -> frameChanged (); } } @end namespace bdn :: detail { CORE_REGISTER ( ExampleButtonView , bdn :: ios :: ExampleButtonViewCore , ExampleButtonView ) } namespace bdn :: ios { ExampleButtonViewCore :: ExampleButtonViewCore ( const std :: shared_ptr < bdn :: ViewCoreFactory > & viewCoreFactory ) : ViewCore ( viewCoreFactory , [ ExampleUIButton buttonWithType : UIButtonTypeSystem ]) { } ExampleButtonViewCore ::~ ExampleButtonViewCore () { } void ExampleButtonViewCore :: init () { ViewCore :: init (); label . onChange () += [ = ]( auto newValue ) { auto uiButton = ( UIButton * ) uiView (); [ uiButton setTitle : bdn :: fk :: stringToNSString ( value ) forState : UIControlStateNormal ]]; }; } }","title":"Adding Properties"},{"location":"guides/extending/writing_view/#sending-notifications-to-the-view","text":"To allow users of your new class to react to button clicks, you can use a combination of a Notifier and a WeakCallback . First, add the WeakCallback to your Core: class ExampleButtonView : public ui :: View { public : class Core { public : WeakCallback < void () > _clickCallback ; } } ExampleButtonView.h #pragma once #include <bdn/ui/View.h> namespace bdn { namespace detail { VIEW_CORE_REGISTRY_DECLARATION ( ExampleButtonView ) } class ExampleButtonView : public ui :: View { public : Property < std :: string > label ; public : ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory = nullptr ); public : class Core { public : Property < std :: string > label ; public : WeakCallback < void () > _clickCallback ; }; }; } Now you can fire the callback from your UIButton subclass: - ( void ) clicked { if ( auto core = self . core . lock ()) { core -> _clickCallback . fire (); } } ExampleButtonViewCore.mm #import <bdn/ios/ExampleButtonViewCore.hh> #import <bdn/foundationkit/stringUtil.hh> @interface ExampleUIButton : UIButton < UIViewWithFrameNotification > @property ( nonatomic , assign ) std :: weak_ptr < bdn :: ios :: ExampleButtonViewCore > core ; @end @implementation ExampleUIButton - ( void ) setViewCore: ( std :: weak_ptr < bdn :: ios :: ViewCore > ) viewCore { self . core = std :: dynamic_pointer_cast < bdn :: ios :: ExampleButtonViewCore > ( viewCore . lock ()); } - ( void ) setFrame: ( CGRect ) frame { [ super setFrame : frame ]; if ( auto core = self . core . lock ()) { core -> frameChanged (); } } - ( void ) clicked { if ( auto core = self . core . lock ()) { core -> _clickCallback . fire (); } } @end namespace bdn :: detail { CORE_REGISTER ( ExampleButtonView , bdn :: ios :: ExampleButtonViewCore , ExampleButtonView ) } namespace bdn :: ios { ExampleButtonViewCore :: ExampleButtonViewCore ( const std :: shared_ptr < bdn :: ViewCoreFactory > & viewCoreFactory ) : ViewCore ( viewCoreFactory , [ ExampleUIButton buttonWithType : UIButtonTypeSystem ]) { } ExampleButtonViewCore ::~ ExampleButtonViewCore () { } void ExampleButtonViewCore :: init () { ViewCore :: init (); label . onChange () += [ = ]( auto newValue ) { auto uiButton = ( UIButton * ) uiView (); [ uiButton setTitle : bdn :: fk :: stringToNSString ( value ) forState : UIControlStateNormal ]]; }; } } Add the notifier and the callback receiver to your View class: class ExampleButtonView { public : Notifier < const ClickEvent &> _onClick ; WeakCallback < void () >:: Receiver _clickCallbackReceiver ; } ExampleButtonView.h #pragma once #include <bdn/ui/View.h> namespace bdn { namespace detail { VIEW_CORE_REGISTRY_DECLARATION ( ExampleButtonView ) } class ExampleButtonView : public ui :: View { public : Property < std :: string > label ; public : ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory = nullptr ); public : Notifier < const ClickEvent &> _onClick ; WeakCallback < void () >:: Receiver _clickCallbackReceiver ; public : class Core { public : Property < std :: string > label ; public : WeakCallback < void () > _clickCallback ; }; }; } Finally, connect it to the WeakCallback : void ExampleButtonView::bindViewCore () { _clickCallbackReceiver = buttonCore -> _clickCallback . set ([ = ](){ ClickEvent evt ( shared_from_this ()); _onClick . notify ( evt ); }); } ExampleButtonView.cpp #include <bdn/ExampleButtonView.h> namespace bdn { namespace detail { VIEW_CORE_REGISTRY_IMPLEMENTATION ( ExampleButtonView ) } ExampleButtonView :: ExampleButtonView ( std :: shared_ptr < ViewCoreFactory > viewCoreFactory ) : View ( viewCoreFactory ) { bdn :: detail :: VIEW_CORE_REGISTER ( ExampleButtonView , View :: viewCoreFactory ()); } void ExampleButtonView :: bindViewCore () { View :: bindViewCore (); auto buttonCore = core < ExampleButtonView :: Core > (); buttonCore -> label . bind ( label ); _clickCallbackReceiver = buttonCore -> _clickCallback . set ([ = ](){ ClickEvent evt ( shared_from_this ()); _onClick . notify ( evt ); }); } } Congratulations, your first custom view should be working now!","title":"Sending Notifications to the View"},{"location":"guides/extending/writing_view_modules/","text":"Writing a New View Module \u00b6 Intro \u00b6 This guide will use the LottieView class implementation as an example to demonstrate the steps needed to extend the Boden Framework with new standalone view module. Boden views consist of two parts: The outward facing platform-independent View class. This is what users of your view component will usually see and interact with. The internal platform-specific View::Core implementation. This part of the view implementation is usually hidden from users of your new view component. The Module Structure \u00b6 A view module consists of the public part (mostly the View class), and a number of platform-specific implementations: lottieview \u251c\u2500\u2500 include \u2502\u2500\u2500 src \u251c\u2500\u2500 platforms \u2502 \u251c\u2500\u2500 android \u2502 \u2502 \u251c\u2500\u2500 include \u2502 \u2502 \u251c\u2500\u2500 java \u2502 \u2502 \u2514\u2500\u2500 src \u2502 \u251c\u2500\u2500 ios \u2502 \u2502 \u251c\u2500\u2500 include \u2502 \u2502 \u2514\u2500\u2500 src \u2502 \u2514\u2500\u2500 mac \u2502 \u251c\u2500\u2500 include \u2502 \u2514\u2500\u2500 src Main CMakeLists.txt \u00b6 Full CMakeLists.txt add_sources ( _BDN_LOTTIEVIEW_FILES _BDN_LOTTIEVIEW_HEADERS ./ ) GenerateTopLevelIncludeFile ( _BDN_LOTTIEVIEW_COMBINED ${ CMAKE_CURRENT_BINARY_DIR } /include/bdn/lottieview-module.h ${ CMAKE_CURRENT_LIST_DIR } /include ${ _BDN_LOTTIEVIEW_HEADERS } ) list ( APPEND _BDN_LOTTIEVIEW_FILES ${ _BDN_LOTTIEVIEW_COMBINED } ${ _BDN_LOTTIEVIEW_HEADERS } ) add_universal_library ( lottieview TIDY SOURCES ${ _BDN_LOTTIEVIEW_FILES } ) target_link_libraries ( lottieview PUBLIC foundation ui ) target_include_directories ( lottieview PUBLIC $< INSTALL_INTERFACE:include > $< BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include > ) target_include_directories ( lottieview PUBLIC $< BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}/include > ) include ( install.cmake ) add_subdirectory ( platforms ) add_library ( Boden::LottieView ALIAS lottieview ) target_link_libraries ( Boden_All INTERFACE lottieview ) add_sources ( _BDN_LOTTIEVIEW_FILES _BDN_LOTTIEVIEW_HEADERS ./ ) add_sources gathers all files from the ./include and ./src folders. GenerateTopLevelIncludeFile ( _BDN_LOTTIEVIEW_COMBINED ${ CMAKE_CURRENT_BINARY_DIR } /include/bdn/lottieview-module.h ${ CMAKE_CURRENT_LIST_DIR } /include ${ _BDN_LOTTIEVIEW_HEADERS } ) GenerateTopLevelIncludeFile creates a convenience header file that includes all files from the ./include folder list ( APPEND _BDN_LOTTIEVIEW_FILES ${ _BDN_LOTTIEVIEW_COMBINED } ${ _BDN_LOTTIEVIEW_HEADERS } ) add_universal_library ( lottieview TIDY SOURCES ${ _BDN_LOTTIEVIEW_FILES } ) All files are then combined and the main library is created. The TIDY option includes the source files in clang-tidy runs. target_link_libraries ( lottieview PUBLIC Boden::UI ) target_include_directories ( lottieview PUBLIC $< INSTALL_INTERFACE:include > $< BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include > ) target_include_directories ( lottieview PUBLIC $< BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}/include > ) include ( install.cmake ) We link the library against the Boden::UI library. The include directories are specified here such that they work whether Boden is included in source form or as a bundled installation Now you can write your view as described in Writing a New View .","title":"Writing a New View Module"},{"location":"guides/extending/writing_view_modules/#writing-a-new-view-module","text":"","title":"Writing a New View Module"},{"location":"guides/extending/writing_view_modules/#intro","text":"This guide will use the LottieView class implementation as an example to demonstrate the steps needed to extend the Boden Framework with new standalone view module. Boden views consist of two parts: The outward facing platform-independent View class. This is what users of your view component will usually see and interact with. The internal platform-specific View::Core implementation. This part of the view implementation is usually hidden from users of your new view component.","title":"Intro"},{"location":"guides/extending/writing_view_modules/#the-module-structure","text":"A view module consists of the public part (mostly the View class), and a number of platform-specific implementations: lottieview \u251c\u2500\u2500 include \u2502\u2500\u2500 src \u251c\u2500\u2500 platforms \u2502 \u251c\u2500\u2500 android \u2502 \u2502 \u251c\u2500\u2500 include \u2502 \u2502 \u251c\u2500\u2500 java \u2502 \u2502 \u2514\u2500\u2500 src \u2502 \u251c\u2500\u2500 ios \u2502 \u2502 \u251c\u2500\u2500 include \u2502 \u2502 \u2514\u2500\u2500 src \u2502 \u2514\u2500\u2500 mac \u2502 \u251c\u2500\u2500 include \u2502 \u2514\u2500\u2500 src","title":"The Module Structure"},{"location":"guides/extending/writing_view_modules/#main-cmakeliststxt","text":"Full CMakeLists.txt add_sources ( _BDN_LOTTIEVIEW_FILES _BDN_LOTTIEVIEW_HEADERS ./ ) GenerateTopLevelIncludeFile ( _BDN_LOTTIEVIEW_COMBINED ${ CMAKE_CURRENT_BINARY_DIR } /include/bdn/lottieview-module.h ${ CMAKE_CURRENT_LIST_DIR } /include ${ _BDN_LOTTIEVIEW_HEADERS } ) list ( APPEND _BDN_LOTTIEVIEW_FILES ${ _BDN_LOTTIEVIEW_COMBINED } ${ _BDN_LOTTIEVIEW_HEADERS } ) add_universal_library ( lottieview TIDY SOURCES ${ _BDN_LOTTIEVIEW_FILES } ) target_link_libraries ( lottieview PUBLIC foundation ui ) target_include_directories ( lottieview PUBLIC $< INSTALL_INTERFACE:include > $< BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include > ) target_include_directories ( lottieview PUBLIC $< BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}/include > ) include ( install.cmake ) add_subdirectory ( platforms ) add_library ( Boden::LottieView ALIAS lottieview ) target_link_libraries ( Boden_All INTERFACE lottieview ) add_sources ( _BDN_LOTTIEVIEW_FILES _BDN_LOTTIEVIEW_HEADERS ./ ) add_sources gathers all files from the ./include and ./src folders. GenerateTopLevelIncludeFile ( _BDN_LOTTIEVIEW_COMBINED ${ CMAKE_CURRENT_BINARY_DIR } /include/bdn/lottieview-module.h ${ CMAKE_CURRENT_LIST_DIR } /include ${ _BDN_LOTTIEVIEW_HEADERS } ) GenerateTopLevelIncludeFile creates a convenience header file that includes all files from the ./include folder list ( APPEND _BDN_LOTTIEVIEW_FILES ${ _BDN_LOTTIEVIEW_COMBINED } ${ _BDN_LOTTIEVIEW_HEADERS } ) add_universal_library ( lottieview TIDY SOURCES ${ _BDN_LOTTIEVIEW_FILES } ) All files are then combined and the main library is created. The TIDY option includes the source files in clang-tidy runs. target_link_libraries ( lottieview PUBLIC Boden::UI ) target_include_directories ( lottieview PUBLIC $< INSTALL_INTERFACE:include > $< BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include > ) target_include_directories ( lottieview PUBLIC $< BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}/include > ) include ( install.cmake ) We link the library against the Boden::UI library. The include directories are specified here such that they work whether Boden is included in source form or as a bundled installation Now you can write your view as described in Writing a New View .","title":"Main CMakeLists.txt"},{"location":"guides/fundamentals/properties/","text":"Properties \u00b6 The Boden Framework provides the Property class to make working with data displayed on the user interface of an application easier. A property represents a public value of arbitrary type that can be observed by notification listeners and bound to other properties using a built-in data binding mechanism . This is useful especially for user interface code as data is commonly shared between multiple widgets and other class instances like view models. Properties also make it easy to expose a read-only version of a data member publicly and keep write access private. They can be extended with getter and setter functions transparently and they come with support for the auto keyword and std::optional . Exposing Properties \u00b6 Properties are intended to be exposed as public data members of a class: using namespace bdn ; class Circle { public : Property < double > radius ; }; // Usage Circle circle ; circle . radius = 10. ; double radius = circle . radius ; // value will be 10. Initializing Property Values \u00b6 Properties can be initialized in the member initialization list of a class: using namespace bdn ; class Circle { public : Property < double > radius = 10. ; }; Alternatively, a property's value can also be initialzed in the constructor of a class: using namespace bdn ; class Circle { public : Circle () : radius ( 10. ) {} private : Property < double > radius ; }; Data Bindings \u00b6 Two property values can easily be synchronized by setting up a binding: using namespace bdn ; using namespace bdn :: ui ; class ViewModel { public : Property < std :: string > buttonText = \"Hello world!\" ; }; class MainViewController : public Base { public : MainViewController ( ViewModel * viewModel ) { // Create the button _button = std :: make_shared < Button > (); // Update the button's label when the buttonText property of // ViewModel changes button -> label . bind ( viewModel -> buttonText ); // [...] } private : std :: shared_ptr < Button > _button ; }; The bind() method sets up a bidirectional (or two-way) data binding by default. That is, regardless of whether you change the value of viewModel->buttonText or button->label , the other property will automatically be updated to the new value. You can also set up a unidirectional (or one-way) data binding: button -> label . bind ( viewModel -> buttonText , BindMode :: unidirectional ); In this case, viewModel->buttonText will be updated when changing button->label , but not the other way around. Note Data bindings update the values of bound properties synchronously. You should use bind() only when working with properties on the same thread. See Thread-Safety for more information. Change Notifications \u00b6 Properties can notify observers when their value changes. Observers can register for receiving notifications using the onChange() method: Property < std :: string > name ; name . onChange () += []( auto property ) { std :: cout << property . get () << std :: endl ; } onChange() returns a Notifier object which can be used to subscribe or unsubscribe notification handler functions. Read-Only Access \u00b6 If you want to provide users of your class with read access to certain properties only, you can declare Property private and provide a public const Property reference: using namespace bdn ; class Circle { public : Circle ( double initRadius ) : _radius ( initRadius ) {} // Property accessible for reading only from the outside const Property < double >& radius = _radius ; private : // Property accessible for reading and writing from inside the Circle class Property < double > _radius ; } Getters and Setters \u00b6 You can implement custom getter and/or setter functions and Property will call them when its value is updated or retrieved: using namespace bdn ; class Person { public : Property < std :: string > name = { GetterSetter < std :: string > { // Pointer to the instance which provides the getter/setter this , // Pointer to getter member function & Person :: name , // Pointer to setter member function & person :: setName , // Pointer to data member storing name's value & _name } }; std :: string name () const { return _name ; } // Besides setting the property value, setters must return // a bool indicating whether the property's value has been // changed by the set operation bool setName ( const std :: string & name ) { if ( name != _name ) { _name = name ; return true ; // value did change } return false ; // value did not change } private : std :: string _name ; }; While the example above contains both a getter and a setter, it is also OK to provide only a getter with no setter and no member pointer. In that case the property is runtime read-only and an exception is thrown when you try to call its setter. If no getter is provided, a member pointer must be given. If neither getter nor setter are specified, Property will automatically substitute both functions with a default implementation. Note Using Property makes it easier for you to refactor your application when you need to use custom getter or setter logic instead of the default implementation. You can add a getter and/or setter to your Property instance without having to change the code using your property. Please also note that getters return a copy of the property's data. Hence, you cannot write to non-primitive value types returned from a getter. See Non-Primitive Value Types for details. auto Keyword \u00b6 Properties support the C++11 auto keyword. However, you have to dereference a property using the * operator when using auto : using namespace bdn ; Property < std :: string > nameProperty = \"John\" ; auto name = nameProperty ; // Error: copy constructor is explicitly deleted auto name = * nameProperty ; // type of name will be deduced to std::string Alternatively, get() can be used when working with auto : using namespace bdn ; Property < std :: string > nameProperty = \"John\" ; auto name = nameProperty . get (); Non-Primitive Value Types \u00b6 Properties support non-primitive value types such as user-defined classes and structs. Members can be read using the arrow operator: using namespace bdn ; struct Person { std :: string name = \"John\" ; int age = 30 ; }; Property < Person > person ; std :: string name = person -> name ; int age = person -> age ; Writing to a member of a non-primitive type inside a property is not supported since property getters return copies of the property's value: using namespace bdn ; Property < Person > person ; person -> name = \"Jack\" ; // Error: no viable overloaded = If you want to write to a property holding a non-primitive type, use get() and set() to copy and modify the property's value: using namespace bdn ; Property < Person > personProperty ; Person person = personProperty . get (); person . name = \"Jack\" ; personProperty . set ( person ); Pointer Types \u00b6 Pointer types, including smart pointers, are supported by the Property class. Consider the following example: using namespace bdn ; class Model : public Base { public : Property < std :: string > labelText ; }; class ViewModel : public Base { public : Property < std :: shared_ptr < Model >> model ; }; std :: shared_ptr < ViewModel > viewModel = std :: make_shared < ViewModel > (); // Do something with the view model When using pointer types, Property 's arrow operator can be used to write to nested properties: std :: shared_ptr < ViewModel > viewModel = std :: make_shared < ViewModel > (); viewModel -> model -> labelText = \"Hello world!\" ; Copying \u00b6 Property is not copy constructible, but property values can be copied by default constructing a Property instance and then assigning another property's value using operator = : using namespace bdn ; Property < std :: string > name ; Property < std :: string > badNameCopy = name ; // Error: copy constructor // is explicitly deleted Property < std :: string > goodNameCopy ; goodNameCopy = name ; // OK: value of name is copied to value // of goodNameCopy by assignment Consequently, structs or classes containing Property data members are also not copy constructible: using namespace bdn ; struct Person { Property < std :: string > name = \"John\" ; }; Person person ; Person person2 = person ; // Error: copy constructor of Person // is implicitly deleted If your struct or class needs to be copy constructible, you may implement a custom copy constructor: using namespace bdn ; struct Person { Person () = default ; Person ( const Person & other ) : Person () { name = other . name ; // OK: assignment after default construction } Property < std :: string > name = \"John\" ; }; Person person ; Person person2 = person ; // OK: copy constructor of name // data member is never called Thread-Safety \u00b6 Property is currently not thread-safe. If you want to work with properties from multiple threads, make a copy of the respective property object's data and then use that copy on your worker thread. Do not read a single Property instance's value among different threads as this may cause undefined behavior. If you need to write to a property instance from more than one thread, use DispatchQueue to queue a property value change on the thread the property is being read on. Writing to a single property instance from multiple threads simultaneously may result in undefined behavior. Do not use bind() to set up a data binding with properties that are accessed from different threads. Doing so may also result in undefined behavior. Note If you find that you need to frequently read/write to properties from multiple threads, consider using a plain data member or std::shared_ptr instead of Property . Also, you might want to rearchitect your design to not use multiple threads operating directly on the user interface as this can lead to very complex code without a real benefit. As a rule of thumb, implement all UI logic on one thread and offload CPU intensive work to worker threads operating on data only. Copy data instead of sharing it between the UI thread and workers. Use DispatchQueue to update the UI. Keep your design simple. Further Reading \u00b6 To see the use of Property in a real application example, please refer to our TodoMVC Tutorial on Medium . Reference \u00b6 Property Reference","title":"Properties"},{"location":"guides/fundamentals/properties/#properties","text":"The Boden Framework provides the Property class to make working with data displayed on the user interface of an application easier. A property represents a public value of arbitrary type that can be observed by notification listeners and bound to other properties using a built-in data binding mechanism . This is useful especially for user interface code as data is commonly shared between multiple widgets and other class instances like view models. Properties also make it easy to expose a read-only version of a data member publicly and keep write access private. They can be extended with getter and setter functions transparently and they come with support for the auto keyword and std::optional .","title":"Properties"},{"location":"guides/fundamentals/properties/#exposing-properties","text":"Properties are intended to be exposed as public data members of a class: using namespace bdn ; class Circle { public : Property < double > radius ; }; // Usage Circle circle ; circle . radius = 10. ; double radius = circle . radius ; // value will be 10.","title":"Exposing Properties"},{"location":"guides/fundamentals/properties/#initializing-property-values","text":"Properties can be initialized in the member initialization list of a class: using namespace bdn ; class Circle { public : Property < double > radius = 10. ; }; Alternatively, a property's value can also be initialzed in the constructor of a class: using namespace bdn ; class Circle { public : Circle () : radius ( 10. ) {} private : Property < double > radius ; };","title":"Initializing Property Values"},{"location":"guides/fundamentals/properties/#data-bindings","text":"Two property values can easily be synchronized by setting up a binding: using namespace bdn ; using namespace bdn :: ui ; class ViewModel { public : Property < std :: string > buttonText = \"Hello world!\" ; }; class MainViewController : public Base { public : MainViewController ( ViewModel * viewModel ) { // Create the button _button = std :: make_shared < Button > (); // Update the button's label when the buttonText property of // ViewModel changes button -> label . bind ( viewModel -> buttonText ); // [...] } private : std :: shared_ptr < Button > _button ; }; The bind() method sets up a bidirectional (or two-way) data binding by default. That is, regardless of whether you change the value of viewModel->buttonText or button->label , the other property will automatically be updated to the new value. You can also set up a unidirectional (or one-way) data binding: button -> label . bind ( viewModel -> buttonText , BindMode :: unidirectional ); In this case, viewModel->buttonText will be updated when changing button->label , but not the other way around. Note Data bindings update the values of bound properties synchronously. You should use bind() only when working with properties on the same thread. See Thread-Safety for more information.","title":"Data Bindings"},{"location":"guides/fundamentals/properties/#change-notifications","text":"Properties can notify observers when their value changes. Observers can register for receiving notifications using the onChange() method: Property < std :: string > name ; name . onChange () += []( auto property ) { std :: cout << property . get () << std :: endl ; } onChange() returns a Notifier object which can be used to subscribe or unsubscribe notification handler functions.","title":"Change Notifications"},{"location":"guides/fundamentals/properties/#read-only-access","text":"If you want to provide users of your class with read access to certain properties only, you can declare Property private and provide a public const Property reference: using namespace bdn ; class Circle { public : Circle ( double initRadius ) : _radius ( initRadius ) {} // Property accessible for reading only from the outside const Property < double >& radius = _radius ; private : // Property accessible for reading and writing from inside the Circle class Property < double > _radius ; }","title":"Read-Only Access"},{"location":"guides/fundamentals/properties/#getters-and-setters","text":"You can implement custom getter and/or setter functions and Property will call them when its value is updated or retrieved: using namespace bdn ; class Person { public : Property < std :: string > name = { GetterSetter < std :: string > { // Pointer to the instance which provides the getter/setter this , // Pointer to getter member function & Person :: name , // Pointer to setter member function & person :: setName , // Pointer to data member storing name's value & _name } }; std :: string name () const { return _name ; } // Besides setting the property value, setters must return // a bool indicating whether the property's value has been // changed by the set operation bool setName ( const std :: string & name ) { if ( name != _name ) { _name = name ; return true ; // value did change } return false ; // value did not change } private : std :: string _name ; }; While the example above contains both a getter and a setter, it is also OK to provide only a getter with no setter and no member pointer. In that case the property is runtime read-only and an exception is thrown when you try to call its setter. If no getter is provided, a member pointer must be given. If neither getter nor setter are specified, Property will automatically substitute both functions with a default implementation. Note Using Property makes it easier for you to refactor your application when you need to use custom getter or setter logic instead of the default implementation. You can add a getter and/or setter to your Property instance without having to change the code using your property. Please also note that getters return a copy of the property's data. Hence, you cannot write to non-primitive value types returned from a getter. See Non-Primitive Value Types for details.","title":"Getters and Setters"},{"location":"guides/fundamentals/properties/#auto-keyword","text":"Properties support the C++11 auto keyword. However, you have to dereference a property using the * operator when using auto : using namespace bdn ; Property < std :: string > nameProperty = \"John\" ; auto name = nameProperty ; // Error: copy constructor is explicitly deleted auto name = * nameProperty ; // type of name will be deduced to std::string Alternatively, get() can be used when working with auto : using namespace bdn ; Property < std :: string > nameProperty = \"John\" ; auto name = nameProperty . get ();","title":"auto Keyword"},{"location":"guides/fundamentals/properties/#non-primitive-value-types","text":"Properties support non-primitive value types such as user-defined classes and structs. Members can be read using the arrow operator: using namespace bdn ; struct Person { std :: string name = \"John\" ; int age = 30 ; }; Property < Person > person ; std :: string name = person -> name ; int age = person -> age ; Writing to a member of a non-primitive type inside a property is not supported since property getters return copies of the property's value: using namespace bdn ; Property < Person > person ; person -> name = \"Jack\" ; // Error: no viable overloaded = If you want to write to a property holding a non-primitive type, use get() and set() to copy and modify the property's value: using namespace bdn ; Property < Person > personProperty ; Person person = personProperty . get (); person . name = \"Jack\" ; personProperty . set ( person );","title":"Non-Primitive Value Types"},{"location":"guides/fundamentals/properties/#pointer-types","text":"Pointer types, including smart pointers, are supported by the Property class. Consider the following example: using namespace bdn ; class Model : public Base { public : Property < std :: string > labelText ; }; class ViewModel : public Base { public : Property < std :: shared_ptr < Model >> model ; }; std :: shared_ptr < ViewModel > viewModel = std :: make_shared < ViewModel > (); // Do something with the view model When using pointer types, Property 's arrow operator can be used to write to nested properties: std :: shared_ptr < ViewModel > viewModel = std :: make_shared < ViewModel > (); viewModel -> model -> labelText = \"Hello world!\" ;","title":"Pointer Types"},{"location":"guides/fundamentals/properties/#copying","text":"Property is not copy constructible, but property values can be copied by default constructing a Property instance and then assigning another property's value using operator = : using namespace bdn ; Property < std :: string > name ; Property < std :: string > badNameCopy = name ; // Error: copy constructor // is explicitly deleted Property < std :: string > goodNameCopy ; goodNameCopy = name ; // OK: value of name is copied to value // of goodNameCopy by assignment Consequently, structs or classes containing Property data members are also not copy constructible: using namespace bdn ; struct Person { Property < std :: string > name = \"John\" ; }; Person person ; Person person2 = person ; // Error: copy constructor of Person // is implicitly deleted If your struct or class needs to be copy constructible, you may implement a custom copy constructor: using namespace bdn ; struct Person { Person () = default ; Person ( const Person & other ) : Person () { name = other . name ; // OK: assignment after default construction } Property < std :: string > name = \"John\" ; }; Person person ; Person person2 = person ; // OK: copy constructor of name // data member is never called","title":"Copying"},{"location":"guides/fundamentals/properties/#thread-safety","text":"Property is currently not thread-safe. If you want to work with properties from multiple threads, make a copy of the respective property object's data and then use that copy on your worker thread. Do not read a single Property instance's value among different threads as this may cause undefined behavior. If you need to write to a property instance from more than one thread, use DispatchQueue to queue a property value change on the thread the property is being read on. Writing to a single property instance from multiple threads simultaneously may result in undefined behavior. Do not use bind() to set up a data binding with properties that are accessed from different threads. Doing so may also result in undefined behavior. Note If you find that you need to frequently read/write to properties from multiple threads, consider using a plain data member or std::shared_ptr instead of Property . Also, you might want to rearchitect your design to not use multiple threads operating directly on the user interface as this can lead to very complex code without a real benefit. As a rule of thumb, implement all UI logic on one thread and offload CPU intensive work to worker threads operating on data only. Copy data instead of sharing it between the UI thread and workers. Use DispatchQueue to update the UI. Keep your design simple.","title":"Thread-Safety"},{"location":"guides/fundamentals/properties/#further-reading","text":"To see the use of Property in a real application example, please refer to our TodoMVC Tutorial on Medium .","title":"Further Reading"},{"location":"guides/fundamentals/properties/#reference","text":"Property Reference","title":"Reference"},{"location":"guides/fundamentals/resources/","text":"Bundling Resources \u00b6 Introduction \u00b6 Many platforms provide native ways to bundle application resources like images or other binary data. The way these are embedded into the build process and the specific capabilities of these mechanisms vary quite a bit though. As an example let's compare the iOS and Androids resource system. iOS \u00b6 Example folder structure: iOS .app bundles contain a Resources folder that is meant to host the applications binary data. Inside you can create subfolders with the extension .lproj that can host different versions of a file for different languages ( e.g. de.lrpoj or en-US.lproj ). The special base.lproj is used the specify the default such that files not found in a specific language bundle will be looked up in it. The directory structure inside these can be defined by the user arbitrarily. Android \u00b6 Example folder structure: Android on the other hand follows a different approach. It defines a rigid structure per type of resource. An image, for instance, needs to be in a folder called res/drawables while a json file might be stored in res/raw . To specify the language ( and other selections like e.g. the dpi etc. ) you add this information to the folder name: res/drawables-hidpi-en-US . Users cannot create subfolders inside these folders. Trying to do so may result in compile errors, and the files are simply not accessible. Android has another mechanism for distributing files with the application called assets . The asset folders structure can be defined by users and it can house any type of data. However, a downside is that its content cannot be automatically localized. Boden representation of resources \u00b6 Boden abstracts all these intricacies into a platform agnostic json file: ```json tab=\"Basic layout\" { \"name\" : \"main\", \"root-path\" : \"./Resources\", \"resources\" : [ { \"language\" : \"\", \"android-qualifiers\" : \"\", \"images\" : [ ], \"raw\" : [ ] }, { \"language\" : \"de\", \"android-qualifiers\" : \"\", \"images\" : [ ], \"raw\" : [ ] } ], \"assets\" : [ ] } ```json tab=\"Full example\" { \"name\" : \"main\", \"root-path\" : \"./Resources\", \"resources\" : [ { \"language\" : \"\", \"android-qualifiers\" : \"\", \"images\" : [ { \"bundle_path\" : \"images/image.png\", \"resolutions\" : { \"0.75x\" : \"\", \"1.0x\" : \"image.png\", \"1.5x\" : \"\", \"2.0x\" : \"image@2x.png\", \"3.0x\" : \"image@3x.png\", \"4.0x\" : \"\" } } ], \"raw\" : [ { \"bundle_path\" : \"images/animation.json\", \"file\": \"flag.json\" } ] }, { \"language\" : \"de\", \"android-qualifiers\" : \"\", \"images\" : [ { \"bundle_path\" : \"images/image.png\", \"resolutions\" : { \"0.75x\" : \"\", \"1.0x\" : \"de/image.png\", \"1.5x\" : \"\", \"2.0x\" : \"de/image@2x.png\", \"3.0x\" : \"de/image@3x.png\", \"4.0x\" : \"\" } } ], \"raw\" : [ { \"bundle_path\" : \"images/animation.json\", \"file\": \"de/flag.json\" } ] } ], \"assets\" : [ { \"bundle_path\" : \"images/asset_image.png\", \"file\": \"image.png\" } ] } To include a resource.json file into the targets build process use the following code in your CMake file: ```cmake tab=\"Basic\" roger_add( \"TARGET_NAME\" OUTPUT \"PATH_TO_JSON\") add_executable( \"TARGET_NAME\" main.cpp ${OUTPUT}) ```cmake tab=\"NavigationViewDemo example\" roger_add( navigationviewdemo NAVIGATIONVIEWDEMO_RESOURCES ${CMAKE_CURRENT_LIST_DIR}/../DemoAssets/demo_resources.json) # ... add_universal_executable( navigationviewdemo TIDY SOURCES ${NAVIGATIONVIEWDEMO_FILES} ${NAVIGATIONVIEWDEMO_ASSETS} ${NAVIGATIONVIEWDEMO_RESOURCES}) Using resources \u00b6 To reference resource files inside your code use one of the following schemes: Scheme Meaning image:// An image specified in the \"images\" section resource:// An arbitrary file specified in the \"raw\" section asset:// An arbitrary file specified in the \"assets\" section All Boden classes will understand how to interpret these paths. Borrowing the resource file from the previous sections json example: using namespace bdn :: ui ; auto image = std :: make_shared < ImageView > (); image -> url = \"image://main/images/image.png\" ; To get a platform specific representation of the path use the Application::uriToBundledFileUri function: // On Android this will return \"file:///android_asset/test/index.html\" bdn :: App () -> uriToBundledFileUri ( \"asset://main/test/index.html\" ) Automatic flattening \u00b6 As discussed previously, Android does not support subdirectories in its resource folders. Therefore the roger utility will flatten any directory structure by replacing all / with _ . Additionally, when accessing resources, the extension is ignored by android. Therefore roger will append the extension twice, but replace the . with an _ as well: Original Flattened (Android) images/image.png images_image_png.png","title":"Bundling Resources"},{"location":"guides/fundamentals/resources/#bundling-resources","text":"","title":"Bundling Resources"},{"location":"guides/fundamentals/resources/#introduction","text":"Many platforms provide native ways to bundle application resources like images or other binary data. The way these are embedded into the build process and the specific capabilities of these mechanisms vary quite a bit though. As an example let's compare the iOS and Androids resource system.","title":"Introduction"},{"location":"guides/fundamentals/resources/#ios","text":"Example folder structure: iOS .app bundles contain a Resources folder that is meant to host the applications binary data. Inside you can create subfolders with the extension .lproj that can host different versions of a file for different languages ( e.g. de.lrpoj or en-US.lproj ). The special base.lproj is used the specify the default such that files not found in a specific language bundle will be looked up in it. The directory structure inside these can be defined by the user arbitrarily.","title":"iOS"},{"location":"guides/fundamentals/resources/#android","text":"Example folder structure: Android on the other hand follows a different approach. It defines a rigid structure per type of resource. An image, for instance, needs to be in a folder called res/drawables while a json file might be stored in res/raw . To specify the language ( and other selections like e.g. the dpi etc. ) you add this information to the folder name: res/drawables-hidpi-en-US . Users cannot create subfolders inside these folders. Trying to do so may result in compile errors, and the files are simply not accessible. Android has another mechanism for distributing files with the application called assets . The asset folders structure can be defined by users and it can house any type of data. However, a downside is that its content cannot be automatically localized.","title":"Android"},{"location":"guides/fundamentals/resources/#boden-representation-of-resources","text":"Boden abstracts all these intricacies into a platform agnostic json file: ```json tab=\"Basic layout\" { \"name\" : \"main\", \"root-path\" : \"./Resources\", \"resources\" : [ { \"language\" : \"\", \"android-qualifiers\" : \"\", \"images\" : [ ], \"raw\" : [ ] }, { \"language\" : \"de\", \"android-qualifiers\" : \"\", \"images\" : [ ], \"raw\" : [ ] } ], \"assets\" : [ ] } ```json tab=\"Full example\" { \"name\" : \"main\", \"root-path\" : \"./Resources\", \"resources\" : [ { \"language\" : \"\", \"android-qualifiers\" : \"\", \"images\" : [ { \"bundle_path\" : \"images/image.png\", \"resolutions\" : { \"0.75x\" : \"\", \"1.0x\" : \"image.png\", \"1.5x\" : \"\", \"2.0x\" : \"image@2x.png\", \"3.0x\" : \"image@3x.png\", \"4.0x\" : \"\" } } ], \"raw\" : [ { \"bundle_path\" : \"images/animation.json\", \"file\": \"flag.json\" } ] }, { \"language\" : \"de\", \"android-qualifiers\" : \"\", \"images\" : [ { \"bundle_path\" : \"images/image.png\", \"resolutions\" : { \"0.75x\" : \"\", \"1.0x\" : \"de/image.png\", \"1.5x\" : \"\", \"2.0x\" : \"de/image@2x.png\", \"3.0x\" : \"de/image@3x.png\", \"4.0x\" : \"\" } } ], \"raw\" : [ { \"bundle_path\" : \"images/animation.json\", \"file\": \"de/flag.json\" } ] } ], \"assets\" : [ { \"bundle_path\" : \"images/asset_image.png\", \"file\": \"image.png\" } ] } To include a resource.json file into the targets build process use the following code in your CMake file: ```cmake tab=\"Basic\" roger_add( \"TARGET_NAME\" OUTPUT \"PATH_TO_JSON\") add_executable( \"TARGET_NAME\" main.cpp ${OUTPUT}) ```cmake tab=\"NavigationViewDemo example\" roger_add( navigationviewdemo NAVIGATIONVIEWDEMO_RESOURCES ${CMAKE_CURRENT_LIST_DIR}/../DemoAssets/demo_resources.json) # ... add_universal_executable( navigationviewdemo TIDY SOURCES ${NAVIGATIONVIEWDEMO_FILES} ${NAVIGATIONVIEWDEMO_ASSETS} ${NAVIGATIONVIEWDEMO_RESOURCES})","title":"Boden representation of resources"},{"location":"guides/fundamentals/resources/#using-resources","text":"To reference resource files inside your code use one of the following schemes: Scheme Meaning image:// An image specified in the \"images\" section resource:// An arbitrary file specified in the \"raw\" section asset:// An arbitrary file specified in the \"assets\" section All Boden classes will understand how to interpret these paths. Borrowing the resource file from the previous sections json example: using namespace bdn :: ui ; auto image = std :: make_shared < ImageView > (); image -> url = \"image://main/images/image.png\" ; To get a platform specific representation of the path use the Application::uriToBundledFileUri function: // On Android this will return \"file:///android_asset/test/index.html\" bdn :: App () -> uriToBundledFileUri ( \"asset://main/test/index.html\" )","title":"Using resources"},{"location":"guides/fundamentals/resources/#automatic-flattening","text":"As discussed previously, Android does not support subdirectories in its resource folders. Therefore the roger utility will flatten any directory structure by replacing all / with _ . Additionally, when accessing resources, the extension is ignored by android. Therefore roger will append the extension twice, but replace the . with an _ as well: Original Flattened (Android) images/image.png images_image_png.png","title":"Automatic flattening"},{"location":"legal/privacy_policy/","text":"Privacy Policy \u00b6 Personizer GmbH & Co. KG (\u201cPersonizer\u201d or \u201cWe\u201d) would like to inform the visitors and users of our web pages and services about how we process their personal data and about the purpose, the nature and the scope of such processing. The entity responsible for data processing on our websites or in connection with our services within the meaning of the General Data Protection Regulation (GDPR) is Personizer GmbH & Co. KG, Schafj\u00fcckenweg 2, 26180 Rastede, Germany. Our web pages and services \u00b6 Since our web pages and services evolve constantly, this data protection information changes from time to time. In particular, this applies to the methods we use to analyse website usage and measure the effectiveness of advertising methods as well as to comparable services, especially services by third-party providers. For the current status, see the table below. Regarding our use of service providers outside the European Union: We provide different services for users around the world. We generally prefer using service providers based in the EU for specific services if they can provide the same quality and similar pricing. Many services we use are either not currently available from EU-based providers or the existing providers do not offer acceptable alternatives. For this reason, we use a number of service providers based outside the European Union. We take care to ensure that everything is done to achieve an appropriate level of protection of data according to European and national privacy regulations. Use of personal data \u00b6 We collect, process and use personal information to provide our services. This includes advertising our products and informing individuals who are interested in or already use our services about the features available. The scope of processing personal data primarily depends on whether a user simply visits one of our websites, uses them as a registered user or is just registering. Children\u2019s privacy \u00b6 Our websites are publicly accessible and not designed for children. We do not knowingly collect data from users who are considered minors under their national legislation. What information do we collect when you visit our website? \u00b6 When you visit our website, your online behaviour may be evaluated statistically. This is primarily done using cookies and so-called web analytics. Your online behaviour is typically analysed anonymously; it will not be traced back to you. We process your data according to Art. 6 (1) (f) of the GDPR based on our legitimate interest in improving the stability and functionality of our website. Cookies \u00b6 We use cookies on our web pages. Cookies are small text files that can be stored and read on your device. There are session cookies, which are deleted as soon as you close your web browser, and permanent cookies which remain stored even after the session is over. Cookies can contain data which allow a device to be recognised. In some cases, cookies only contain information on certain settings which are not connected with an individual. On our websites, we use session cookies and permanent cookies. We process your data based on Art. 6 (1) S. 1 (f) of the GDPR in order to enable user guidance, improve the user experience and adapt how our website is displayed to you. You can configure your web browser to inform you about cookies when they are stored on your device. This makes the use of cookies transparent to you. In addition, you can delete cookies using the corresponding browser command and prevent new cookies from being stored on your system. Please note that our web pages may not display properly in this case and some features may be unavailable. User data and log files \u00b6 When you visit our websites, so-called usage data records are temporarily stored on our web server for statistical purposes in order to improve the quality of our websites. These records consist of the following: the page from which you requested the file the name of the file the date and time of the request the amount of data transferred the access status (file transferred, file not found) the description of the type of web browser used the IP address of the requesting computer, which is truncated to ensure that it cannot be linked to a person This log data is stored anonymously. We only store this information for no more than seven days for the purpose of detecting, narrowing down and eliminating attacks on our websites. After this period, we delete this information. The legal basis of this activity is Art. 6 (1) S. 1 (f) of the GDPR. Web analytics services \u00b6 Based on our legitimate interest (i.e. interest in analysing, optimising and running our online offering within the meaning of Art. 6 (1) S. 1 (f) of the GDPR, we use the following web analytics tools: Google Analytics \u00b6 To ensure the best possible user experience, we create anonymous usage profiles using Google Analytics. Google Analytics uses cookies which are stored on your device and which we can read. This allows us to recognise and count returning visitors anonymously. We process your data based on Art. 6 (1) S. 1 (f) of the GDPR or Section 15 (3) of the German telemedia act in order to determine how often different users access our web pages. The information the cookie generates on your use of this website is usually sent to a Google server in the USA and saved there. However, because we have enabled IP anonymisation on this website, Google will first truncate your IP address in European Union Member States. Only in exceptional cases will the full IP address be sent to and shortened by Google servers in the USA. According to Art. 45 para. 1 of the GDPR, an appropriate level of data protection exists due to Google\u2019s participation in the Privacy Shield. In addition, we have entered into an agreement with Google LLC (USA) regarding data processing on our behalf pursuant to Art. 28 of the GDPR. Under this agreement, Google will only use this information for evaluating how visitors use our website and compiling reports on website activities. You can object to this processing at any time by using one of the following methods: You may prevent the installation of cookies by adjusting the settings of your browser; however, if you do so, you may be unable to use all features of this website. Additionally, you can prevent the transfer to Google of the data generated by the cookie and relating to your use of the website (including your IP address) and prevent Google from processing this data by downloading and installing the browser plugin available here. You will find the privacy statement, contact details and further information on Google Analytics in the list of our subcontractors below. Advertising (remarketing, conversion tracking) \u00b6 Based on our legitimate interest, i.e. our interest in marketing our website optimally and analysing user behaviour in order to optimise our website as well as our advertising, and based on the express consent of the page visitor where required, we use the following online marketing services on our websites: Google Remarketing \u00b6 We use Google\u2019s cross-device remarketing technologies to allow other websites to show you targeted advertising based on your visit to our websites. We process your data based on Art. 6 (1) S. 1 (f) of the GDPR. The website operator has a legitimate interest in analysing user behaviour in order to optimise both their website and their advertising. When you visit our websites, it is possible for Google\u2019s cross-device remarketing technologies to retrieve identifiers of the web browser you use (e.g. by creating a so-called browser fingerprint), evaluate your IP address or store identifiers (small text files, e.g. third-party cookies) on your device. Google may also link your visit to our websites to one or several of these identifiers as well as store this information to show you our advertisements on other websites. The identifiers described above are designed as pseudonyms. We can ask Google to use its cross-device remarketing technologies to show you advertising on other websites based on the pages you visit on our websites. So if you visit a site that participates in Google\u2019s display advertising network, Google can use the identifiers to determine if and what advertising should be displayed to you. For more information about how Google remarketing technologies work, see https://www.google.com/policies/technologies/ads/. If you log in to Google services using your own login credentials or use one or more Google accounts of your own, Google may link the identifiers of different web browsers or devices with each other. So if Google has created separate identifiers for your laptop, desktop, smartphone or tablet PC, these identifiers can be associated with one another as soon as you access a Google service using your login credentials. This allows Google to target our advertising campaigns beyond individual devices. However, Google will only do this if you have given Google your consent to process your information in this way in the past. You can adjust your settings to control advertising. You can object to this type of advertising at any time. To disable personalised advertising, visit https://support.google.com/ads/answer/2662922. Please note that these settings may not work for all devices or web browsers. For a privacy statement, contact details and further information on Google, see the list of our subcontractors below. Google Ads and Google Conversion Tracking \u00b6 We use Google Ads. Google Ads is an online advertising program provided by Google LLC, 1600 Amphitheatre Parkway, Mountain View, CA 94043, United States (\u201cGoogle\u201d). As part of Google Ads, we use conversion tracking. When you click on an ad served by Google, a conversion tracking cookie will be set. Cookies are small text files that web browsers store on the user\u2019s computer. These cookies expire after 30 days and are not used to identify users. When a user visits certain pages of this website while the cookie is still active, Google (and we) can see that the user has clicked on the ad and was forwarded to this page. Each organisation using Google Ads receives a different cookie. The cookies cannot be tracked via the websites of these organisations. The information obtained by means of conversion cookies is used to create conversion statistics for Google Ads customers using conversion tracking. Customers are informed of the total number of users who have clicked on their ads and were forwarded to a page with a conversion tracking tag. However, they do not receive information which can be used to identify users personally. If you do not wish to participate in tracking, you can object to this use by disabling the conversion tracking cookie in the user settings of your web browser. You will then not be included in the conversion tracking statistics. Conversion cookies are stored and this tracking tool is used under Art. 6 (1) (f) of the GDPR. The website operator has a legitimate interest in analysing user behaviour in order to optimise both their website and their advertising. For more information about Google Ads and Google Conversion Tracking, see the Google Privacy Policy. You can configure your browser so that it informs you when cookies are installed and only permits them individually, blocks cookies on a case-by-case basis or generally, or automatically deletes them when you close your web browser. The functionality of this website may be reduced if cookies are disabled. For a privacy statement, contact details and further information on Google Ads, see the list of our subcontractors below. Bing Universal Event Tracking (UET) \u00b6 The Boden and Personizer websites use Bing Ads technology to collect and store data that is used to create usage profiles using pseudonyms. This service enables us to track user activity on our website when it has reached our website via advertisements from Bing Ads. If the page visitor reaches our website via such an ad, a cookie is set on their computer. On our website a Bing UET tag is integrated. This is a code used to store some non-personally identifiable information about the use of the website in connection with the cookie. This includes, among other things, the length of time spent on the website, which areas of the website were accessed, and which advertisements have reached the website. Information on the identity of the respective site visitor, as well as forms for entering personal data are not recorded. The collected information is transmitted to Microsoft servers in the USA and stored there for a maximum of 180 days. The collection of the data generated by the cookie and related to the use of the website as well as the processing of this data can be prevented by deactivating the setting of cookies by the site visitor in their browser. In addition, based on the user\u2019s preferences Microsoft may be able to track usage behaviour across multiple electronic devices through cross-device tracking, enabling it to display personalised advertising on or in Microsoft websites and apps. This behaviour can be disabled by the site visitor at https://choice.microsoft.com/en-us/opt-out. For more information on Bing analytics services, visit the Bing Ads website. For more information about privacy at Microsoft and Bing, see the Microsoft Privacy Policy. Newsletter \u00b6 Below, we describe the content of our newsletters as well as the procedure for opting in, the delivery process, the statistical evaluation process and your right to object. By subscribing to our newsletter, you agree to receive it and you accept the procedures described above. Content of the newsletter \u00b6 We only dispatch newsletters, e-mails or other electronic notifications containing advertising (referenced as \u201cnewsletter\u201d below) with the consent of the recipient or based on legal authorisation. If the user receives a specific description of the contents of the newsletter when subscribing, their consent applies to such contents. Otherwise, our newsletters contain information on our products, offers, promotions and our company. Double opt-in and logging \u00b6 We use a double opt-in process when you subscribe to our newsletter. This means you receive an e-mail asking you to confirm your subscription. This confirmation is necessary to ensure no one subscribes with someone else\u2019s e-mail address. Subscriptions to our newsletter are logged to allow us to provide evidence of subscriptions in accordance with regulations. This includes storing the time of registration and confirmation as well as the IP address. Changes to the information stored by our delivery service provider are also logged. Delivery Service Provider \u00b6 Newsletters are mailed through CleverReach (CleverReach GmbH & Co. KG, M\u00fchlenstr. 43, 26180 Rastede, Germany), our delivery service provider. For a privacy statement, contact details and further information on the delivery service provider, see the list of our subcontractors below. The delivery service provider can also use data to improve its own services in anonymous form (i.e. without connecting the data to users), e.g. for technically improving its dispatch processes or how it displays the newsletters or for statistical purposes, e.g. for determining recipients\u2019 countries. However, the delivery service provider does not use our newsletter recipients\u2019 information to contact them itself or pass data on to third parties. Subscription information \u00b6 To subscribe to our newsletter, your e-mail address is sufficient. Optionally, you can specify a name so we can address you personally in the newsletter. Statistical survey/analysis \u00b6 Our newsletters include a so-called web beacon. This is a pixel-sized file which is retrieved by the delivery service provider when you open the newsletter. The beacon enables us to collect technical information, e.g. on your web browser and your system, as well as your IP address and the time of the beacon retrieval. This information is used to improve our services based on the technical information or the target groups and their viewing behaviour in connection with the places of retrieval (which can be determined using the IP address) or the times of access. The statistical information collected also includes whether the newsletters were opened, when they were opened and what links were clicked. While it is technically possible to associate this information with individual newsletter recipients, neither we nor our delivery service provider are interested in monitoring individual users. Instead, we use this information to understand the viewing habits of our users and adapt our content accordingly or to send different content according to our users\u2019 interests. Our use of a delivery service provider, our statistical evaluation/analysis and our logging of the registration process is based on our legitimate interests according to Art. 6 (1) (f) of the GDPR. We are interested in providing a user-friendly, secure newsletter system that serves our business interests while meeting users\u2019 expectations. Termination/cancellation \u00b6 You can unsubscribe from our newsletter at any time by revoking your consent. This simultaneously cancels your consent to its delivery via the delivery service provider and your consent to the statistical surveys. We regret that it is not possible to separately cancel the delivery by the delivery service provider and the statistical survey. You can find an Unsubscribe link at the bottom of each newsletter. Tools \u00b6 We use a number of Google tools to enhance the functionality of our website. Google Tag Manager \u00b6 We use Google Tag Manager. Google Tag Manager is a solution marketers use to manage website tags. Google Tag Manager itself (the tool that implements the tags) is a cookie-free domain that does not collect personal data. The tool triggers other tags which may collect data. Google Tag Manager does not access this data. For a privacy statement, contact details and further information on Google Tag Manager, see the list of our subcontractors below. Google reCAPTCHA \u00b6 We use Google reCAPTCHA (referred to as \u201creCAPTCHA\u201d below) on our websites. This service is offered by Google LLC, 1600 Amphitheatre Parkway, Mountain View, CA 94043, USA (\u201cGoogle\u201d). reCAPTCHA is designed to check whether data is entered on our websites by a human or by automated software, e.g. in a contact form. To determine this, reCAPTCHA analyses the website visitor\u2019s behaviour using different characteristics. This analysis starts automatically as soon as the visitor opens the website. reCAPTCHA evaluates different information such as IP addresses, the time the visitor spends on the website, and mouse actions. The data collected is forwarded to Google. reCAPTCHA evaluations run entirely in the background. Website visitors are not notified of the evaluation. We process your data based on Art. 6 (1) (f) of the GDPR. The website operator has a legitimate interest in protecting its web offerings from automated spying or spam. For a privacy statement, contact details and further information on Google reCAPTCHA, see the list of our subcontractors below. YouTube videos \u00b6 Our website uses the YouTube embedding function to display and play videos provided by YouTube, which is part of Google. When embedded YouTube videos are started, YouTube uses cookies to collect user behaviour information. According to information provided by YouTube, these cookies are used to collect video statistics, improve user friendliness and prevent abuse. When the site visitor is logged in to Google, data generated when clicking on a video is directly associated with their account. Page visitors who do not want videos to be associated with their accounts need to log out before clicking on a button. Google stores page visitor information as usage profiles (even for users who are not logged in) and evaluates it. This evaluation occurs under Art. 6 (1) (f) of the GDPR based on Google\u2019s legitimate interests in showing personalised advertising, carrying out market research and/or designing its website according to users\u2019 requirements. Page visitors have a right to object against these user profiles. To exercise it, they must contact YouTube. For a privacy statement, contact details and further information on YouTube, see the list of our subcontractors below. Web hosting \u00b6 We use Amazon Web Services (\u201cAWS\u201d), a service provided by Amazon Web Services Germany GmbH, Krausenstr. 38, 10117 Berlin, Germany for hosting our database and web content. This information is stored in a data centre in Frankfurt/Main, Germany, which is certified according to ISO 27001, 27017 and 2018 as well as PCI DSS Level 1. Of course, Personizer has only limited rights of access and the data is protected against access by third parties using the latest technology. You can find the privacy statement and contact information of Amazon AWS in the list of our subcontractors below. Sending transaction e-mails \u00b6 We use Mailgun (Mailgun Technologies, Inc., 548 Market St. #43099, San Francisco, CA 94104, USA) for delivering order confirmations, notifications, invoice information, etc. We use Mailgun to ensure that our e-mail messages reach you reliably, securely and fast without being classified as spam. Mailgun is certified under the EU-US Privacy Shield which means the legal requirements for appropriate privacy levels according to Art. 45 of the GDPR are met. We have entered into an agreement with Mailgun regarding data processing on our behalf pursuant to Art. 28 of the GDPR. Under this agreement, Mailgun is obliged to protect our customers\u2019 data and not pass it on to third parties. For a privacy statement, contact details and further information on Mailgun, see the list of our subcontractors below. What information do we collect for contract purposes when you open a customer account? \u00b6 To use our services (whether free or chargeable), you must create a customer account. Below, we explain what information is stored or processed in connection with your customer account or with the execution of your contract. Creating a customer account for using our services \u00b6 If you want to use our services you will need to create a customer account. When you create a customer account, we store your e-mail address and password in accordance with Art. 6 (1) S. 1 (b) of the GDPR. We will store your information until you object to our storing it and close your customer account by sending an e-mail to info@ashampoo-systems.com. Unless statutory retention periods require otherwise, we will delete your data within ten (10) days following your objection. Ordering a chargeable service \u00b6 If you would like to use chargeable services, you will need to log in using your customer account. We only store and use the personal information you transmit to us during the ordering process in accordance with Art. 6 (1) S. 1 (b) of the GDPR for processing your orders. We will use your e-mail address for sending you notifications on the status of your order or related documents. We also offer you account reports as well as news & product information by e-mail. As part of the ordering process, the information you provide us with regarding your order (name, address, account number, bank sort code, credit card number, invoice amount, currency and transaction number, if applicable) is passed on to payment service providers Stripe (Stripe Inc., 510 Townsend Street, San Francisco, CA 94103, USA, USA) and Taxamo (EVAT Solutions Ltd, trading as Taxamo, 1, Library Place, Iveragh Rd, Castleconway, Killorglin, Co. Kerry, Ireland) via an encrypted SSL or TLS connection. This information is only passed on where necessary for processing payment transactions. See the list of our subcontractors below for privacy statements and contact information of the payment service providers. What information do we collect when you communicate with us? \u00b6 When you contact us, e.g. using our contact form, or when you participate in a survey, we may process personal data. Below, we explain what information this is and what purposes we process it for. Contact and support form \u00b6 You can contact us using web forms. To use our contact form, you typically only need to disclose your e-mail address. You can enter additional information, but this is not required. By submitting the form, you agree that the data you have specified will be recorded and stored electronically for up to 6 years. The legal basis of processing under the contractual relationship is Art. 6 (1) S. 1 (b) of the GDPR; for all other purposes, Art. 6 (1) S. 1 (b) of the GDPR shall apply. The website operator has a legitimate interest in carrying out the exchange you initiated or processing your inquiry effectively. In this regard, we only use your data for processing your inquiry. We use the Zendesk software solution offered by Zendesk Inc., 1019 Market St, San Francisco, CA 94103, USA to process your support or contact requests. Your data will be stored and processed on servers hosted by Zendesk in the EU. We have entered into an agreement with Zendesk regarding data processing on our behalf pursuant to Art. 28 of the GDPR. Under this agreement, Zendesk is obliged to protect our customers\u2019 data and not pass it on to third parties. For a privacy statement, contact details and further information on Zendesk, see the list of our subcontractors below. Surveys \u00b6 We use the services provided by SurveyMonkey Europe UC, 2nd Floor, 2 Shelbourne Buildings, Shelbourne Road, Dublin, Ireland for carrying out surveys on our website. If you participate in this optional survey, SurveyMonkey collects information on the device and the application you use for participating. This includes the IP address, the OS version, the device type as well as information on your system and its capabilities as well as the web browser type. If you use a mobile device for participating in the survey, SurveyMonkey will also store its UUID. SurveyMonkey also uses so-called tracking services by third-party providers which in turn use cookies and page tags (also known as web beacons) to collect usage data and user statistics. We have no control over the amount of data collected by SurveyMonkey. For more information on the cookies used by SurveyMonkey, on privacy and on retention periods, visit https://www.surveymonkey.com/mp/legal/privacy-policy/#pp-section-10. We use SurveyMonkey to offer you surveys. This purpose is also the basis of our legitimate interest to process this data according to Art. 6 (1) (f) of the GDPR. SurveyMonkey Europe UC is a subsidiary of SurveyMonkey Inc., based in the United States. We cannot exclude that your data collected by SurveyMonkey may also be transmitted to the United States. However, SurveyMonkey Inc. has agreed to abide by the Privacy Shield Agreement signed between the European Union and the United States and has obtained the appropriate certification. This means that SurveyMonkey is obliged to comply with the standards and regulations of European privacy legislation. For a privacy statement, contact details and further information on SurveyMonkey, see the list of our subcontractors below. Job applications, especially by e-mail \u00b6 We process your personal data in accordance with the applicable privacy regulations based on Section 26 of the German data protection act. We only process the information you provide to us in your (online) application for selecting applicants. This data is not processed for any other purposes. You determine the scope of the information you would like to transmit to us in your application. Applications are transmitted in encrypted form to our HR department, which will process them as quickly as possible. Normally applications are forwarded to the heads of the relevant departments. Your information will not be passed on to any other parties. Your information will be treated in confidence. If your application is not successful, your documents will be deleted after a period of 6 months. If we may use your application for other or for future job openings, please make a note of this on your application. We will then process your data in accordance with Art. 6 (1) S. 1 (a) of the GDPR. Security measures \u00b6 We take organisational, contractual and technical security measures according to the state of the art designed to ensure that privacy regulations are complied with and data we process are protected against accidental or deliberate manipulation, loss, destruction or access by unauthorised third parties. Connection security \u00b6 Our websites use encryption. The data you enter will be transmitted from your computer to our server and vice versa via the internet using TLS encryption. You can tell this from the closed lock symbol in the status bar of your browser and the https:// in the address bar. Data security \u00b6 Personizer user data is protected by technical and organizational security measures to minimise risks due to loss, abuse, unauthorised access and unauthorised disclosure or modification. Methods we use include firewalls, data encryption and physical restrictions of access to our data centres and data access authorisation checks. Administrative access \u00b6 For purposes of customer service and to track errors, Personizer employees may access the administrative area of our websites from time to time. This means they can access all areas of a website, including password-protected areas. All of our employees are made aware of privacy issues and are obliged to comply with privacy and data protection regulations. Duration of storage of personal data \u00b6 The data we process is deleted or processing is restricted in accordance with Articles 17 and 18 of the GDPR. Unless stated otherwise in this privacy statement, the data we store is deleted as soon as it is no longer required for its intended purpose and no statutory retention periods prevent it from being deleted and/or we have no legitimate interest in retaining it. If data is not deleted because it is required for other, legally permissible purposes, we restrict its processing, i.e. the data is blocked and cannot be processed for other purposes. For example, this applies to data which must be retained for commercial or for tax reasons. According to legal requirements in Germany, retention periods are 6 years pursuant to Section 257 (1) of the German Commercial Code (trading books, inventories, opening balance sheets, annual accounts, trade letters, accounting documents, etc.) and 10 years in accordance with Section 147 Abs. 1 AO (books, records, management reports, accounting documents, commercial and business letters, documents relevant for taxation, etc.). Rights of the data subjects \u00b6 Regarding the processing of your personal data, website visitors have certain rights under the GDPR: Right of access to information (Art. 15 GDPR) \u00b6 You are entitled to a confirmation as to whether your personal data is processed. If this is the case, you have a right to be informed about the nature of this personal data and the information listed in Article 15 of the GDPR. Right to rectification and deletion (Articles 16 and 17 of the GDPR) \u00b6 You have the right to request that incorrect personal data regarding you is corrected immediately or incomplete personal data is completed, as the case may be. In addition, you have the right to request that personal data regarding you is immediately deleted if one of the reasons stated in Art. 17 of the GDPR applies, e.g. if the data is no longer required for the purposes for which it was collected. Right to restriction of processing (Art. 18 of the GDPR) \u00b6 You have the right to request that processing is restricted if one of the prerequisites stated in Art. 18 of the GDPR applies, e.g. if you objected to processing, for the duration of a possible examination. Right to data portability (Art. 20 of the GDPR) \u00b6 In specific cases stated in Art. 20 of the GDPR, you have the right to obtain the personal data regarding you in a structured, common and machine-readable format or request that this data be transmitted to a third party. Right to object (Art. 21 GDPR) \u00b6 If data is collected based on Article 6 (1) S. 1 (f) (processing is required for the purposes of legitimate interests), you have the right to object to the processing at any time for reasons arising from your particular situation. We will then no longer process your personal data unless there are demonstrably compelling reasons that outweigh the interests, rights and freedoms of the data subject, or the processing serves to assert, exercise or defend legal claims. Right to appeal to a supervisory authority \u00b6 According to Art. 77 of the GDPR, you have the right to appeal to a supervisory authority if you consider the processing of personal data relating to you as a breach of data protection regulations. The right of appeal may be exercised in particular before a supervisory authority in the member state of your residence, your place of work or the place where the alleged infringement occurred. Changes to our privacy statement \u00b6 We reserve the right to amend this privacy statement from time to time to ensure it meets current statutory requirements or to ensure it reflects changes to our services, including the introduction of new services. The latest version of our privacy statement shall always be applicable. Contact \u00b6 Your trust is important to us. That is why we are always ready to answer your questions about the handling of your personal data. If, at any time, you have questions that this privacy policy could not answer or if you wish to receive more specific information about certain issues, please contact us or our data protection officer. Contact details of our data protection officer \u00b6 Dr. Uwe Schl\u00e4ger datenschutz nord GmbH Konsul-Smidt-Stra\u00dfe 88 28217 Bremen Web: www.datenschutz-nord-gruppe.de E-mail: office@datenschutz-nord.de Phone: +49-421-696632-0 List of our subcontractors \u00b6 We have entered into agreements with subcontractors carrying out data processing on our behalf pursuant to Art. 28 of the GDPR. Under these agreements, the subcontractors are obliged to protect our customers\u2019 data and not pass it on to third parties. Amazon Web Services \u00b6 Purpose of processing: Providing infrastructure and technical services as well as storing, processing and transmitting data of various types. Categories of personal data: Inventory data, content data, traffic data Data subjects: Personizer users Legal basis: Execution of contract, Art. 6 (1) S. 1 (b) of the GDPR Provider: Amazon Web Services Germany GmbH, Krausenstr. 38, 10117 Berlin, Germany Privacy statement: https://aws.amazon.com/privacy/ Stripe \u00b6 Purpose of processing: Payment processing Categories of personal data: Inventory data, payment data, contract data Data subjects: Personizer users Legal basis: Execution of contract, Art. 6 (1) S. 1 (b) of the GDPR Provider: Stripe Inc., 510 Townsend Street, San Francisco, CA 94103, USA Privacy statement: https://stripe.com/privacy Taxamo \u00b6 Purpose of processing: Processing of VAT regulations and billing Categories of personal data: Inventory data, payment data, contract data Data subjects: Personizer users Legal basis: Execution of contract, Art. 6 (1) (b) of the GDPR Provider: EVAT Solutions Ltd, trading as Taxamo, 1, Library Place, Iveragh Rd, Castleconway, Killorglin, Co. Kerry, Ireland Privacy statement: https://www.taxamo.com/privacy-policy/ Google Analytics \u00b6 Purpose of processing: Statistical evaluation of the website of Personizer GmbH & Co. KG. The data is processed completely anonymously. Categories of personal data: Usage data Data subjects: Personizer users, individuals who are interested in our services or visitors of the Personizer website. Legal basis: Legitimate interest, Art. 6 (1) (f) of the GDPR Provider: Google LLC, 1600, Amphitheatre Parkway, Mountain View, CA 94043, USA Privacy statement: https://tools.google.com/dlpage/gaoptout?hl=en/ Google Tag Manager \u00b6 Purpose of processing: Tag manager that triggers other tags that may collect data. Categories of personal data: none Data subjects: Personizer users, individuals who are interested in our services or visitors of the website Legal basis: Legitimate interest, Art. 6 (1) (f) of the GDPR Provider: Google LLC, 1600, Amphitheatre Parkway, Mountain View, CA 94043, USA Privacy statement: https://www.google.com/analytics/tag-manager/use-policy/ CleverReach \u00b6 Purpose of processing: Sending the newsletter, notifications. Categories of personal data: Inventory data, e-mail address Data subjects: Personizer users, individuals who are interested in our services or visitors of our website Legal basis: Consent, Art. 6 (1) S. 1 (a) of the GDPR, Legitimate interest, Art. 6 (1) (f) of the GDPR Provider: CleverReach GmbH & Co. KG, M\u00fchlenstr. 43, 26180 Rastede, Germany Privacy statement: https://www.cleverreach.com/en/privacy-policy/ Mailgun \u00b6 Purpose of processing: Sending order confirmations, contract renewal notifications, billing information as well as notifications and newsletters Categories of personal data: Inventory data, contract data Data subjects: Personizer users, individuals who are interested in our services or visitors of our website Legal basis: Execution of contract, Art. 6 (1) S. 1 (b) of the GDPR Provider: Mailgun Technologies, Inc., 548 Market St. #43099, San Francisco, CA 94104, USA Privacy statement: https://www.mailgun.com/privacy-policy Zendesk \u00b6 Purpose of processing: Providing customer support systems Categories of personal data: Content data, inventory data, usage data Data subjects: Personizer users, individuals who are interested in our services or visitors of the Personizer website Legal basis: Execution of contract, Art. 6 (1) S. 1 (b) of the GDPR / Legitimate interest, Art. 6 (1) (f) of the GDPR. Provider: Zendesk, Inc. Attn: Privacy Officer, 1019 Market Street, San Francisco, CA 94103, USA Privacy statement: https://www.zendesk.com/company/customers-partners/privacy-policy/ YouTube \u00b6 Purpose of processing: YouTube embedding function to display and play videos provided by YouTube Categories of personal data: Inventory data Data subjects: Personizer users, individuals who are interested in our services or visitors of the Personizer website Legal basis: Legitimate interest according to Art. 6 (1) S. 1 (f) of the GDPR Provider: Google LLC, 1600 Amphitheatre Parkway, Mountain View, CA 94043, USA Privacy statement: https://policies.google.com/privacy SurveyMonkey \u00b6 Purpose of processing: We use SurveyMonkey\u2019s services for carrying out surveys. Categories of personal data: Inventory data Data subjects: Personizer users, individuals who are interested in our services, newsletter subscribers Legal basis: Consent, Art. 6 (1) S. 1 (b) of the GDPR / Legitimate interest, Art. 6 (1) (f) of the GDPR Provider: SurveyMonkey Europe UC, 2nd Floor, 2 Shelbourne Buildings, Shelbourne Road, Dublin, Ireland Privacy statement: https://www.surveymonkey.com/mp/legal/privacy-policy/ Last revised: April 2019","title":"Privacy Policy"},{"location":"legal/privacy_policy/#privacy-policy","text":"Personizer GmbH & Co. KG (\u201cPersonizer\u201d or \u201cWe\u201d) would like to inform the visitors and users of our web pages and services about how we process their personal data and about the purpose, the nature and the scope of such processing. The entity responsible for data processing on our websites or in connection with our services within the meaning of the General Data Protection Regulation (GDPR) is Personizer GmbH & Co. KG, Schafj\u00fcckenweg 2, 26180 Rastede, Germany.","title":"Privacy Policy"},{"location":"legal/privacy_policy/#our-web-pages-and-services","text":"Since our web pages and services evolve constantly, this data protection information changes from time to time. In particular, this applies to the methods we use to analyse website usage and measure the effectiveness of advertising methods as well as to comparable services, especially services by third-party providers. For the current status, see the table below. Regarding our use of service providers outside the European Union: We provide different services for users around the world. We generally prefer using service providers based in the EU for specific services if they can provide the same quality and similar pricing. Many services we use are either not currently available from EU-based providers or the existing providers do not offer acceptable alternatives. For this reason, we use a number of service providers based outside the European Union. We take care to ensure that everything is done to achieve an appropriate level of protection of data according to European and national privacy regulations.","title":"Our web pages and services"},{"location":"legal/privacy_policy/#use-of-personal-data","text":"We collect, process and use personal information to provide our services. This includes advertising our products and informing individuals who are interested in or already use our services about the features available. The scope of processing personal data primarily depends on whether a user simply visits one of our websites, uses them as a registered user or is just registering.","title":"Use of personal data"},{"location":"legal/privacy_policy/#childrens-privacy","text":"Our websites are publicly accessible and not designed for children. We do not knowingly collect data from users who are considered minors under their national legislation.","title":"Children\u2019s privacy"},{"location":"legal/privacy_policy/#what-information-do-we-collect-when-you-visit-our-website","text":"When you visit our website, your online behaviour may be evaluated statistically. This is primarily done using cookies and so-called web analytics. Your online behaviour is typically analysed anonymously; it will not be traced back to you. We process your data according to Art. 6 (1) (f) of the GDPR based on our legitimate interest in improving the stability and functionality of our website.","title":"What information do we collect when you visit our website?"},{"location":"legal/privacy_policy/#cookies","text":"We use cookies on our web pages. Cookies are small text files that can be stored and read on your device. There are session cookies, which are deleted as soon as you close your web browser, and permanent cookies which remain stored even after the session is over. Cookies can contain data which allow a device to be recognised. In some cases, cookies only contain information on certain settings which are not connected with an individual. On our websites, we use session cookies and permanent cookies. We process your data based on Art. 6 (1) S. 1 (f) of the GDPR in order to enable user guidance, improve the user experience and adapt how our website is displayed to you. You can configure your web browser to inform you about cookies when they are stored on your device. This makes the use of cookies transparent to you. In addition, you can delete cookies using the corresponding browser command and prevent new cookies from being stored on your system. Please note that our web pages may not display properly in this case and some features may be unavailable.","title":"Cookies"},{"location":"legal/privacy_policy/#user-data-and-log-files","text":"When you visit our websites, so-called usage data records are temporarily stored on our web server for statistical purposes in order to improve the quality of our websites. These records consist of the following: the page from which you requested the file the name of the file the date and time of the request the amount of data transferred the access status (file transferred, file not found) the description of the type of web browser used the IP address of the requesting computer, which is truncated to ensure that it cannot be linked to a person This log data is stored anonymously. We only store this information for no more than seven days for the purpose of detecting, narrowing down and eliminating attacks on our websites. After this period, we delete this information. The legal basis of this activity is Art. 6 (1) S. 1 (f) of the GDPR.","title":"User data and log files"},{"location":"legal/privacy_policy/#web-analytics-services","text":"Based on our legitimate interest (i.e. interest in analysing, optimising and running our online offering within the meaning of Art. 6 (1) S. 1 (f) of the GDPR, we use the following web analytics tools:","title":"Web analytics services"},{"location":"legal/privacy_policy/#google-analytics","text":"To ensure the best possible user experience, we create anonymous usage profiles using Google Analytics. Google Analytics uses cookies which are stored on your device and which we can read. This allows us to recognise and count returning visitors anonymously. We process your data based on Art. 6 (1) S. 1 (f) of the GDPR or Section 15 (3) of the German telemedia act in order to determine how often different users access our web pages. The information the cookie generates on your use of this website is usually sent to a Google server in the USA and saved there. However, because we have enabled IP anonymisation on this website, Google will first truncate your IP address in European Union Member States. Only in exceptional cases will the full IP address be sent to and shortened by Google servers in the USA. According to Art. 45 para. 1 of the GDPR, an appropriate level of data protection exists due to Google\u2019s participation in the Privacy Shield. In addition, we have entered into an agreement with Google LLC (USA) regarding data processing on our behalf pursuant to Art. 28 of the GDPR. Under this agreement, Google will only use this information for evaluating how visitors use our website and compiling reports on website activities. You can object to this processing at any time by using one of the following methods: You may prevent the installation of cookies by adjusting the settings of your browser; however, if you do so, you may be unable to use all features of this website. Additionally, you can prevent the transfer to Google of the data generated by the cookie and relating to your use of the website (including your IP address) and prevent Google from processing this data by downloading and installing the browser plugin available here. You will find the privacy statement, contact details and further information on Google Analytics in the list of our subcontractors below.","title":"Google Analytics"},{"location":"legal/privacy_policy/#advertising-remarketing-conversion-tracking","text":"Based on our legitimate interest, i.e. our interest in marketing our website optimally and analysing user behaviour in order to optimise our website as well as our advertising, and based on the express consent of the page visitor where required, we use the following online marketing services on our websites:","title":"Advertising (remarketing, conversion tracking)"},{"location":"legal/privacy_policy/#google-remarketing","text":"We use Google\u2019s cross-device remarketing technologies to allow other websites to show you targeted advertising based on your visit to our websites. We process your data based on Art. 6 (1) S. 1 (f) of the GDPR. The website operator has a legitimate interest in analysing user behaviour in order to optimise both their website and their advertising. When you visit our websites, it is possible for Google\u2019s cross-device remarketing technologies to retrieve identifiers of the web browser you use (e.g. by creating a so-called browser fingerprint), evaluate your IP address or store identifiers (small text files, e.g. third-party cookies) on your device. Google may also link your visit to our websites to one or several of these identifiers as well as store this information to show you our advertisements on other websites. The identifiers described above are designed as pseudonyms. We can ask Google to use its cross-device remarketing technologies to show you advertising on other websites based on the pages you visit on our websites. So if you visit a site that participates in Google\u2019s display advertising network, Google can use the identifiers to determine if and what advertising should be displayed to you. For more information about how Google remarketing technologies work, see https://www.google.com/policies/technologies/ads/. If you log in to Google services using your own login credentials or use one or more Google accounts of your own, Google may link the identifiers of different web browsers or devices with each other. So if Google has created separate identifiers for your laptop, desktop, smartphone or tablet PC, these identifiers can be associated with one another as soon as you access a Google service using your login credentials. This allows Google to target our advertising campaigns beyond individual devices. However, Google will only do this if you have given Google your consent to process your information in this way in the past. You can adjust your settings to control advertising. You can object to this type of advertising at any time. To disable personalised advertising, visit https://support.google.com/ads/answer/2662922. Please note that these settings may not work for all devices or web browsers. For a privacy statement, contact details and further information on Google, see the list of our subcontractors below.","title":"Google Remarketing"},{"location":"legal/privacy_policy/#google-ads-and-google-conversion-tracking","text":"We use Google Ads. Google Ads is an online advertising program provided by Google LLC, 1600 Amphitheatre Parkway, Mountain View, CA 94043, United States (\u201cGoogle\u201d). As part of Google Ads, we use conversion tracking. When you click on an ad served by Google, a conversion tracking cookie will be set. Cookies are small text files that web browsers store on the user\u2019s computer. These cookies expire after 30 days and are not used to identify users. When a user visits certain pages of this website while the cookie is still active, Google (and we) can see that the user has clicked on the ad and was forwarded to this page. Each organisation using Google Ads receives a different cookie. The cookies cannot be tracked via the websites of these organisations. The information obtained by means of conversion cookies is used to create conversion statistics for Google Ads customers using conversion tracking. Customers are informed of the total number of users who have clicked on their ads and were forwarded to a page with a conversion tracking tag. However, they do not receive information which can be used to identify users personally. If you do not wish to participate in tracking, you can object to this use by disabling the conversion tracking cookie in the user settings of your web browser. You will then not be included in the conversion tracking statistics. Conversion cookies are stored and this tracking tool is used under Art. 6 (1) (f) of the GDPR. The website operator has a legitimate interest in analysing user behaviour in order to optimise both their website and their advertising. For more information about Google Ads and Google Conversion Tracking, see the Google Privacy Policy. You can configure your browser so that it informs you when cookies are installed and only permits them individually, blocks cookies on a case-by-case basis or generally, or automatically deletes them when you close your web browser. The functionality of this website may be reduced if cookies are disabled. For a privacy statement, contact details and further information on Google Ads, see the list of our subcontractors below.","title":"Google Ads and Google Conversion Tracking"},{"location":"legal/privacy_policy/#bing-universal-event-tracking-uet","text":"The Boden and Personizer websites use Bing Ads technology to collect and store data that is used to create usage profiles using pseudonyms. This service enables us to track user activity on our website when it has reached our website via advertisements from Bing Ads. If the page visitor reaches our website via such an ad, a cookie is set on their computer. On our website a Bing UET tag is integrated. This is a code used to store some non-personally identifiable information about the use of the website in connection with the cookie. This includes, among other things, the length of time spent on the website, which areas of the website were accessed, and which advertisements have reached the website. Information on the identity of the respective site visitor, as well as forms for entering personal data are not recorded. The collected information is transmitted to Microsoft servers in the USA and stored there for a maximum of 180 days. The collection of the data generated by the cookie and related to the use of the website as well as the processing of this data can be prevented by deactivating the setting of cookies by the site visitor in their browser. In addition, based on the user\u2019s preferences Microsoft may be able to track usage behaviour across multiple electronic devices through cross-device tracking, enabling it to display personalised advertising on or in Microsoft websites and apps. This behaviour can be disabled by the site visitor at https://choice.microsoft.com/en-us/opt-out. For more information on Bing analytics services, visit the Bing Ads website. For more information about privacy at Microsoft and Bing, see the Microsoft Privacy Policy.","title":"Bing Universal Event Tracking (UET)"},{"location":"legal/privacy_policy/#newsletter","text":"Below, we describe the content of our newsletters as well as the procedure for opting in, the delivery process, the statistical evaluation process and your right to object. By subscribing to our newsletter, you agree to receive it and you accept the procedures described above.","title":"Newsletter"},{"location":"legal/privacy_policy/#content-of-the-newsletter","text":"We only dispatch newsletters, e-mails or other electronic notifications containing advertising (referenced as \u201cnewsletter\u201d below) with the consent of the recipient or based on legal authorisation. If the user receives a specific description of the contents of the newsletter when subscribing, their consent applies to such contents. Otherwise, our newsletters contain information on our products, offers, promotions and our company.","title":"Content of the newsletter"},{"location":"legal/privacy_policy/#double-opt-in-and-logging","text":"We use a double opt-in process when you subscribe to our newsletter. This means you receive an e-mail asking you to confirm your subscription. This confirmation is necessary to ensure no one subscribes with someone else\u2019s e-mail address. Subscriptions to our newsletter are logged to allow us to provide evidence of subscriptions in accordance with regulations. This includes storing the time of registration and confirmation as well as the IP address. Changes to the information stored by our delivery service provider are also logged.","title":"Double opt-in and logging"},{"location":"legal/privacy_policy/#delivery-service-provider","text":"Newsletters are mailed through CleverReach (CleverReach GmbH & Co. KG, M\u00fchlenstr. 43, 26180 Rastede, Germany), our delivery service provider. For a privacy statement, contact details and further information on the delivery service provider, see the list of our subcontractors below. The delivery service provider can also use data to improve its own services in anonymous form (i.e. without connecting the data to users), e.g. for technically improving its dispatch processes or how it displays the newsletters or for statistical purposes, e.g. for determining recipients\u2019 countries. However, the delivery service provider does not use our newsletter recipients\u2019 information to contact them itself or pass data on to third parties.","title":"Delivery Service Provider"},{"location":"legal/privacy_policy/#subscription-information","text":"To subscribe to our newsletter, your e-mail address is sufficient. Optionally, you can specify a name so we can address you personally in the newsletter.","title":"Subscription information"},{"location":"legal/privacy_policy/#statistical-surveyanalysis","text":"Our newsletters include a so-called web beacon. This is a pixel-sized file which is retrieved by the delivery service provider when you open the newsletter. The beacon enables us to collect technical information, e.g. on your web browser and your system, as well as your IP address and the time of the beacon retrieval. This information is used to improve our services based on the technical information or the target groups and their viewing behaviour in connection with the places of retrieval (which can be determined using the IP address) or the times of access. The statistical information collected also includes whether the newsletters were opened, when they were opened and what links were clicked. While it is technically possible to associate this information with individual newsletter recipients, neither we nor our delivery service provider are interested in monitoring individual users. Instead, we use this information to understand the viewing habits of our users and adapt our content accordingly or to send different content according to our users\u2019 interests. Our use of a delivery service provider, our statistical evaluation/analysis and our logging of the registration process is based on our legitimate interests according to Art. 6 (1) (f) of the GDPR. We are interested in providing a user-friendly, secure newsletter system that serves our business interests while meeting users\u2019 expectations.","title":"Statistical survey/analysis"},{"location":"legal/privacy_policy/#terminationcancellation","text":"You can unsubscribe from our newsletter at any time by revoking your consent. This simultaneously cancels your consent to its delivery via the delivery service provider and your consent to the statistical surveys. We regret that it is not possible to separately cancel the delivery by the delivery service provider and the statistical survey. You can find an Unsubscribe link at the bottom of each newsletter.","title":"Termination/cancellation"},{"location":"legal/privacy_policy/#tools","text":"We use a number of Google tools to enhance the functionality of our website.","title":"Tools"},{"location":"legal/privacy_policy/#google-tag-manager","text":"We use Google Tag Manager. Google Tag Manager is a solution marketers use to manage website tags. Google Tag Manager itself (the tool that implements the tags) is a cookie-free domain that does not collect personal data. The tool triggers other tags which may collect data. Google Tag Manager does not access this data. For a privacy statement, contact details and further information on Google Tag Manager, see the list of our subcontractors below.","title":"Google Tag Manager"},{"location":"legal/privacy_policy/#google-recaptcha","text":"We use Google reCAPTCHA (referred to as \u201creCAPTCHA\u201d below) on our websites. This service is offered by Google LLC, 1600 Amphitheatre Parkway, Mountain View, CA 94043, USA (\u201cGoogle\u201d). reCAPTCHA is designed to check whether data is entered on our websites by a human or by automated software, e.g. in a contact form. To determine this, reCAPTCHA analyses the website visitor\u2019s behaviour using different characteristics. This analysis starts automatically as soon as the visitor opens the website. reCAPTCHA evaluates different information such as IP addresses, the time the visitor spends on the website, and mouse actions. The data collected is forwarded to Google. reCAPTCHA evaluations run entirely in the background. Website visitors are not notified of the evaluation. We process your data based on Art. 6 (1) (f) of the GDPR. The website operator has a legitimate interest in protecting its web offerings from automated spying or spam. For a privacy statement, contact details and further information on Google reCAPTCHA, see the list of our subcontractors below.","title":"Google reCAPTCHA"},{"location":"legal/privacy_policy/#youtube-videos","text":"Our website uses the YouTube embedding function to display and play videos provided by YouTube, which is part of Google. When embedded YouTube videos are started, YouTube uses cookies to collect user behaviour information. According to information provided by YouTube, these cookies are used to collect video statistics, improve user friendliness and prevent abuse. When the site visitor is logged in to Google, data generated when clicking on a video is directly associated with their account. Page visitors who do not want videos to be associated with their accounts need to log out before clicking on a button. Google stores page visitor information as usage profiles (even for users who are not logged in) and evaluates it. This evaluation occurs under Art. 6 (1) (f) of the GDPR based on Google\u2019s legitimate interests in showing personalised advertising, carrying out market research and/or designing its website according to users\u2019 requirements. Page visitors have a right to object against these user profiles. To exercise it, they must contact YouTube. For a privacy statement, contact details and further information on YouTube, see the list of our subcontractors below.","title":"YouTube videos"},{"location":"legal/privacy_policy/#web-hosting","text":"We use Amazon Web Services (\u201cAWS\u201d), a service provided by Amazon Web Services Germany GmbH, Krausenstr. 38, 10117 Berlin, Germany for hosting our database and web content. This information is stored in a data centre in Frankfurt/Main, Germany, which is certified according to ISO 27001, 27017 and 2018 as well as PCI DSS Level 1. Of course, Personizer has only limited rights of access and the data is protected against access by third parties using the latest technology. You can find the privacy statement and contact information of Amazon AWS in the list of our subcontractors below.","title":"Web hosting"},{"location":"legal/privacy_policy/#sending-transaction-e-mails","text":"We use Mailgun (Mailgun Technologies, Inc., 548 Market St. #43099, San Francisco, CA 94104, USA) for delivering order confirmations, notifications, invoice information, etc. We use Mailgun to ensure that our e-mail messages reach you reliably, securely and fast without being classified as spam. Mailgun is certified under the EU-US Privacy Shield which means the legal requirements for appropriate privacy levels according to Art. 45 of the GDPR are met. We have entered into an agreement with Mailgun regarding data processing on our behalf pursuant to Art. 28 of the GDPR. Under this agreement, Mailgun is obliged to protect our customers\u2019 data and not pass it on to third parties. For a privacy statement, contact details and further information on Mailgun, see the list of our subcontractors below.","title":"Sending transaction e-mails"},{"location":"legal/privacy_policy/#what-information-do-we-collect-for-contract-purposes-when-you-open-a-customer-account","text":"To use our services (whether free or chargeable), you must create a customer account. Below, we explain what information is stored or processed in connection with your customer account or with the execution of your contract.","title":"What information do we collect for contract purposes when you open a customer account?"},{"location":"legal/privacy_policy/#creating-a-customer-account-for-using-our-services","text":"If you want to use our services you will need to create a customer account. When you create a customer account, we store your e-mail address and password in accordance with Art. 6 (1) S. 1 (b) of the GDPR. We will store your information until you object to our storing it and close your customer account by sending an e-mail to info@ashampoo-systems.com. Unless statutory retention periods require otherwise, we will delete your data within ten (10) days following your objection.","title":"Creating a customer account for using our services"},{"location":"legal/privacy_policy/#ordering-a-chargeable-service","text":"If you would like to use chargeable services, you will need to log in using your customer account. We only store and use the personal information you transmit to us during the ordering process in accordance with Art. 6 (1) S. 1 (b) of the GDPR for processing your orders. We will use your e-mail address for sending you notifications on the status of your order or related documents. We also offer you account reports as well as news & product information by e-mail. As part of the ordering process, the information you provide us with regarding your order (name, address, account number, bank sort code, credit card number, invoice amount, currency and transaction number, if applicable) is passed on to payment service providers Stripe (Stripe Inc., 510 Townsend Street, San Francisco, CA 94103, USA, USA) and Taxamo (EVAT Solutions Ltd, trading as Taxamo, 1, Library Place, Iveragh Rd, Castleconway, Killorglin, Co. Kerry, Ireland) via an encrypted SSL or TLS connection. This information is only passed on where necessary for processing payment transactions. See the list of our subcontractors below for privacy statements and contact information of the payment service providers.","title":"Ordering a chargeable service"},{"location":"legal/privacy_policy/#what-information-do-we-collect-when-you-communicate-with-us","text":"When you contact us, e.g. using our contact form, or when you participate in a survey, we may process personal data. Below, we explain what information this is and what purposes we process it for.","title":"What information do we collect when you communicate with\u00a0us?"},{"location":"legal/privacy_policy/#contact-and-support-form","text":"You can contact us using web forms. To use our contact form, you typically only need to disclose your e-mail address. You can enter additional information, but this is not required. By submitting the form, you agree that the data you have specified will be recorded and stored electronically for up to 6 years. The legal basis of processing under the contractual relationship is Art. 6 (1) S. 1 (b) of the GDPR; for all other purposes, Art. 6 (1) S. 1 (b) of the GDPR shall apply. The website operator has a legitimate interest in carrying out the exchange you initiated or processing your inquiry effectively. In this regard, we only use your data for processing your inquiry. We use the Zendesk software solution offered by Zendesk Inc., 1019 Market St, San Francisco, CA 94103, USA to process your support or contact requests. Your data will be stored and processed on servers hosted by Zendesk in the EU. We have entered into an agreement with Zendesk regarding data processing on our behalf pursuant to Art. 28 of the GDPR. Under this agreement, Zendesk is obliged to protect our customers\u2019 data and not pass it on to third parties. For a privacy statement, contact details and further information on Zendesk, see the list of our subcontractors below.","title":"Contact and support form"},{"location":"legal/privacy_policy/#surveys","text":"We use the services provided by SurveyMonkey Europe UC, 2nd Floor, 2 Shelbourne Buildings, Shelbourne Road, Dublin, Ireland for carrying out surveys on our website. If you participate in this optional survey, SurveyMonkey collects information on the device and the application you use for participating. This includes the IP address, the OS version, the device type as well as information on your system and its capabilities as well as the web browser type. If you use a mobile device for participating in the survey, SurveyMonkey will also store its UUID. SurveyMonkey also uses so-called tracking services by third-party providers which in turn use cookies and page tags (also known as web beacons) to collect usage data and user statistics. We have no control over the amount of data collected by SurveyMonkey. For more information on the cookies used by SurveyMonkey, on privacy and on retention periods, visit https://www.surveymonkey.com/mp/legal/privacy-policy/#pp-section-10. We use SurveyMonkey to offer you surveys. This purpose is also the basis of our legitimate interest to process this data according to Art. 6 (1) (f) of the GDPR. SurveyMonkey Europe UC is a subsidiary of SurveyMonkey Inc., based in the United States. We cannot exclude that your data collected by SurveyMonkey may also be transmitted to the United States. However, SurveyMonkey Inc. has agreed to abide by the Privacy Shield Agreement signed between the European Union and the United States and has obtained the appropriate certification. This means that SurveyMonkey is obliged to comply with the standards and regulations of European privacy legislation. For a privacy statement, contact details and further information on SurveyMonkey, see the list of our subcontractors below.","title":"Surveys"},{"location":"legal/privacy_policy/#job-applications-especially-by-e-mail","text":"We process your personal data in accordance with the applicable privacy regulations based on Section 26 of the German data protection act. We only process the information you provide to us in your (online) application for selecting applicants. This data is not processed for any other purposes. You determine the scope of the information you would like to transmit to us in your application. Applications are transmitted in encrypted form to our HR department, which will process them as quickly as possible. Normally applications are forwarded to the heads of the relevant departments. Your information will not be passed on to any other parties. Your information will be treated in confidence. If your application is not successful, your documents will be deleted after a period of 6 months. If we may use your application for other or for future job openings, please make a note of this on your application. We will then process your data in accordance with Art. 6 (1) S. 1 (a) of the GDPR.","title":"Job applications, especially by e-mail"},{"location":"legal/privacy_policy/#security-measures","text":"We take organisational, contractual and technical security measures according to the state of the art designed to ensure that privacy regulations are complied with and data we process are protected against accidental or deliberate manipulation, loss, destruction or access by unauthorised third parties.","title":"Security measures"},{"location":"legal/privacy_policy/#connection-security","text":"Our websites use encryption. The data you enter will be transmitted from your computer to our server and vice versa via the internet using TLS encryption. You can tell this from the closed lock symbol in the status bar of your browser and the https:// in the address bar.","title":"Connection security"},{"location":"legal/privacy_policy/#data-security","text":"Personizer user data is protected by technical and organizational security measures to minimise risks due to loss, abuse, unauthorised access and unauthorised disclosure or modification. Methods we use include firewalls, data encryption and physical restrictions of access to our data centres and data access authorisation checks.","title":"Data security"},{"location":"legal/privacy_policy/#administrative-access","text":"For purposes of customer service and to track errors, Personizer employees may access the administrative area of our websites from time to time. This means they can access all areas of a website, including password-protected areas. All of our employees are made aware of privacy issues and are obliged to comply with privacy and data protection regulations.","title":"Administrative access"},{"location":"legal/privacy_policy/#duration-of-storage-of-personal-data","text":"The data we process is deleted or processing is restricted in accordance with Articles 17 and 18 of the GDPR. Unless stated otherwise in this privacy statement, the data we store is deleted as soon as it is no longer required for its intended purpose and no statutory retention periods prevent it from being deleted and/or we have no legitimate interest in retaining it. If data is not deleted because it is required for other, legally permissible purposes, we restrict its processing, i.e. the data is blocked and cannot be processed for other purposes. For example, this applies to data which must be retained for commercial or for tax reasons. According to legal requirements in Germany, retention periods are 6 years pursuant to Section 257 (1) of the German Commercial Code (trading books, inventories, opening balance sheets, annual accounts, trade letters, accounting documents, etc.) and 10 years in accordance with Section 147 Abs. 1 AO (books, records, management reports, accounting documents, commercial and business letters, documents relevant for taxation, etc.).","title":"Duration of storage of personal data"},{"location":"legal/privacy_policy/#rights-of-the-data-subjects","text":"Regarding the processing of your personal data, website visitors have certain rights under the GDPR:","title":"Rights of the data subjects"},{"location":"legal/privacy_policy/#right-of-access-to-information-art-15-gdpr","text":"You are entitled to a confirmation as to whether your personal data is processed. If this is the case, you have a right to be informed about the nature of this personal data and the information listed in Article 15 of the GDPR.","title":"Right of access to information (Art. 15 GDPR)"},{"location":"legal/privacy_policy/#right-to-rectification-and-deletion-articles-16-and-17-of-the-gdpr","text":"You have the right to request that incorrect personal data regarding you is corrected immediately or incomplete personal data is completed, as the case may be. In addition, you have the right to request that personal data regarding you is immediately deleted if one of the reasons stated in Art. 17 of the GDPR applies, e.g. if the data is no longer required for the purposes for which it was collected.","title":"Right to rectification and deletion (Articles 16 and 17 of the GDPR)"},{"location":"legal/privacy_policy/#right-to-restriction-of-processing-art-18-of-the-gdpr","text":"You have the right to request that processing is restricted if one of the prerequisites stated in Art. 18 of the GDPR applies, e.g. if you objected to processing, for the duration of a possible examination.","title":"Right to restriction of processing (Art. 18 of the GDPR)"},{"location":"legal/privacy_policy/#right-to-data-portability-art-20-of-the-gdpr","text":"In specific cases stated in Art. 20 of the GDPR, you have the right to obtain the personal data regarding you in a structured, common and machine-readable format or request that this data be transmitted to a third party.","title":"Right to data portability (Art. 20 of the GDPR)"},{"location":"legal/privacy_policy/#right-to-object-art-21-gdpr","text":"If data is collected based on Article 6 (1) S. 1 (f) (processing is required for the purposes of legitimate interests), you have the right to object to the processing at any time for reasons arising from your particular situation. We will then no longer process your personal data unless there are demonstrably compelling reasons that outweigh the interests, rights and freedoms of the data subject, or the processing serves to assert, exercise or defend legal claims.","title":"Right to object (Art. 21 GDPR)"},{"location":"legal/privacy_policy/#right-to-appeal-to-a-supervisory-authority","text":"According to Art. 77 of the GDPR, you have the right to appeal to a supervisory authority if you consider the processing of personal data relating to you as a breach of data protection regulations. The right of appeal may be exercised in particular before a supervisory authority in the member state of your residence, your place of work or the place where the alleged infringement occurred.","title":"Right to appeal to a supervisory authority"},{"location":"legal/privacy_policy/#changes-to-our-privacy-statement","text":"We reserve the right to amend this privacy statement from time to time to ensure it meets current statutory requirements or to ensure it reflects changes to our services, including the introduction of new services. The latest version of our privacy statement shall always be applicable.","title":"Changes to our privacy statement"},{"location":"legal/privacy_policy/#contact","text":"Your trust is important to us. That is why we are always ready to answer your questions about the handling of your personal data. If, at any time, you have questions that this privacy policy could not answer or if you wish to receive more specific information about certain issues, please contact us or our data protection officer.","title":"Contact"},{"location":"legal/privacy_policy/#contact-details-of-our-data-protection-officer","text":"Dr. Uwe Schl\u00e4ger datenschutz nord GmbH Konsul-Smidt-Stra\u00dfe 88 28217 Bremen Web: www.datenschutz-nord-gruppe.de E-mail: office@datenschutz-nord.de Phone: +49-421-696632-0","title":"Contact details of our data protection officer"},{"location":"legal/privacy_policy/#list-of-our-subcontractors","text":"We have entered into agreements with subcontractors carrying out data processing on our behalf pursuant to Art. 28 of the GDPR. Under these agreements, the subcontractors are obliged to protect our customers\u2019 data and not pass it on to third parties.","title":"List of our subcontractors"},{"location":"legal/privacy_policy/#amazon-web-services","text":"Purpose of processing: Providing infrastructure and technical services as well as storing, processing and transmitting data of various types. Categories of personal data: Inventory data, content data, traffic data Data subjects: Personizer users Legal basis: Execution of contract, Art. 6 (1) S. 1 (b) of the GDPR Provider: Amazon Web Services Germany GmbH, Krausenstr. 38, 10117 Berlin, Germany Privacy statement: https://aws.amazon.com/privacy/","title":"Amazon Web Services"},{"location":"legal/privacy_policy/#stripe","text":"Purpose of processing: Payment processing Categories of personal data: Inventory data, payment data, contract data Data subjects: Personizer users Legal basis: Execution of contract, Art. 6 (1) S. 1 (b) of the GDPR Provider: Stripe Inc., 510 Townsend Street, San Francisco, CA 94103, USA Privacy statement: https://stripe.com/privacy","title":"Stripe"},{"location":"legal/privacy_policy/#taxamo","text":"Purpose of processing: Processing of VAT regulations and billing Categories of personal data: Inventory data, payment data, contract data Data subjects: Personizer users Legal basis: Execution of contract, Art. 6 (1) (b) of the GDPR Provider: EVAT Solutions Ltd, trading as Taxamo, 1, Library Place, Iveragh Rd, Castleconway, Killorglin, Co. Kerry, Ireland Privacy statement: https://www.taxamo.com/privacy-policy/","title":"Taxamo"},{"location":"legal/privacy_policy/#google-analytics_1","text":"Purpose of processing: Statistical evaluation of the website of Personizer GmbH & Co. KG. The data is processed completely anonymously. Categories of personal data: Usage data Data subjects: Personizer users, individuals who are interested in our services or visitors of the Personizer website. Legal basis: Legitimate interest, Art. 6 (1) (f) of the GDPR Provider: Google LLC, 1600, Amphitheatre Parkway, Mountain View, CA 94043, USA Privacy statement: https://tools.google.com/dlpage/gaoptout?hl=en/","title":"Google Analytics"},{"location":"legal/privacy_policy/#google-tag-manager_1","text":"Purpose of processing: Tag manager that triggers other tags that may collect data. Categories of personal data: none Data subjects: Personizer users, individuals who are interested in our services or visitors of the website Legal basis: Legitimate interest, Art. 6 (1) (f) of the GDPR Provider: Google LLC, 1600, Amphitheatre Parkway, Mountain View, CA 94043, USA Privacy statement: https://www.google.com/analytics/tag-manager/use-policy/","title":"Google Tag Manager"},{"location":"legal/privacy_policy/#cleverreach","text":"Purpose of processing: Sending the newsletter, notifications. Categories of personal data: Inventory data, e-mail address Data subjects: Personizer users, individuals who are interested in our services or visitors of our website Legal basis: Consent, Art. 6 (1) S. 1 (a) of the GDPR, Legitimate interest, Art. 6 (1) (f) of the GDPR Provider: CleverReach GmbH & Co. KG, M\u00fchlenstr. 43, 26180 Rastede, Germany Privacy statement: https://www.cleverreach.com/en/privacy-policy/","title":"CleverReach"},{"location":"legal/privacy_policy/#mailgun","text":"Purpose of processing: Sending order confirmations, contract renewal notifications, billing information as well as notifications and newsletters Categories of personal data: Inventory data, contract data Data subjects: Personizer users, individuals who are interested in our services or visitors of our website Legal basis: Execution of contract, Art. 6 (1) S. 1 (b) of the GDPR Provider: Mailgun Technologies, Inc., 548 Market St. #43099, San Francisco, CA 94104, USA Privacy statement: https://www.mailgun.com/privacy-policy","title":"Mailgun"},{"location":"legal/privacy_policy/#zendesk","text":"Purpose of processing: Providing customer support systems Categories of personal data: Content data, inventory data, usage data Data subjects: Personizer users, individuals who are interested in our services or visitors of the Personizer website Legal basis: Execution of contract, Art. 6 (1) S. 1 (b) of the GDPR / Legitimate interest, Art. 6 (1) (f) of the GDPR. Provider: Zendesk, Inc. Attn: Privacy Officer, 1019 Market Street, San Francisco, CA 94103, USA Privacy statement: https://www.zendesk.com/company/customers-partners/privacy-policy/","title":"Zendesk"},{"location":"legal/privacy_policy/#youtube","text":"Purpose of processing: YouTube embedding function to display and play videos provided by YouTube Categories of personal data: Inventory data Data subjects: Personizer users, individuals who are interested in our services or visitors of the Personizer website Legal basis: Legitimate interest according to Art. 6 (1) S. 1 (f) of the GDPR Provider: Google LLC, 1600 Amphitheatre Parkway, Mountain View, CA 94043, USA Privacy statement: https://policies.google.com/privacy","title":"YouTube"},{"location":"legal/privacy_policy/#surveymonkey","text":"Purpose of processing: We use SurveyMonkey\u2019s services for carrying out surveys. Categories of personal data: Inventory data Data subjects: Personizer users, individuals who are interested in our services, newsletter subscribers Legal basis: Consent, Art. 6 (1) S. 1 (b) of the GDPR / Legitimate interest, Art. 6 (1) (f) of the GDPR Provider: SurveyMonkey Europe UC, 2nd Floor, 2 Shelbourne Buildings, Shelbourne Road, Dublin, Ireland Privacy statement: https://www.surveymonkey.com/mp/legal/privacy-policy/ Last revised: April 2019","title":"SurveyMonkey"},{"location":"legal/licensing/","text":"Overview \u00b6 Boden Cross-Platform Framework Copyright \u00a9 2019 Personizer GmbH & Co. KG Open Source Framework License \u00b6 You may license Boden under one of the following open-source licenses: GNU General Public License Version 2 GNU General Public License Version 3 GNU Lesser General Public License Version 2.1 GNU Lesser General Public License Version 3 For commercial/proprietary licensing, please contact us at boden-team@ashampoo-systems.com . Documentation License \u00b6 The Boden documentation is licensed under the GNU Free Documentation License .","title":"Overview"},{"location":"legal/licensing/#overview","text":"Boden Cross-Platform Framework Copyright \u00a9 2019 Personizer GmbH & Co. KG","title":"Overview"},{"location":"legal/licensing/#open-source-framework-license","text":"You may license Boden under one of the following open-source licenses: GNU General Public License Version 2 GNU General Public License Version 3 GNU Lesser General Public License Version 2.1 GNU Lesser General Public License Version 3 For commercial/proprietary licensing, please contact us at boden-team@ashampoo-systems.com .","title":"Open Source Framework License"},{"location":"legal/licensing/#documentation-license","text":"The Boden documentation is licensed under the GNU Free Documentation License .","title":"Documentation License"},{"location":"legal/licensing/fdl-1.3/","text":"GNU Free Documentation License \u00b6 Version 1.3, 3 November 2008 Copyright (C) 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc. https://fsf.org/ Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. 0. PREAMBLE \u00b6 The purpose of this License is to make a manual, textbook, or other functional and useful document \"free\" in the sense of freedom: to assure everyone the effective freedom to copy and redistribute it, with or without modifying it, either commercially or noncommercially. Secondarily, this License preserves for the author and publisher a way to get credit for their work, while not being considered responsible for modifications made by others. This License is a kind of \"copyleft\", which means that derivative works of the document must themselves be free in the same sense. It complements the GNU General Public License, which is a copyleft license designed for free software. We have designed this License in order to use it for manuals for free software, because free software needs free documentation: a free program should come with manuals providing the same freedoms that the software does. But this License is not limited to software manuals; it can be used for any textual work, regardless of subject matter or whether it is published as a printed book. We recommend this License principally for works whose purpose is instruction or reference. 1. APPLICABILITY AND DEFINITIONS \u00b6 This License applies to any manual or other work, in any medium, that contains a notice placed by the copyright holder saying it can be distributed under the terms of this License. Such a notice grants a world-wide, royalty-free license, unlimited in duration, to use that work under the conditions stated herein. The \"Document\", below, refers to any such manual or work. Any member of the public is a licensee, and is addressed as \"you\". You accept the license if you copy, modify or distribute the work in a way requiring permission under copyright law. A \"Modified Version\" of the Document means any work containing the Document or a portion of it, either copied verbatim, or with modifications and/or translated into another language. A \"Secondary Section\" is a named appendix or a front-matter section of the Document that deals exclusively with the relationship of the publishers or authors of the Document to the Document's overall subject (or to related matters) and contains nothing that could fall directly within that overall subject. (Thus, if the Document is in part a textbook of mathematics, a Secondary Section may not explain any mathematics.) The relationship could be a matter of historical connection with the subject or with related matters, or of legal, commercial, philosophical, ethical or political position regarding them. The \"Invariant Sections\" are certain Secondary Sections whose titles are designated, as being those of Invariant Sections, in the notice that says that the Document is released under this License. If a section does not fit the above definition of Secondary then it is not allowed to be designated as Invariant. The Document may contain zero Invariant Sections. If the Document does not identify any Invariant Sections then there are none. The \"Cover Texts\" are certain short passages of text that are listed, as Front-Cover Texts or Back-Cover Texts, in the notice that says that the Document is released under this License. A Front-Cover Text may be at most 5 words, and a Back-Cover Text may be at most 25 words. A \"Transparent\" copy of the Document means a machine-readable copy, represented in a format whose specification is available to the general public, that is suitable for revising the document straightforwardly with generic text editors or (for images composed of pixels) generic paint programs or (for drawings) some widely available drawing editor, and that is suitable for input to text formatters or for automatic translation to a variety of formats suitable for input to text formatters. A copy made in an otherwise Transparent file format whose markup, or absence of markup, has been arranged to thwart or discourage subsequent modification by readers is not Transparent. An image format is not Transparent if used for any substantial amount of text. A copy that is not \"Transparent\" is called \"Opaque\". Examples of suitable formats for Transparent copies include plain ASCII without markup, Texinfo input format, LaTeX input format, SGML or XML using a publicly available DTD, and standard-conforming simple HTML, PostScript or PDF designed for human modification. Examples of transparent image formats include PNG, XCF and JPG. Opaque formats include proprietary formats that can be read and edited only by proprietary word processors, SGML or XML for which the DTD and/or processing tools are not generally available, and the machine-generated HTML, PostScript or PDF produced by some word processors for output purposes only. The \"Title Page\" means, for a printed book, the title page itself, plus such following pages as are needed to hold, legibly, the material this License requires to appear in the title page. For works in formats which do not have any title page as such, \"Title Page\" means the text near the most prominent appearance of the work's title, preceding the beginning of the body of the text. The \"publisher\" means any person or entity that distributes copies of the Document to the public. A section \"Entitled XYZ\" means a named subunit of the Document whose title either is precisely XYZ or contains XYZ in parentheses following text that translates XYZ in another language. (Here XYZ stands for a specific section name mentioned below, such as \"Acknowledgements\", \"Dedications\", \"Endorsements\", or \"History\".) To \"Preserve the Title\" of such a section when you modify the Document means that it remains a section \"Entitled XYZ\" according to this definition. The Document may include Warranty Disclaimers next to the notice which states that this License applies to the Document. These Warranty Disclaimers are considered to be included by reference in this License, but only as regards disclaiming warranties: any other implication that these Warranty Disclaimers may have is void and has no effect on the meaning of this License. 2. VERBATIM COPYING \u00b6 You may copy and distribute the Document in any medium, either commercially or noncommercially, provided that this License, the copyright notices, and the license notice saying this License applies to the Document are reproduced in all copies, and that you add no other conditions whatsoever to those of this License. You may not use technical measures to obstruct or control the reading or further copying of the copies you make or distribute. However, you may accept compensation in exchange for copies. If you distribute a large enough number of copies you must also follow the conditions in section 3. You may also lend copies, under the same conditions stated above, and you may publicly display copies. 3. COPYING IN QUANTITY \u00b6 If you publish printed copies (or copies in media that commonly have printed covers) of the Document, numbering more than 100, and the Document's license notice requires Cover Texts, you must enclose the copies in covers that carry, clearly and legibly, all these Cover Texts: Front-Cover Texts on the front cover, and Back-Cover Texts on the back cover. Both covers must also clearly and legibly identify you as the publisher of these copies. The front cover must present the full title with all words of the title equally prominent and visible. You may add other material on the covers in addition. Copying with changes limited to the covers, as long as they preserve the title of the Document and satisfy these conditions, can be treated as verbatim copying in other respects. If the required texts for either cover are too voluminous to fit legibly, you should put the first ones listed (as many as fit reasonably) on the actual cover, and continue the rest onto adjacent pages. If you publish or distribute Opaque copies of the Document numbering more than 100, you must either include a machine-readable Transparent copy along with each Opaque copy, or state in or with each Opaque copy a computer-network location from which the general network-using public has access to download using public-standard network protocols a complete Transparent copy of the Document, free of added material. If you use the latter option, you must take reasonably prudent steps, when you begin distribution of Opaque copies in quantity, to ensure that this Transparent copy will remain thus accessible at the stated location until at least one year after the last time you distribute an Opaque copy (directly or through your agents or retailers) of that edition to the public. It is requested, but not required, that you contact the authors of the Document well before redistributing any large number of copies, to give them a chance to provide you with an updated version of the Document. 4. MODIFICATIONS \u00b6 You may copy and distribute a Modified Version of the Document under the conditions of sections 2 and 3 above, provided that you release the Modified Version under precisely this License, with the Modified Version filling the role of the Document, thus licensing distribution and modification of the Modified Version to whoever possesses a copy of it. In addition, you must do these things in the Modified Version: A. Use in the Title Page (and on the covers, if any) a title distinct from that of the Document, and from those of previous versions (which should, if there were any, be listed in the History section of the Document). You may use the same title as a previous version if the original publisher of that version gives permission. B. List on the Title Page, as authors, one or more persons or entities responsible for authorship of the modifications in the Modified Version, together with at least five of the principal authors of the Document (all of its principal authors, if it has fewer than five), unless they release you from this requirement. C. State on the Title page the name of the publisher of the Modified Version, as the publisher. D. Preserve all the copyright notices of the Document. E. Add an appropriate copyright notice for your modifications adjacent to the other copyright notices. F. Include, immediately after the copyright notices, a license notice giving the public permission to use the Modified Version under the terms of this License, in the form shown in the Addendum below. G. Preserve in that license notice the full lists of Invariant Sections and required Cover Texts given in the Document's license notice. H. Include an unaltered copy of this License. I. Preserve the section Entitled \"History\", Preserve its Title, and add to it an item stating at least the title, year, new authors, and publisher of the Modified Version as given on the Title Page. If there is no section Entitled \"History\" in the Document, create one stating the title, year, authors, and publisher of the Document as given on its Title Page, then add an item describing the Modified Version as stated in the previous sentence. J. Preserve the network location, if any, given in the Document for public access to a Transparent copy of the Document, and likewise the network locations given in the Document for previous versions it was based on. These may be placed in the \"History\" section. You may omit a network location for a work that was published at least four years before the Document itself, or if the original publisher of the version it refers to gives permission. K. For any section Entitled \"Acknowledgements\" or \"Dedications\", Preserve the Title of the section, and preserve in the section all the substance and tone of each of the contributor acknowledgements and/or dedications given therein. L. Preserve all the Invariant Sections of the Document, unaltered in their text and in their titles. Section numbers or the equivalent are not considered part of the section titles. M. Delete any section Entitled \"Endorsements\". Such a section may not be included in the Modified Version. N. Do not retitle any existing section to be Entitled \"Endorsements\" or to conflict in title with any Invariant Section. O. Preserve any Warranty Disclaimers. If the Modified Version includes new front-matter sections or appendices that qualify as Secondary Sections and contain no material copied from the Document, you may at your option designate some or all of these sections as invariant. To do this, add their titles to the list of Invariant Sections in the Modified Version's license notice. These titles must be distinct from any other section titles. You may add a section Entitled \"Endorsements\", provided it contains nothing but endorsements of your Modified Version by various parties\u2014for example, statements of peer review or that the text has been approved by an organization as the authoritative definition of a standard. You may add a passage of up to five words as a Front-Cover Text, and a passage of up to 25 words as a Back-Cover Text, to the end of the list of Cover Texts in the Modified Version. Only one passage of Front-Cover Text and one of Back-Cover Text may be added by (or through arrangements made by) any one entity. If the Document already includes a cover text for the same cover, previously added by you or by arrangement made by the same entity you are acting on behalf of, you may not add another; but you may replace the old one, on explicit permission from the previous publisher that added the old one. The author(s) and publisher(s) of the Document do not by this License give permission to use their names for publicity for or to assert or imply endorsement of any Modified Version. 5. COMBINING DOCUMENTS \u00b6 You may combine the Document with other documents released under this License, under the terms defined in section 4 above for modified versions, provided that you include in the combination all of the Invariant Sections of all of the original documents, unmodified, and list them all as Invariant Sections of your combined work in its license notice, and that you preserve all their Warranty Disclaimers. The combined work need only contain one copy of this License, and multiple identical Invariant Sections may be replaced with a single copy. If there are multiple Invariant Sections with the same name but different contents, make the title of each such section unique by adding at the end of it, in parentheses, the name of the original author or publisher of that section if known, or else a unique number. Make the same adjustment to the section titles in the list of Invariant Sections in the license notice of the combined work. In the combination, you must combine any sections Entitled \"History\" in the various original documents, forming one section Entitled \"History\"; likewise combine any sections Entitled \"Acknowledgements\", and any sections Entitled \"Dedications\". You must delete all sections Entitled \"Endorsements\". 6. COLLECTIONS OF DOCUMENTS \u00b6 You may make a collection consisting of the Document and other documents released under this License, and replace the individual copies of this License in the various documents with a single copy that is included in the collection, provided that you follow the rules of this License for verbatim copying of each of the documents in all other respects. You may extract a single document from such a collection, and distribute it individually under this License, provided you insert a copy of this License into the extracted document, and follow this License in all other respects regarding verbatim copying of that document. 7. AGGREGATION WITH INDEPENDENT WORKS \u00b6 A compilation of the Document or its derivatives with other separate and independent documents or works, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the copyright resulting from the compilation is not used to limit the legal rights of the compilation's users beyond what the individual works permit. When the Document is included in an aggregate, this License does not apply to the other works in the aggregate which are not themselves derivative works of the Document. If the Cover Text requirement of section 3 is applicable to these copies of the Document, then if the Document is less than one half of the entire aggregate, the Document's Cover Texts may be placed on covers that bracket the Document within the aggregate, or the electronic equivalent of covers if the Document is in electronic form. Otherwise they must appear on printed covers that bracket the whole aggregate. 8. TRANSLATION \u00b6 Translation is considered a kind of modification, so you may distribute translations of the Document under the terms of section 4. Replacing Invariant Sections with translations requires special permission from their copyright holders, but you may include translations of some or all Invariant Sections in addition to the original versions of these Invariant Sections. You may include a translation of this License, and all the license notices in the Document, and any Warranty Disclaimers, provided that you also include the original English version of this License and the original versions of those notices and disclaimers. In case of a disagreement between the translation and the original version of this License or a notice or disclaimer, the original version will prevail. If a section in the Document is Entitled \"Acknowledgements\", \"Dedications\", or \"History\", the requirement (section 4) to Preserve its Title (section 1) will typically require changing the actual title. 9. TERMINATION \u00b6 You may not copy, modify, sublicense, or distribute the Document except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense, or distribute it is void, and will automatically terminate your rights under this License. However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, receipt of a copy of some or all of the same material does not give you any rights to use it. 10. FUTURE REVISIONS OF THIS LICENSE \u00b6 The Free Software Foundation may publish new, revised versions of the GNU Free Documentation License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. See https://www.gnu.org/licenses/ . Each version of the License is given a distinguishing version number. If the Document specifies that a particular numbered version of this License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that specified version or of any later version that has been published (not as a draft) by the Free Software Foundation. If the Document does not specify a version number of this License, you may choose any version ever published (not as a draft) by the Free Software Foundation. If the Document specifies that a proxy can decide which future versions of this License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Document. 11. RELICENSING \u00b6 \"Massive Multiauthor Collaboration Site\" (or \"MMC Site\") means any World Wide Web server that publishes copyrightable works and also provides prominent facilities for anybody to edit those works. A public wiki that anybody can edit is an example of such a server. A \"Massive Multiauthor Collaboration\" (or \"MMC\") contained in the site means any set of copyrightable works thus published on the MMC site. \"CC-BY-SA\" means the Creative Commons Attribution-Share Alike 3.0 license published by Creative Commons Corporation, a not-for-profit corporation with a principal place of business in San Francisco, California, as well as future copyleft versions of that license published by that same organization. \"Incorporate\" means to publish or republish a Document, in whole or in part, as part of another Document. An MMC is \"eligible for relicensing\" if it is licensed under this License, and if all works that were first published under this License somewhere other than this MMC, and subsequently incorporated in whole or in part into the MMC, (1) had no cover texts or invariant sections, and (2) were thus incorporated prior to November 1, 2008. The operator of an MMC Site may republish an MMC contained in the site under CC-BY-SA on the same site at any time before August 1, 2009, provided the MMC is eligible for relicensing.","title":"FDL 1.3"},{"location":"legal/licensing/fdl-1.3/#gnu-free-documentation-license","text":"Version 1.3, 3 November 2008 Copyright (C) 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc. https://fsf.org/ Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.","title":"GNU Free Documentation License"},{"location":"legal/licensing/fdl-1.3/#0-preamble","text":"The purpose of this License is to make a manual, textbook, or other functional and useful document \"free\" in the sense of freedom: to assure everyone the effective freedom to copy and redistribute it, with or without modifying it, either commercially or noncommercially. Secondarily, this License preserves for the author and publisher a way to get credit for their work, while not being considered responsible for modifications made by others. This License is a kind of \"copyleft\", which means that derivative works of the document must themselves be free in the same sense. It complements the GNU General Public License, which is a copyleft license designed for free software. We have designed this License in order to use it for manuals for free software, because free software needs free documentation: a free program should come with manuals providing the same freedoms that the software does. But this License is not limited to software manuals; it can be used for any textual work, regardless of subject matter or whether it is published as a printed book. We recommend this License principally for works whose purpose is instruction or reference.","title":"0. PREAMBLE"},{"location":"legal/licensing/fdl-1.3/#1-applicability-and-definitions","text":"This License applies to any manual or other work, in any medium, that contains a notice placed by the copyright holder saying it can be distributed under the terms of this License. Such a notice grants a world-wide, royalty-free license, unlimited in duration, to use that work under the conditions stated herein. The \"Document\", below, refers to any such manual or work. Any member of the public is a licensee, and is addressed as \"you\". You accept the license if you copy, modify or distribute the work in a way requiring permission under copyright law. A \"Modified Version\" of the Document means any work containing the Document or a portion of it, either copied verbatim, or with modifications and/or translated into another language. A \"Secondary Section\" is a named appendix or a front-matter section of the Document that deals exclusively with the relationship of the publishers or authors of the Document to the Document's overall subject (or to related matters) and contains nothing that could fall directly within that overall subject. (Thus, if the Document is in part a textbook of mathematics, a Secondary Section may not explain any mathematics.) The relationship could be a matter of historical connection with the subject or with related matters, or of legal, commercial, philosophical, ethical or political position regarding them. The \"Invariant Sections\" are certain Secondary Sections whose titles are designated, as being those of Invariant Sections, in the notice that says that the Document is released under this License. If a section does not fit the above definition of Secondary then it is not allowed to be designated as Invariant. The Document may contain zero Invariant Sections. If the Document does not identify any Invariant Sections then there are none. The \"Cover Texts\" are certain short passages of text that are listed, as Front-Cover Texts or Back-Cover Texts, in the notice that says that the Document is released under this License. A Front-Cover Text may be at most 5 words, and a Back-Cover Text may be at most 25 words. A \"Transparent\" copy of the Document means a machine-readable copy, represented in a format whose specification is available to the general public, that is suitable for revising the document straightforwardly with generic text editors or (for images composed of pixels) generic paint programs or (for drawings) some widely available drawing editor, and that is suitable for input to text formatters or for automatic translation to a variety of formats suitable for input to text formatters. A copy made in an otherwise Transparent file format whose markup, or absence of markup, has been arranged to thwart or discourage subsequent modification by readers is not Transparent. An image format is not Transparent if used for any substantial amount of text. A copy that is not \"Transparent\" is called \"Opaque\". Examples of suitable formats for Transparent copies include plain ASCII without markup, Texinfo input format, LaTeX input format, SGML or XML using a publicly available DTD, and standard-conforming simple HTML, PostScript or PDF designed for human modification. Examples of transparent image formats include PNG, XCF and JPG. Opaque formats include proprietary formats that can be read and edited only by proprietary word processors, SGML or XML for which the DTD and/or processing tools are not generally available, and the machine-generated HTML, PostScript or PDF produced by some word processors for output purposes only. The \"Title Page\" means, for a printed book, the title page itself, plus such following pages as are needed to hold, legibly, the material this License requires to appear in the title page. For works in formats which do not have any title page as such, \"Title Page\" means the text near the most prominent appearance of the work's title, preceding the beginning of the body of the text. The \"publisher\" means any person or entity that distributes copies of the Document to the public. A section \"Entitled XYZ\" means a named subunit of the Document whose title either is precisely XYZ or contains XYZ in parentheses following text that translates XYZ in another language. (Here XYZ stands for a specific section name mentioned below, such as \"Acknowledgements\", \"Dedications\", \"Endorsements\", or \"History\".) To \"Preserve the Title\" of such a section when you modify the Document means that it remains a section \"Entitled XYZ\" according to this definition. The Document may include Warranty Disclaimers next to the notice which states that this License applies to the Document. These Warranty Disclaimers are considered to be included by reference in this License, but only as regards disclaiming warranties: any other implication that these Warranty Disclaimers may have is void and has no effect on the meaning of this License.","title":"1. APPLICABILITY AND DEFINITIONS"},{"location":"legal/licensing/fdl-1.3/#2-verbatim-copying","text":"You may copy and distribute the Document in any medium, either commercially or noncommercially, provided that this License, the copyright notices, and the license notice saying this License applies to the Document are reproduced in all copies, and that you add no other conditions whatsoever to those of this License. You may not use technical measures to obstruct or control the reading or further copying of the copies you make or distribute. However, you may accept compensation in exchange for copies. If you distribute a large enough number of copies you must also follow the conditions in section 3. You may also lend copies, under the same conditions stated above, and you may publicly display copies.","title":"2. VERBATIM COPYING"},{"location":"legal/licensing/fdl-1.3/#3-copying-in-quantity","text":"If you publish printed copies (or copies in media that commonly have printed covers) of the Document, numbering more than 100, and the Document's license notice requires Cover Texts, you must enclose the copies in covers that carry, clearly and legibly, all these Cover Texts: Front-Cover Texts on the front cover, and Back-Cover Texts on the back cover. Both covers must also clearly and legibly identify you as the publisher of these copies. The front cover must present the full title with all words of the title equally prominent and visible. You may add other material on the covers in addition. Copying with changes limited to the covers, as long as they preserve the title of the Document and satisfy these conditions, can be treated as verbatim copying in other respects. If the required texts for either cover are too voluminous to fit legibly, you should put the first ones listed (as many as fit reasonably) on the actual cover, and continue the rest onto adjacent pages. If you publish or distribute Opaque copies of the Document numbering more than 100, you must either include a machine-readable Transparent copy along with each Opaque copy, or state in or with each Opaque copy a computer-network location from which the general network-using public has access to download using public-standard network protocols a complete Transparent copy of the Document, free of added material. If you use the latter option, you must take reasonably prudent steps, when you begin distribution of Opaque copies in quantity, to ensure that this Transparent copy will remain thus accessible at the stated location until at least one year after the last time you distribute an Opaque copy (directly or through your agents or retailers) of that edition to the public. It is requested, but not required, that you contact the authors of the Document well before redistributing any large number of copies, to give them a chance to provide you with an updated version of the Document.","title":"3. COPYING IN QUANTITY"},{"location":"legal/licensing/fdl-1.3/#4-modifications","text":"You may copy and distribute a Modified Version of the Document under the conditions of sections 2 and 3 above, provided that you release the Modified Version under precisely this License, with the Modified Version filling the role of the Document, thus licensing distribution and modification of the Modified Version to whoever possesses a copy of it. In addition, you must do these things in the Modified Version: A. Use in the Title Page (and on the covers, if any) a title distinct from that of the Document, and from those of previous versions (which should, if there were any, be listed in the History section of the Document). You may use the same title as a previous version if the original publisher of that version gives permission. B. List on the Title Page, as authors, one or more persons or entities responsible for authorship of the modifications in the Modified Version, together with at least five of the principal authors of the Document (all of its principal authors, if it has fewer than five), unless they release you from this requirement. C. State on the Title page the name of the publisher of the Modified Version, as the publisher. D. Preserve all the copyright notices of the Document. E. Add an appropriate copyright notice for your modifications adjacent to the other copyright notices. F. Include, immediately after the copyright notices, a license notice giving the public permission to use the Modified Version under the terms of this License, in the form shown in the Addendum below. G. Preserve in that license notice the full lists of Invariant Sections and required Cover Texts given in the Document's license notice. H. Include an unaltered copy of this License. I. Preserve the section Entitled \"History\", Preserve its Title, and add to it an item stating at least the title, year, new authors, and publisher of the Modified Version as given on the Title Page. If there is no section Entitled \"History\" in the Document, create one stating the title, year, authors, and publisher of the Document as given on its Title Page, then add an item describing the Modified Version as stated in the previous sentence. J. Preserve the network location, if any, given in the Document for public access to a Transparent copy of the Document, and likewise the network locations given in the Document for previous versions it was based on. These may be placed in the \"History\" section. You may omit a network location for a work that was published at least four years before the Document itself, or if the original publisher of the version it refers to gives permission. K. For any section Entitled \"Acknowledgements\" or \"Dedications\", Preserve the Title of the section, and preserve in the section all the substance and tone of each of the contributor acknowledgements and/or dedications given therein. L. Preserve all the Invariant Sections of the Document, unaltered in their text and in their titles. Section numbers or the equivalent are not considered part of the section titles. M. Delete any section Entitled \"Endorsements\". Such a section may not be included in the Modified Version. N. Do not retitle any existing section to be Entitled \"Endorsements\" or to conflict in title with any Invariant Section. O. Preserve any Warranty Disclaimers. If the Modified Version includes new front-matter sections or appendices that qualify as Secondary Sections and contain no material copied from the Document, you may at your option designate some or all of these sections as invariant. To do this, add their titles to the list of Invariant Sections in the Modified Version's license notice. These titles must be distinct from any other section titles. You may add a section Entitled \"Endorsements\", provided it contains nothing but endorsements of your Modified Version by various parties\u2014for example, statements of peer review or that the text has been approved by an organization as the authoritative definition of a standard. You may add a passage of up to five words as a Front-Cover Text, and a passage of up to 25 words as a Back-Cover Text, to the end of the list of Cover Texts in the Modified Version. Only one passage of Front-Cover Text and one of Back-Cover Text may be added by (or through arrangements made by) any one entity. If the Document already includes a cover text for the same cover, previously added by you or by arrangement made by the same entity you are acting on behalf of, you may not add another; but you may replace the old one, on explicit permission from the previous publisher that added the old one. The author(s) and publisher(s) of the Document do not by this License give permission to use their names for publicity for or to assert or imply endorsement of any Modified Version.","title":"4. MODIFICATIONS"},{"location":"legal/licensing/fdl-1.3/#5-combining-documents","text":"You may combine the Document with other documents released under this License, under the terms defined in section 4 above for modified versions, provided that you include in the combination all of the Invariant Sections of all of the original documents, unmodified, and list them all as Invariant Sections of your combined work in its license notice, and that you preserve all their Warranty Disclaimers. The combined work need only contain one copy of this License, and multiple identical Invariant Sections may be replaced with a single copy. If there are multiple Invariant Sections with the same name but different contents, make the title of each such section unique by adding at the end of it, in parentheses, the name of the original author or publisher of that section if known, or else a unique number. Make the same adjustment to the section titles in the list of Invariant Sections in the license notice of the combined work. In the combination, you must combine any sections Entitled \"History\" in the various original documents, forming one section Entitled \"History\"; likewise combine any sections Entitled \"Acknowledgements\", and any sections Entitled \"Dedications\". You must delete all sections Entitled \"Endorsements\".","title":"5. COMBINING DOCUMENTS"},{"location":"legal/licensing/fdl-1.3/#6-collections-of-documents","text":"You may make a collection consisting of the Document and other documents released under this License, and replace the individual copies of this License in the various documents with a single copy that is included in the collection, provided that you follow the rules of this License for verbatim copying of each of the documents in all other respects. You may extract a single document from such a collection, and distribute it individually under this License, provided you insert a copy of this License into the extracted document, and follow this License in all other respects regarding verbatim copying of that document.","title":"6. COLLECTIONS OF DOCUMENTS"},{"location":"legal/licensing/fdl-1.3/#7-aggregation-with-independent-works","text":"A compilation of the Document or its derivatives with other separate and independent documents or works, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the copyright resulting from the compilation is not used to limit the legal rights of the compilation's users beyond what the individual works permit. When the Document is included in an aggregate, this License does not apply to the other works in the aggregate which are not themselves derivative works of the Document. If the Cover Text requirement of section 3 is applicable to these copies of the Document, then if the Document is less than one half of the entire aggregate, the Document's Cover Texts may be placed on covers that bracket the Document within the aggregate, or the electronic equivalent of covers if the Document is in electronic form. Otherwise they must appear on printed covers that bracket the whole aggregate.","title":"7. AGGREGATION WITH INDEPENDENT WORKS"},{"location":"legal/licensing/fdl-1.3/#8-translation","text":"Translation is considered a kind of modification, so you may distribute translations of the Document under the terms of section 4. Replacing Invariant Sections with translations requires special permission from their copyright holders, but you may include translations of some or all Invariant Sections in addition to the original versions of these Invariant Sections. You may include a translation of this License, and all the license notices in the Document, and any Warranty Disclaimers, provided that you also include the original English version of this License and the original versions of those notices and disclaimers. In case of a disagreement between the translation and the original version of this License or a notice or disclaimer, the original version will prevail. If a section in the Document is Entitled \"Acknowledgements\", \"Dedications\", or \"History\", the requirement (section 4) to Preserve its Title (section 1) will typically require changing the actual title.","title":"8. TRANSLATION"},{"location":"legal/licensing/fdl-1.3/#9-termination","text":"You may not copy, modify, sublicense, or distribute the Document except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense, or distribute it is void, and will automatically terminate your rights under this License. However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, receipt of a copy of some or all of the same material does not give you any rights to use it.","title":"9. TERMINATION"},{"location":"legal/licensing/fdl-1.3/#10-future-revisions-of-this-license","text":"The Free Software Foundation may publish new, revised versions of the GNU Free Documentation License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. See https://www.gnu.org/licenses/ . Each version of the License is given a distinguishing version number. If the Document specifies that a particular numbered version of this License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that specified version or of any later version that has been published (not as a draft) by the Free Software Foundation. If the Document does not specify a version number of this License, you may choose any version ever published (not as a draft) by the Free Software Foundation. If the Document specifies that a proxy can decide which future versions of this License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Document.","title":"10. FUTURE REVISIONS OF THIS LICENSE"},{"location":"legal/licensing/fdl-1.3/#11-relicensing","text":"\"Massive Multiauthor Collaboration Site\" (or \"MMC Site\") means any World Wide Web server that publishes copyrightable works and also provides prominent facilities for anybody to edit those works. A public wiki that anybody can edit is an example of such a server. A \"Massive Multiauthor Collaboration\" (or \"MMC\") contained in the site means any set of copyrightable works thus published on the MMC site. \"CC-BY-SA\" means the Creative Commons Attribution-Share Alike 3.0 license published by Creative Commons Corporation, a not-for-profit corporation with a principal place of business in San Francisco, California, as well as future copyleft versions of that license published by that same organization. \"Incorporate\" means to publish or republish a Document, in whole or in part, as part of another Document. An MMC is \"eligible for relicensing\" if it is licensed under this License, and if all works that were first published under this License somewhere other than this MMC, and subsequently incorporated in whole or in part into the MMC, (1) had no cover texts or invariant sections, and (2) were thus incorporated prior to November 1, 2008. The operator of an MMC Site may republish an MMC contained in the site under CC-BY-SA on the same site at any time before August 1, 2009, provided the MMC is eligible for relicensing.","title":"11. RELICENSING"},{"location":"legal/licensing/gpl-2/","text":"GNU GENERAL PUBLIC LICENSE \u00b6 Version 2, June 1991 Copyright (C) 1989, 1991 Free Software Foundation, Inc. 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. Preamble \u00b6 The licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This General Public License applies to most of the Free Software Foundation's software and to any other program whose authors commit to using it. (Some other Free Software Foundation software is covered by the GNU Lesser General Public License instead.) You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things. To protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it. For example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. We protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software. Also, for each author's protection and ours, we want to make certain that everyone understands that there is no warranty for this free software. If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors' reputations. Finally, any free program is threatened constantly by software patents. We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary. To prevent this, we have made it clear that any patent must be licensed for everyone's free use or not licensed at all. The precise terms and conditions for copying, distribution and modification follow. TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION \u00b6 0. This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License. The \"Program\", below, refers to any such program or work, and a \"work based on the Program\" means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language. (Hereinafter, translation is included without limitation in the term \"modification\".) Each licensee is addressed as \"you\". Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does. 1. You may copy and distribute verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program. You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee. 2. You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions: a) You must cause the modified files to carry prominent notices stating that you changed the files and the date of any change. b) You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License. c) If the modified program normally reads commands interactively when run, you must cause it, when started running for such interactive use in the most ordinary way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the program under these conditions, and telling the user how to view a copy of this License. (Exception: if the Program itself is interactive but does not normally print such an announcement, your work based on the Program is not required to print an announcement.) These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it. Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program. In addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License. 3. You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following: a) Accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, b) Accompany it with a written offer, valid for at least three years, to give any third party, for a charge no more than your cost of physically performing source distribution, a complete machine-readable copy of the corresponding source code, to be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, c) Accompany it with the information you received as to the offer to distribute corresponding source code. (This alternative is allowed only for noncommercial distribution and only if you received the program in object code or executable form with such an offer, in accord with Subsection b above.) The source code for a work means the preferred form of the work for making modifications to it. For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable. If distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code. 4. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance. 5. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Program or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it. 6. Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License. 7. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all. For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program. If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances. It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice. This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License. 8. If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License. 9. The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies a version number of this License which applies to it and \"any later version\", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation. 10. If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally. NO WARRANTY 11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.","title":"GPL 2"},{"location":"legal/licensing/gpl-2/#gnu-general-public-license","text":"Version 2, June 1991 Copyright (C) 1989, 1991 Free Software Foundation, Inc. 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.","title":"GNU GENERAL PUBLIC LICENSE"},{"location":"legal/licensing/gpl-2/#preamble","text":"The licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This General Public License applies to most of the Free Software Foundation's software and to any other program whose authors commit to using it. (Some other Free Software Foundation software is covered by the GNU Lesser General Public License instead.) You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things. To protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it. For example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. We protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software. Also, for each author's protection and ours, we want to make certain that everyone understands that there is no warranty for this free software. If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors' reputations. Finally, any free program is threatened constantly by software patents. We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary. To prevent this, we have made it clear that any patent must be licensed for everyone's free use or not licensed at all. The precise terms and conditions for copying, distribution and modification follow.","title":"Preamble"},{"location":"legal/licensing/gpl-2/#terms-and-conditions-for-copying-distribution-and-modification","text":"0. This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License. The \"Program\", below, refers to any such program or work, and a \"work based on the Program\" means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language. (Hereinafter, translation is included without limitation in the term \"modification\".) Each licensee is addressed as \"you\". Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does. 1. You may copy and distribute verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program. You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee. 2. You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions: a) You must cause the modified files to carry prominent notices stating that you changed the files and the date of any change. b) You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License. c) If the modified program normally reads commands interactively when run, you must cause it, when started running for such interactive use in the most ordinary way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the program under these conditions, and telling the user how to view a copy of this License. (Exception: if the Program itself is interactive but does not normally print such an announcement, your work based on the Program is not required to print an announcement.) These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it. Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program. In addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License. 3. You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following: a) Accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, b) Accompany it with a written offer, valid for at least three years, to give any third party, for a charge no more than your cost of physically performing source distribution, a complete machine-readable copy of the corresponding source code, to be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, c) Accompany it with the information you received as to the offer to distribute corresponding source code. (This alternative is allowed only for noncommercial distribution and only if you received the program in object code or executable form with such an offer, in accord with Subsection b above.) The source code for a work means the preferred form of the work for making modifications to it. For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable. If distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code. 4. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance. 5. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Program or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it. 6. Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License. 7. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all. For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program. If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances. It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice. This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License. 8. If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License. 9. The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies a version number of this License which applies to it and \"any later version\", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation. 10. If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally. NO WARRANTY 11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.","title":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION"},{"location":"legal/licensing/gpl-3/","text":"GNU GENERAL PUBLIC LICENSE \u00b6 Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/ Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. Preamble \u00b6 The GNU General Public License is a free, copyleft license for software and other kinds of works. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions. Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and modification follow. TERMS AND CONDITIONS \u00b6 0. Definitions. \u00b6 \"This License\" refers to version 3 of the GNU General Public License. \"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. \"The Program\" refers to any copyrightable work licensed under this License. Each licensee is addressed as \"you\". \"Licensees\" and \"recipients\" may be individuals or organizations. To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work. A \"covered work\" means either the unmodified Program or a work based on the Program. To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion. 1. Source Code. \u00b6 The \"source code\" for a work means the preferred form of the work for making modifications to it. \"Object code\" means any non-source form of a work. A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work. 2. Basic Permissions. \u00b6 All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary. 3. Protecting Users' Legal Rights From Anti-Circumvention Law. \u00b6 No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures. When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures. 4. Conveying Verbatim Copies. \u00b6 You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee. 5. Conveying Modified Source Versions. \u00b6 You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions: a) The work must carry prominent notices stating that you modified it, and giving a relevant date. b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to \"keep intact all notices\". c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it. d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so. A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate. 6. Conveying Non-Source Forms. \u00b6 You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways: a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange. b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b. d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements. e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d. A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work. A \"User Product\" is either (1) a \"consumer product\", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, \"normally used\" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product. \"Installation Information\" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made. If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM). The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying. 7. Additional Terms. \u00b6 \"Additional permissions\" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission. Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms: a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or d) Limiting the use for publicity purposes of names of licensors or authors of the material; or e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors. All other non-permissive additional terms are considered \"further restrictions\" within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying. If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms. Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way. 8. Termination. \u00b6 You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11). However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10. 9. Acceptance Not Required for Having Copies. \u00b6 You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so. 10. Automatic Licensing of Downstream Recipients. \u00b6 Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License. An \"entity transaction\" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it. 11. Patents. \u00b6 A \"contributor\" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's \"contributor version\". A contributor's \"essential patent claims\" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, \"control\" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License. Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version. In the following three paragraphs, a \"patent license\" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To \"grant\" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party. If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. \"Knowingly relying\" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it. A patent license is \"discriminatory\" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007. Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law. 12. No Surrender of Others' Freedom. \u00b6 If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program. 13. Use with the GNU Affero General Public License. \u00b6 Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such. 14. Revised Versions of this License. \u00b6 The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation. If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program. Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version. 15. Disclaimer of Warranty. \u00b6 THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. Limitation of Liability. \u00b6 IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. 17. Interpretation of Sections 15 and 16. \u00b6 If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.","title":"GPL 3"},{"location":"legal/licensing/gpl-3/#gnu-general-public-license","text":"Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/ Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.","title":"GNU GENERAL PUBLIC LICENSE"},{"location":"legal/licensing/gpl-3/#preamble","text":"The GNU General Public License is a free, copyleft license for software and other kinds of works. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions. Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and modification follow.","title":"Preamble"},{"location":"legal/licensing/gpl-3/#terms-and-conditions","text":"","title":"TERMS AND CONDITIONS"},{"location":"legal/licensing/gpl-3/#0-definitions","text":"\"This License\" refers to version 3 of the GNU General Public License. \"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. \"The Program\" refers to any copyrightable work licensed under this License. Each licensee is addressed as \"you\". \"Licensees\" and \"recipients\" may be individuals or organizations. To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work. A \"covered work\" means either the unmodified Program or a work based on the Program. To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.","title":"0. Definitions."},{"location":"legal/licensing/gpl-3/#1-source-code","text":"The \"source code\" for a work means the preferred form of the work for making modifications to it. \"Object code\" means any non-source form of a work. A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work.","title":"1. Source Code."},{"location":"legal/licensing/gpl-3/#2-basic-permissions","text":"All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary.","title":"2. Basic Permissions."},{"location":"legal/licensing/gpl-3/#3-protecting-users-legal-rights-from-anti-circumvention-law","text":"No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures. When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.","title":"3. Protecting Users' Legal Rights From Anti-Circumvention Law."},{"location":"legal/licensing/gpl-3/#4-conveying-verbatim-copies","text":"You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.","title":"4. Conveying Verbatim Copies."},{"location":"legal/licensing/gpl-3/#5-conveying-modified-source-versions","text":"You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions: a) The work must carry prominent notices stating that you modified it, and giving a relevant date. b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to \"keep intact all notices\". c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it. d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so. A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.","title":"5. Conveying Modified Source Versions."},{"location":"legal/licensing/gpl-3/#6-conveying-non-source-forms","text":"You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways: a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange. b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b. d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements. e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d. A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work. A \"User Product\" is either (1) a \"consumer product\", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, \"normally used\" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product. \"Installation Information\" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made. If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM). The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.","title":"6. Conveying Non-Source Forms."},{"location":"legal/licensing/gpl-3/#7-additional-terms","text":"\"Additional permissions\" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission. Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms: a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or d) Limiting the use for publicity purposes of names of licensors or authors of the material; or e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors. All other non-permissive additional terms are considered \"further restrictions\" within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying. If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms. Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.","title":"7. Additional Terms."},{"location":"legal/licensing/gpl-3/#8-termination","text":"You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11). However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.","title":"8. Termination."},{"location":"legal/licensing/gpl-3/#9-acceptance-not-required-for-having-copies","text":"You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.","title":"9. Acceptance Not Required for Having Copies."},{"location":"legal/licensing/gpl-3/#10-automatic-licensing-of-downstream-recipients","text":"Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License. An \"entity transaction\" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.","title":"10. Automatic Licensing of Downstream Recipients."},{"location":"legal/licensing/gpl-3/#11-patents","text":"A \"contributor\" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's \"contributor version\". A contributor's \"essential patent claims\" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, \"control\" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License. Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version. In the following three paragraphs, a \"patent license\" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To \"grant\" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party. If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. \"Knowingly relying\" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it. A patent license is \"discriminatory\" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007. Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.","title":"11. Patents."},{"location":"legal/licensing/gpl-3/#12-no-surrender-of-others-freedom","text":"If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.","title":"12. No Surrender of Others' Freedom."},{"location":"legal/licensing/gpl-3/#13-use-with-the-gnu-affero-general-public-license","text":"Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such.","title":"13. Use with the GNU Affero General Public License."},{"location":"legal/licensing/gpl-3/#14-revised-versions-of-this-license","text":"The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation. If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program. Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.","title":"14. Revised Versions of this License."},{"location":"legal/licensing/gpl-3/#15-disclaimer-of-warranty","text":"THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.","title":"15. Disclaimer of Warranty."},{"location":"legal/licensing/gpl-3/#16-limitation-of-liability","text":"IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.","title":"16. Limitation of Liability."},{"location":"legal/licensing/gpl-3/#17-interpretation-of-sections-15-and-16","text":"If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.","title":"17. Interpretation of Sections 15 and 16."},{"location":"legal/licensing/lgpl-2.1/","text":"GNU LESSER GENERAL PUBLIC LICENSE \u00b6 Version 2.1, February 1999 Copyright (C) 1991, 1999 Free Software Foundation, Inc. 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. [This is the first released version of the Lesser GPL. It also counts as the successor of the GNU Library Public License, version 2, hence the version number 2.1.] Preamble \u00b6 The licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public Licenses are intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This license, the Lesser General Public License, applies to some specially designated software packages--typically libraries--of the Free Software Foundation and other authors who decide to use it. You can use it too, but we suggest you first think carefully about whether this license or the ordinary General Public License is the better strategy to use in any particular case, based on the explanations below. When we speak of free software, we are referring to freedom of use, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish); that you receive source code or can get it if you want it; that you can change the software and use pieces of it in new free programs; and that you are informed that you can do these things. To protect your rights, we need to make restrictions that forbid distributors to deny you these rights or to ask you to surrender these rights. These restrictions translate to certain responsibilities for you if you distribute copies of the library or if you modify it. For example, if you distribute copies of the library, whether gratis or for a fee, you must give the recipients all the rights that we gave you. You must make sure that they, too, receive or can get the source code. If you link other code with the library, you must provide complete object files to the recipients, so that they can relink them with the library after making changes to the library and recompiling it. And you must show them these terms so they know their rights. We protect your rights with a two-step method: (1) we copyright the library, and (2) we offer you this license, which gives you legal permission to copy, distribute and/or modify the library. To protect each distributor, we want to make it very clear that there is no warranty for the free library. Also, if the library is modified by someone else and passed on, the recipients should know that what they have is not the original version, so that the original author's reputation will not be affected by problems that might be introduced by others. Finally, software patents pose a constant threat to the existence of any free program. We wish to make sure that a company cannot effectively restrict the users of a free program by obtaining a restrictive license from a patent holder. Therefore, we insist that any patent license obtained for a version of the library must be consistent with the full freedom of use specified in this license. Most GNU software, including some libraries, is covered by the ordinary GNU General Public License. This license, the GNU Lesser General Public License, applies to certain designated libraries, and is quite different from the ordinary General Public License. We use this license for certain libraries in order to permit linking those libraries into non-free programs. When a program is linked with a library, whether statically or using a shared library, the combination of the two is legally speaking a combined work, a derivative of the original library. The ordinary General Public License therefore permits such linking only if the entire combination fits its criteria of freedom. The Lesser General Public License permits more lax criteria for linking other code with the library. We call this license the \"Lesser\" General Public License because it does Less to protect the user's freedom than the ordinary General Public License. It also provides other free software developers Less of an advantage over competing non-free programs. These disadvantages are the reason we use the ordinary General Public License for many libraries. However, the Lesser license provides advantages in certain special circumstances. For example, on rare occasions, there may be a special need to encourage the widest possible use of a certain library, so that it becomes a de-facto standard. To achieve this, non-free programs must be allowed to use the library. A more frequent case is that a free library does the same job as widely used non-free libraries. In this case, there is little to gain by limiting the free library to free software only, so we use the Lesser General Public License. In other cases, permission to use a particular library in non-free programs enables a greater number of people to use a large body of free software. For example, permission to use the GNU C Library in non-free programs enables many more people to use the whole GNU operating system, as well as its variant, the GNU/Linux operating system. Although the Lesser General Public License is Less protective of the users' freedom, it does ensure that the user of a program that is linked with the Library has the freedom and the wherewithal to run that program using a modified version of the Library. The precise terms and conditions for copying, distribution and modification follow. Pay close attention to the difference between a \"work based on the library\" and a \"work that uses the library\". The former contains code derived from the library, whereas the latter must be combined with the library in order to run. TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION \u00b6 0. This License Agreement applies to any software library or other program which contains a notice placed by the copyright holder or other authorized party saying it may be distributed under the terms of this Lesser General Public License (also called \"this License\"). Each licensee is addressed as \"you\". A \"library\" means a collection of software functions and/or data prepared so as to be conveniently linked with application programs (which use some of those functions and data) to form executables. The \"Library\", below, refers to any such software library or work which has been distributed under these terms. A \"work based on the Library\" means either the Library or any derivative work under copyright law: that is to say, a work containing the Library or a portion of it, either verbatim or with modifications and/or translated straightforwardly into another language. (Hereinafter, translation is included without limitation in the term \"modification\".) \"Source code\" for a work means the preferred form of the work for making modifications to it. For a library, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the library. Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running a program using the Library is not restricted, and output from such a program is covered only if its contents constitute a work based on the Library (independent of the use of the Library in a tool for writing it). Whether that is true depends on what the Library does and what the program that uses the Library does. 1. You may copy and distribute verbatim copies of the Library's complete source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and distribute a copy of this License along with the Library. You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee. 2. You may modify your copy or copies of the Library or any portion of it, thus forming a work based on the Library, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions: a) The modified work must itself be a software library. b) You must cause the files modified to carry prominent notices stating that you changed the files and the date of any change. c) You must cause the whole of the work to be licensed at no charge to all third parties under the terms of this License. d) If a facility in the modified Library refers to a function or a table of data to be supplied by an application program that uses the facility, other than as an argument passed when the facility is invoked, then you must make a good faith effort to ensure that, in the event an application does not supply such function or table, the facility still operates, and performs whatever part of its purpose remains meaningful. (For example, a function in a library to compute square roots has a purpose that is entirely well-defined independent of the application. Therefore, Subsection 2d requires that any application-supplied function or table used by this function must be optional: if the application does not supply it, the square root function must still compute square roots.) These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Library, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Library, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it. Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Library. In addition, mere aggregation of another work not based on the Library with the Library (or with a work based on the Library) on a volume of a storage or distribution medium does not bring the other work under the scope of this License. 3. You may opt to apply the terms of the ordinary GNU General Public License instead of this License to a given copy of the Library. To do this, you must alter all the notices that refer to this License, so that they refer to the ordinary GNU General Public License, version 2, instead of to this License. (If a newer version than version 2 of the ordinary GNU General Public License has appeared, then you can specify that version instead if you wish.) Do not make any other change in these notices. Once this change is made in a given copy, it is irreversible for that copy, so the ordinary GNU General Public License applies to all subsequent copies and derivative works made from that copy. This option is useful when you wish to copy part of the code of the Library into a program that is not a library. 4. You may copy and distribute the Library (or a portion or derivative of it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange. If distribution of object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place satisfies the requirement to distribute the source code, even though third parties are not compelled to copy the source along with the object code. 5. A program that contains no derivative of any portion of the Library, but is designed to work with the Library by being compiled or linked with it, is called a \"work that uses the Library\". Such a work, in isolation, is not a derivative work of the Library, and therefore falls outside the scope of this License. However, linking a \"work that uses the Library\" with the Library creates an executable that is a derivative of the Library (because it contains portions of the Library), rather than a \"work that uses the library\". The executable is therefore covered by this License. Section 6 states terms for distribution of such executables. When a \"work that uses the Library\" uses material from a header file that is part of the Library, the object code for the work may be a derivative work of the Library even though the source code is not. Whether this is true is especially significant if the work can be linked without the Library, or if the work is itself a library. The threshold for this to be true is not precisely defined by law. If such an object file uses only numerical parameters, data structure layouts and accessors, and small macros and small inline functions (ten lines or less in length), then the use of the object file is unrestricted, regardless of whether it is legally a derivative work. (Executables containing this object code plus portions of the Library will still fall under Section 6.) Otherwise, if the work is a derivative of the Library, you may distribute the object code for the work under the terms of Section 6. Any executables containing that work also fall under Section 6, whether or not they are linked directly with the Library itself. 6. As an exception to the Sections above, you may also combine or link a \"work that uses the Library\" with the Library to produce a work containing portions of the Library, and distribute that work under terms of your choice, provided that the terms permit modification of the work for the customer's own use and reverse engineering for debugging such modifications. You must give prominent notice with each copy of the work that the Library is used in it and that the Library and its use are covered by this License. You must supply a copy of this License. If the work during execution displays copyright notices, you must include the copyright notice for the Library among them, as well as a reference directing the user to the copy of this License. Also, you must do one of these things: a) Accompany the work with the complete corresponding machine-readable source code for the Library including whatever changes were used in the work (which must be distributed under Sections 1 and 2 above); and, if the work is an executable linked with the Library, with the complete machine-readable \"work that uses the Library\", as object code and/or source code, so that the user can modify the Library and then relink to produce a modified executable containing the modified Library. (It is understood that the user who changes the contents of definitions files in the Library will not necessarily be able to recompile the application to use the modified definitions.) b) Use a suitable shared library mechanism for linking with the Library. A suitable mechanism is one that (1) uses at run time a copy of the library already present on the user's computer system, rather than copying library functions into the executable, and (2) will operate properly with a modified version of the library, if the user installs one, as long as the modified version is interface-compatible with the version that the work was made with. c) Accompany the work with a written offer, valid for at least three years, to give the same user the materials specified in Subsection 6a, above, for a charge no more than the cost of performing this distribution. d) If distribution of the work is made by offering access to copy from a designated place, offer equivalent access to copy the above specified materials from the same place. e) Verify that the user has already received a copy of these materials or that you have already sent this user a copy. For an executable, the required form of the \"work that uses the Library\" must include any data and utility programs needed for reproducing the executable from it. However, as a special exception, the materials to be distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable. It may happen that this requirement contradicts the license restrictions of other proprietary libraries that do not normally accompany the operating system. Such a contradiction means you cannot use both them and the Library together in an executable that you distribute. 7. You may place library facilities that are a work based on the Library side-by-side in a single library together with other library facilities not covered by this License, and distribute such a combined library, provided that the separate distribution of the work based on the Library and of the other library facilities is otherwise permitted, and provided that you do these two things: a) Accompany the combined library with a copy of the same work based on the Library, uncombined with any other library facilities. This must be distributed under the terms of the Sections above. b) Give prominent notice with the combined library of the fact that part of it is a work based on the Library, and explaining where to find the accompanying uncombined form of the same work. 8. You may not copy, modify, sublicense, link with, or distribute the Library except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense, link with, or distribute the Library is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance. 9. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Library or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Library (or any work based on the Library), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Library or works based on it. 10. Each time you redistribute the Library (or any work based on the Library), the recipient automatically receives a license from the original licensor to copy, distribute, link with or modify the Library subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties with this License. 11. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Library at all. For example, if a patent license would not permit royalty-free redistribution of the Library by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Library. If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply, and the section as a whole is intended to apply in other circumstances. It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice. This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License. 12. If the distribution and/or use of the Library is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Library under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License. 13. The Free Software Foundation may publish revised and/or new versions of the Lesser General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Library specifies a version number of this License which applies to it and \"any later version\", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Library does not specify a license version number, you may choose any version ever published by the Free Software Foundation. 14. If you wish to incorporate parts of the Library into other free programs whose distribution conditions are incompatible with these, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally. NO WARRANTY 15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE LIBRARY IS WITH YOU. SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.","title":"LGPL 2.1"},{"location":"legal/licensing/lgpl-2.1/#gnu-lesser-general-public-license","text":"Version 2.1, February 1999 Copyright (C) 1991, 1999 Free Software Foundation, Inc. 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. [This is the first released version of the Lesser GPL. It also counts as the successor of the GNU Library Public License, version 2, hence the version number 2.1.]","title":"GNU LESSER GENERAL PUBLIC LICENSE"},{"location":"legal/licensing/lgpl-2.1/#preamble","text":"The licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public Licenses are intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This license, the Lesser General Public License, applies to some specially designated software packages--typically libraries--of the Free Software Foundation and other authors who decide to use it. You can use it too, but we suggest you first think carefully about whether this license or the ordinary General Public License is the better strategy to use in any particular case, based on the explanations below. When we speak of free software, we are referring to freedom of use, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish); that you receive source code or can get it if you want it; that you can change the software and use pieces of it in new free programs; and that you are informed that you can do these things. To protect your rights, we need to make restrictions that forbid distributors to deny you these rights or to ask you to surrender these rights. These restrictions translate to certain responsibilities for you if you distribute copies of the library or if you modify it. For example, if you distribute copies of the library, whether gratis or for a fee, you must give the recipients all the rights that we gave you. You must make sure that they, too, receive or can get the source code. If you link other code with the library, you must provide complete object files to the recipients, so that they can relink them with the library after making changes to the library and recompiling it. And you must show them these terms so they know their rights. We protect your rights with a two-step method: (1) we copyright the library, and (2) we offer you this license, which gives you legal permission to copy, distribute and/or modify the library. To protect each distributor, we want to make it very clear that there is no warranty for the free library. Also, if the library is modified by someone else and passed on, the recipients should know that what they have is not the original version, so that the original author's reputation will not be affected by problems that might be introduced by others. Finally, software patents pose a constant threat to the existence of any free program. We wish to make sure that a company cannot effectively restrict the users of a free program by obtaining a restrictive license from a patent holder. Therefore, we insist that any patent license obtained for a version of the library must be consistent with the full freedom of use specified in this license. Most GNU software, including some libraries, is covered by the ordinary GNU General Public License. This license, the GNU Lesser General Public License, applies to certain designated libraries, and is quite different from the ordinary General Public License. We use this license for certain libraries in order to permit linking those libraries into non-free programs. When a program is linked with a library, whether statically or using a shared library, the combination of the two is legally speaking a combined work, a derivative of the original library. The ordinary General Public License therefore permits such linking only if the entire combination fits its criteria of freedom. The Lesser General Public License permits more lax criteria for linking other code with the library. We call this license the \"Lesser\" General Public License because it does Less to protect the user's freedom than the ordinary General Public License. It also provides other free software developers Less of an advantage over competing non-free programs. These disadvantages are the reason we use the ordinary General Public License for many libraries. However, the Lesser license provides advantages in certain special circumstances. For example, on rare occasions, there may be a special need to encourage the widest possible use of a certain library, so that it becomes a de-facto standard. To achieve this, non-free programs must be allowed to use the library. A more frequent case is that a free library does the same job as widely used non-free libraries. In this case, there is little to gain by limiting the free library to free software only, so we use the Lesser General Public License. In other cases, permission to use a particular library in non-free programs enables a greater number of people to use a large body of free software. For example, permission to use the GNU C Library in non-free programs enables many more people to use the whole GNU operating system, as well as its variant, the GNU/Linux operating system. Although the Lesser General Public License is Less protective of the users' freedom, it does ensure that the user of a program that is linked with the Library has the freedom and the wherewithal to run that program using a modified version of the Library. The precise terms and conditions for copying, distribution and modification follow. Pay close attention to the difference between a \"work based on the library\" and a \"work that uses the library\". The former contains code derived from the library, whereas the latter must be combined with the library in order to run.","title":"Preamble"},{"location":"legal/licensing/lgpl-2.1/#terms-and-conditions-for-copying-distribution-and-modification","text":"0. This License Agreement applies to any software library or other program which contains a notice placed by the copyright holder or other authorized party saying it may be distributed under the terms of this Lesser General Public License (also called \"this License\"). Each licensee is addressed as \"you\". A \"library\" means a collection of software functions and/or data prepared so as to be conveniently linked with application programs (which use some of those functions and data) to form executables. The \"Library\", below, refers to any such software library or work which has been distributed under these terms. A \"work based on the Library\" means either the Library or any derivative work under copyright law: that is to say, a work containing the Library or a portion of it, either verbatim or with modifications and/or translated straightforwardly into another language. (Hereinafter, translation is included without limitation in the term \"modification\".) \"Source code\" for a work means the preferred form of the work for making modifications to it. For a library, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the library. Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running a program using the Library is not restricted, and output from such a program is covered only if its contents constitute a work based on the Library (independent of the use of the Library in a tool for writing it). Whether that is true depends on what the Library does and what the program that uses the Library does. 1. You may copy and distribute verbatim copies of the Library's complete source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and distribute a copy of this License along with the Library. You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee. 2. You may modify your copy or copies of the Library or any portion of it, thus forming a work based on the Library, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions: a) The modified work must itself be a software library. b) You must cause the files modified to carry prominent notices stating that you changed the files and the date of any change. c) You must cause the whole of the work to be licensed at no charge to all third parties under the terms of this License. d) If a facility in the modified Library refers to a function or a table of data to be supplied by an application program that uses the facility, other than as an argument passed when the facility is invoked, then you must make a good faith effort to ensure that, in the event an application does not supply such function or table, the facility still operates, and performs whatever part of its purpose remains meaningful. (For example, a function in a library to compute square roots has a purpose that is entirely well-defined independent of the application. Therefore, Subsection 2d requires that any application-supplied function or table used by this function must be optional: if the application does not supply it, the square root function must still compute square roots.) These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Library, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Library, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it. Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Library. In addition, mere aggregation of another work not based on the Library with the Library (or with a work based on the Library) on a volume of a storage or distribution medium does not bring the other work under the scope of this License. 3. You may opt to apply the terms of the ordinary GNU General Public License instead of this License to a given copy of the Library. To do this, you must alter all the notices that refer to this License, so that they refer to the ordinary GNU General Public License, version 2, instead of to this License. (If a newer version than version 2 of the ordinary GNU General Public License has appeared, then you can specify that version instead if you wish.) Do not make any other change in these notices. Once this change is made in a given copy, it is irreversible for that copy, so the ordinary GNU General Public License applies to all subsequent copies and derivative works made from that copy. This option is useful when you wish to copy part of the code of the Library into a program that is not a library. 4. You may copy and distribute the Library (or a portion or derivative of it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange. If distribution of object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place satisfies the requirement to distribute the source code, even though third parties are not compelled to copy the source along with the object code. 5. A program that contains no derivative of any portion of the Library, but is designed to work with the Library by being compiled or linked with it, is called a \"work that uses the Library\". Such a work, in isolation, is not a derivative work of the Library, and therefore falls outside the scope of this License. However, linking a \"work that uses the Library\" with the Library creates an executable that is a derivative of the Library (because it contains portions of the Library), rather than a \"work that uses the library\". The executable is therefore covered by this License. Section 6 states terms for distribution of such executables. When a \"work that uses the Library\" uses material from a header file that is part of the Library, the object code for the work may be a derivative work of the Library even though the source code is not. Whether this is true is especially significant if the work can be linked without the Library, or if the work is itself a library. The threshold for this to be true is not precisely defined by law. If such an object file uses only numerical parameters, data structure layouts and accessors, and small macros and small inline functions (ten lines or less in length), then the use of the object file is unrestricted, regardless of whether it is legally a derivative work. (Executables containing this object code plus portions of the Library will still fall under Section 6.) Otherwise, if the work is a derivative of the Library, you may distribute the object code for the work under the terms of Section 6. Any executables containing that work also fall under Section 6, whether or not they are linked directly with the Library itself. 6. As an exception to the Sections above, you may also combine or link a \"work that uses the Library\" with the Library to produce a work containing portions of the Library, and distribute that work under terms of your choice, provided that the terms permit modification of the work for the customer's own use and reverse engineering for debugging such modifications. You must give prominent notice with each copy of the work that the Library is used in it and that the Library and its use are covered by this License. You must supply a copy of this License. If the work during execution displays copyright notices, you must include the copyright notice for the Library among them, as well as a reference directing the user to the copy of this License. Also, you must do one of these things: a) Accompany the work with the complete corresponding machine-readable source code for the Library including whatever changes were used in the work (which must be distributed under Sections 1 and 2 above); and, if the work is an executable linked with the Library, with the complete machine-readable \"work that uses the Library\", as object code and/or source code, so that the user can modify the Library and then relink to produce a modified executable containing the modified Library. (It is understood that the user who changes the contents of definitions files in the Library will not necessarily be able to recompile the application to use the modified definitions.) b) Use a suitable shared library mechanism for linking with the Library. A suitable mechanism is one that (1) uses at run time a copy of the library already present on the user's computer system, rather than copying library functions into the executable, and (2) will operate properly with a modified version of the library, if the user installs one, as long as the modified version is interface-compatible with the version that the work was made with. c) Accompany the work with a written offer, valid for at least three years, to give the same user the materials specified in Subsection 6a, above, for a charge no more than the cost of performing this distribution. d) If distribution of the work is made by offering access to copy from a designated place, offer equivalent access to copy the above specified materials from the same place. e) Verify that the user has already received a copy of these materials or that you have already sent this user a copy. For an executable, the required form of the \"work that uses the Library\" must include any data and utility programs needed for reproducing the executable from it. However, as a special exception, the materials to be distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable. It may happen that this requirement contradicts the license restrictions of other proprietary libraries that do not normally accompany the operating system. Such a contradiction means you cannot use both them and the Library together in an executable that you distribute. 7. You may place library facilities that are a work based on the Library side-by-side in a single library together with other library facilities not covered by this License, and distribute such a combined library, provided that the separate distribution of the work based on the Library and of the other library facilities is otherwise permitted, and provided that you do these two things: a) Accompany the combined library with a copy of the same work based on the Library, uncombined with any other library facilities. This must be distributed under the terms of the Sections above. b) Give prominent notice with the combined library of the fact that part of it is a work based on the Library, and explaining where to find the accompanying uncombined form of the same work. 8. You may not copy, modify, sublicense, link with, or distribute the Library except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense, link with, or distribute the Library is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance. 9. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Library or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Library (or any work based on the Library), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Library or works based on it. 10. Each time you redistribute the Library (or any work based on the Library), the recipient automatically receives a license from the original licensor to copy, distribute, link with or modify the Library subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties with this License. 11. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Library at all. For example, if a patent license would not permit royalty-free redistribution of the Library by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Library. If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply, and the section as a whole is intended to apply in other circumstances. It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice. This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License. 12. If the distribution and/or use of the Library is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Library under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License. 13. The Free Software Foundation may publish revised and/or new versions of the Lesser General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Library specifies a version number of this License which applies to it and \"any later version\", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Library does not specify a license version number, you may choose any version ever published by the Free Software Foundation. 14. If you wish to incorporate parts of the Library into other free programs whose distribution conditions are incompatible with these, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally. NO WARRANTY 15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE LIBRARY IS WITH YOU. SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.","title":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION"},{"location":"legal/licensing/lgpl-3/","text":"This license makes reference to the version 3 of the GNU General Public License . GNU LESSER GENERAL PUBLIC LICENSE \u00b6 Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/ Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. This version of the GNU Lesser General Public License incorporates the terms and conditions of version 3 of the GNU General Public License, supplemented by the additional permissions listed below. 0. Additional Definitions. \u00b6 As used herein, \"this License\" refers to version 3 of the GNU Lesser General Public License, and the \"GNU GPL\" refers to version 3 of the GNU General Public License. \"The Library\" refers to a covered work governed by this License, other than an Application or a Combined Work as defined below. An \"Application\" is any work that makes use of an interface provided by the Library, but which is not otherwise based on the Library. Defining a subclass of a class defined by the Library is deemed a mode of using an interface provided by the Library. A \"Combined Work\" is a work produced by combining or linking an Application with the Library. The particular version of the Library with which the Combined Work was made is also called the \"Linked Version\". The \"Minimal Corresponding Source\" for a Combined Work means the Corresponding Source for the Combined Work, excluding any source code for portions of the Combined Work that, considered in isolation, are based on the Application, and not on the Linked Version. The \"Corresponding Application Code\" for a Combined Work means the object code and/or source code for the Application, including any data and utility programs needed for reproducing the Combined Work from the Application, but excluding the System Libraries of the Combined Work. 1. Exception to Section 3 of the GNU GPL. \u00b6 You may convey a covered work under sections 3 and 4 of this License without being bound by section 3 of the GNU GPL. 2. Conveying Modified Versions. \u00b6 If you modify a copy of the Library, and, in your modifications, a facility refers to a function or data to be supplied by an Application that uses the facility (other than as an argument passed when the facility is invoked), then you may convey a copy of the modified version: a) under this License, provided that you make a good faith effort to ensure that, in the event an Application does not supply the function or data, the facility still operates, and performs whatever part of its purpose remains meaningful, or b) under the GNU GPL, with none of the additional permissions of this License applicable to that copy. 3. Object Code Incorporating Material from Library Header Files. \u00b6 The object code form of an Application may incorporate material from a header file that is part of the Library. You may convey such object code under terms of your choice, provided that, if the incorporated material is not limited to numerical parameters, data structure layouts and accessors, or small macros, inline functions and templates (ten or fewer lines in length), you do both of the following: a) Give prominent notice with each copy of the object code that the Library is used in it and that the Library and its use are covered by this License. b) Accompany the object code with a copy of the GNU GPL and this license document. 4. Combined Works. \u00b6 You may convey a Combined Work under terms of your choice that, taken together, effectively do not restrict modification of the portions of the Library contained in the Combined Work and reverse engineering for debugging such modifications, if you also do each of the following: a) Give prominent notice with each copy of the Combined Work that the Library is used in it and that the Library and its use are covered by this License. b) Accompany the Combined Work with a copy of the GNU GPL and this license document. c) For a Combined Work that displays copyright notices during execution, include the copyright notice for the Library among these notices, as well as a reference directing the user to the copies of the GNU GPL and this license document. d) Do one of the following: 0) Convey the Minimal Corresponding Source under the terms of this License, and the Corresponding Application Code in a form suitable for, and under terms that permit, the user to recombine or relink the Application with a modified version of the Linked Version to produce a modified Combined Work, in the manner specified by section 6 of the GNU GPL for conveying Corresponding Source. 1) Use a suitable shared library mechanism for linking with the Library. A suitable mechanism is one that (a) uses at run time a copy of the Library already present on the user's computer system, and (b) will operate properly with a modified version of the Library that is interface-compatible with the Linked Version. e) Provide Installation Information, but only if you would otherwise be required to provide such information under section 6 of the GNU GPL, and only to the extent that such information is necessary to install and execute a modified version of the Combined Work produced by recombining or relinking the Application with a modified version of the Linked Version. (If you use option 4d0, the Installation Information must accompany the Minimal Corresponding Source and Corresponding Application Code. If you use option 4d1, you must provide the Installation Information in the manner specified by section 6 of the GNU GPL for conveying Corresponding Source.) 5. Combined Libraries. \u00b6 You may place library facilities that are a work based on the Library side by side in a single library together with other library facilities that are not Applications and are not covered by this License, and convey such a combined library under terms of your choice, if you do both of the following: a) Accompany the combined library with a copy of the same work based on the Library, uncombined with any other library facilities, conveyed under the terms of this License. b) Give prominent notice with the combined library that part of it is a work based on the Library, and explaining where to find the accompanying uncombined form of the same work. 6. Revised Versions of the GNU Lesser General Public License. \u00b6 The Free Software Foundation may publish revised and/or new versions of the GNU Lesser General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Library as you received it specifies that a certain numbered version of the GNU Lesser General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that published version or of any later version published by the Free Software Foundation. If the Library as you received it does not specify a version number of the GNU Lesser General Public License, you may choose any version of the GNU Lesser General Public License ever published by the Free Software Foundation. If the Library as you received it specifies that a proxy can decide whether future versions of the GNU Lesser General Public License shall apply, that proxy's public statement of acceptance of any version is permanent authorization for you to choose that version for the Library.","title":"LGPL 3"},{"location":"legal/licensing/lgpl-3/#gnu-lesser-general-public-license","text":"Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/ Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. This version of the GNU Lesser General Public License incorporates the terms and conditions of version 3 of the GNU General Public License, supplemented by the additional permissions listed below.","title":"GNU LESSER GENERAL PUBLIC LICENSE"},{"location":"legal/licensing/lgpl-3/#0-additional-definitions","text":"As used herein, \"this License\" refers to version 3 of the GNU Lesser General Public License, and the \"GNU GPL\" refers to version 3 of the GNU General Public License. \"The Library\" refers to a covered work governed by this License, other than an Application or a Combined Work as defined below. An \"Application\" is any work that makes use of an interface provided by the Library, but which is not otherwise based on the Library. Defining a subclass of a class defined by the Library is deemed a mode of using an interface provided by the Library. A \"Combined Work\" is a work produced by combining or linking an Application with the Library. The particular version of the Library with which the Combined Work was made is also called the \"Linked Version\". The \"Minimal Corresponding Source\" for a Combined Work means the Corresponding Source for the Combined Work, excluding any source code for portions of the Combined Work that, considered in isolation, are based on the Application, and not on the Linked Version. The \"Corresponding Application Code\" for a Combined Work means the object code and/or source code for the Application, including any data and utility programs needed for reproducing the Combined Work from the Application, but excluding the System Libraries of the Combined Work.","title":"0. Additional Definitions."},{"location":"legal/licensing/lgpl-3/#1-exception-to-section-3-of-the-gnu-gpl","text":"You may convey a covered work under sections 3 and 4 of this License without being bound by section 3 of the GNU GPL.","title":"1. Exception to Section 3 of the GNU GPL."},{"location":"legal/licensing/lgpl-3/#2-conveying-modified-versions","text":"If you modify a copy of the Library, and, in your modifications, a facility refers to a function or data to be supplied by an Application that uses the facility (other than as an argument passed when the facility is invoked), then you may convey a copy of the modified version: a) under this License, provided that you make a good faith effort to ensure that, in the event an Application does not supply the function or data, the facility still operates, and performs whatever part of its purpose remains meaningful, or b) under the GNU GPL, with none of the additional permissions of this License applicable to that copy.","title":"2. Conveying Modified Versions."},{"location":"legal/licensing/lgpl-3/#3-object-code-incorporating-material-from-library-header-files","text":"The object code form of an Application may incorporate material from a header file that is part of the Library. You may convey such object code under terms of your choice, provided that, if the incorporated material is not limited to numerical parameters, data structure layouts and accessors, or small macros, inline functions and templates (ten or fewer lines in length), you do both of the following: a) Give prominent notice with each copy of the object code that the Library is used in it and that the Library and its use are covered by this License. b) Accompany the object code with a copy of the GNU GPL and this license document.","title":"3. Object Code Incorporating Material from Library Header Files."},{"location":"legal/licensing/lgpl-3/#4-combined-works","text":"You may convey a Combined Work under terms of your choice that, taken together, effectively do not restrict modification of the portions of the Library contained in the Combined Work and reverse engineering for debugging such modifications, if you also do each of the following: a) Give prominent notice with each copy of the Combined Work that the Library is used in it and that the Library and its use are covered by this License. b) Accompany the Combined Work with a copy of the GNU GPL and this license document. c) For a Combined Work that displays copyright notices during execution, include the copyright notice for the Library among these notices, as well as a reference directing the user to the copies of the GNU GPL and this license document. d) Do one of the following: 0) Convey the Minimal Corresponding Source under the terms of this License, and the Corresponding Application Code in a form suitable for, and under terms that permit, the user to recombine or relink the Application with a modified version of the Linked Version to produce a modified Combined Work, in the manner specified by section 6 of the GNU GPL for conveying Corresponding Source. 1) Use a suitable shared library mechanism for linking with the Library. A suitable mechanism is one that (a) uses at run time a copy of the Library already present on the user's computer system, and (b) will operate properly with a modified version of the Library that is interface-compatible with the Linked Version. e) Provide Installation Information, but only if you would otherwise be required to provide such information under section 6 of the GNU GPL, and only to the extent that such information is necessary to install and execute a modified version of the Combined Work produced by recombining or relinking the Application with a modified version of the Linked Version. (If you use option 4d0, the Installation Information must accompany the Minimal Corresponding Source and Corresponding Application Code. If you use option 4d1, you must provide the Installation Information in the manner specified by section 6 of the GNU GPL for conveying Corresponding Source.)","title":"4. Combined Works."},{"location":"legal/licensing/lgpl-3/#5-combined-libraries","text":"You may place library facilities that are a work based on the Library side by side in a single library together with other library facilities that are not Applications and are not covered by this License, and convey such a combined library under terms of your choice, if you do both of the following: a) Accompany the combined library with a copy of the same work based on the Library, uncombined with any other library facilities, conveyed under the terms of this License. b) Give prominent notice with the combined library that part of it is a work based on the Library, and explaining where to find the accompanying uncombined form of the same work.","title":"5. Combined Libraries."},{"location":"legal/licensing/lgpl-3/#6-revised-versions-of-the-gnu-lesser-general-public-license","text":"The Free Software Foundation may publish revised and/or new versions of the GNU Lesser General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Library as you received it specifies that a certain numbered version of the GNU Lesser General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that published version or of any later version published by the Free Software Foundation. If the Library as you received it does not specify a version number of the GNU Lesser General Public License, you may choose any version of the GNU Lesser General Public License ever published by the Free Software Foundation. If the Library as you received it specifies that a proxy can decide whether future versions of the GNU Lesser General Public License shall apply, that proxy's public statement of acceptance of any version is permanent authorization for you to choose that version for the Library.","title":"6. Revised Versions of the GNU Lesser General Public License."},{"location":"reference/","text":"API Reference Overview \u00b6 This part of the Boden Framework documentation provides a reference to make looking up specific Boden classes and types easy. If you are interested in learning how to write apps in Boden, consider the Getting Started and Guides sections instead. Warning The Boden API is work in progress and may change in the coming months. Follow us on Twitter and star/watch our repo on GitHub to stay in the loop! The Boden API is organized into three principal modules: Foundation \u00b6 The Foundation module provides essential base classes, data structures, type definitions, and operating system services for use in your application. UI \u00b6 The UI module contains all classes, types, and widgets required for building user interfaces with Boden. All widgets shipped with the Boden Framework are available in this module. Net \u00b6 The Net module provides essential networking services for apps written with Boden.","title":"API Reference Overview"},{"location":"reference/#api-reference-overview","text":"This part of the Boden Framework documentation provides a reference to make looking up specific Boden classes and types easy. If you are interested in learning how to write apps in Boden, consider the Getting Started and Guides sections instead. Warning The Boden API is work in progress and may change in the coming months. Follow us on Twitter and star/watch our repo on GitHub to stay in the loop! The Boden API is organized into three principal modules:","title":"API Reference Overview"},{"location":"reference/#foundation","text":"The Foundation module provides essential base classes, data structures, type definitions, and operating system services for use in your application.","title":"Foundation"},{"location":"reference/#ui","text":"The UI module contains all classes, types, and widgets required for building user interfaces with Boden. All widgets shipped with the Boden Framework are available in this module.","title":"UI"},{"location":"reference/#net","text":"The Net module provides essential networking services for apps written with Boden.","title":"Net"},{"location":"reference/extra-modules/lottie/lottie_view/","text":"LottieView \u00b6 Provides a simple way to display vector animations made with Adobe After Effects. Declaration \u00b6 namespace bdn :: ui :: lottie { class View : public ui :: View } Example \u00b6 #include <bdn/ui/lottie/View.h> using namespace bdn :: ui ; // ... auto lottieView = std :: make_shared < lottie :: View > (); lottieView -> url = \"resource://main/images/animation.json\" ; lottieView -> running = true ; lottieView -> loop = true ; Properties \u00b6 Property <std::string> url URL pointing to the animation file. (Please refer to Using Resources for more information on how to bundle resources with your app.) Property <bool> running Whether the animation is running. Set this to true to start the animation or to false to stop it. Property <bool> loop Whether the animation should repeat in a loop. Set this to true if you want a looping animation. Relationships \u00b6 Inherits from View .","title":"LottieView"},{"location":"reference/extra-modules/lottie/lottie_view/#lottieview","text":"Provides a simple way to display vector animations made with Adobe After Effects.","title":"LottieView"},{"location":"reference/extra-modules/lottie/lottie_view/#declaration","text":"namespace bdn :: ui :: lottie { class View : public ui :: View }","title":"Declaration"},{"location":"reference/extra-modules/lottie/lottie_view/#example","text":"#include <bdn/ui/lottie/View.h> using namespace bdn :: ui ; // ... auto lottieView = std :: make_shared < lottie :: View > (); lottieView -> url = \"resource://main/images/animation.json\" ; lottieView -> running = true ; lottieView -> loop = true ;","title":"Example"},{"location":"reference/extra-modules/lottie/lottie_view/#properties","text":"Property <std::string> url URL pointing to the animation file. (Please refer to Using Resources for more information on how to bundle resources with your app.) Property <bool> running Whether the animation is running. Set this to true to start the animation or to false to stop it. Property <bool> loop Whether the animation should repeat in a loop. Set this to true if you want a looping animation.","title":"Properties"},{"location":"reference/extra-modules/lottie/lottie_view/#relationships","text":"Inherits from View .","title":"Relationships"},{"location":"reference/foundation/application/","text":"Application \u00b6 Represents the application. To define the setup and behavior of your own app, inherit from ApplicationController . The application's entry point is defined by the BDN_APP_INIT macro. See ApplicationController for an example. Declaration \u00b6 namespace bdn { class Application : public std :: enable_shared_from_this < Application > } Obtaining the Global Application Instance \u00b6 static std::shared_ptr<Application> globalApplication() Returns the global Application instance for the current process. Registering an Application Controller \u00b6 BDN_APP_INIT(ApplicationControllerClassName) Use this macro to register your main application controller. Properties \u00b6 Property<std::vector<std::string>> commandLineArguments A list of command-line arguments as specified when the application was launched. std::shared_ptr< DispatchQueue > dispatchQueue() The main thread's DispatchQueue . std::shared_ptr< ApplicationController > applicationController() The user-defined application controller associated with the application. Commandline arguments \u00b6 int argc() Returns the number of command-line arguments. char **argv() Returns the raw command-line arguments. Main thread \u00b6 static std::thread::id mainThreadId() Returns the thread-id of the main thread ( The thread that created the Application ) static bool isMainThread() Returns true if the current thread is the main thread static void assertInMainThread() Asserts that the current thread is the main thread OS Services \u00b6 virtual void openURL(const std::string &url) Opens the given URL in a suitable external application. Web URLs will be opened in the system's standard web browser. Application-specific URLs will open in the respective application. virtual void copyToClipboard(const std::string &str) Copies the given string to the clipboard. Resources \u00b6 virtual std::string uriToBundledFileUri(const std::string &uri) Returns a platform specific representation of a resource path (see: Resources ). If the path cannot be converted, the uri parameter is returned. Shutdown \u00b6 void initiateExitIfPossible(int exitCode) Tries to shutdown the application with the given exit code. Does nothing on Android.","title":"Application"},{"location":"reference/foundation/application/#application","text":"Represents the application. To define the setup and behavior of your own app, inherit from ApplicationController . The application's entry point is defined by the BDN_APP_INIT macro. See ApplicationController for an example.","title":"Application"},{"location":"reference/foundation/application/#declaration","text":"namespace bdn { class Application : public std :: enable_shared_from_this < Application > }","title":"Declaration"},{"location":"reference/foundation/application/#obtaining-the-global-application-instance","text":"static std::shared_ptr<Application> globalApplication() Returns the global Application instance for the current process.","title":"Obtaining the Global Application Instance"},{"location":"reference/foundation/application/#registering-an-application-controller","text":"BDN_APP_INIT(ApplicationControllerClassName) Use this macro to register your main application controller.","title":"Registering an Application Controller"},{"location":"reference/foundation/application/#properties","text":"Property<std::vector<std::string>> commandLineArguments A list of command-line arguments as specified when the application was launched. std::shared_ptr< DispatchQueue > dispatchQueue() The main thread's DispatchQueue . std::shared_ptr< ApplicationController > applicationController() The user-defined application controller associated with the application.","title":"Properties"},{"location":"reference/foundation/application/#commandline-arguments","text":"int argc() Returns the number of command-line arguments. char **argv() Returns the raw command-line arguments.","title":"Commandline arguments"},{"location":"reference/foundation/application/#main-thread","text":"static std::thread::id mainThreadId() Returns the thread-id of the main thread ( The thread that created the Application ) static bool isMainThread() Returns true if the current thread is the main thread static void assertInMainThread() Asserts that the current thread is the main thread","title":"Main thread"},{"location":"reference/foundation/application/#os-services","text":"virtual void openURL(const std::string &url) Opens the given URL in a suitable external application. Web URLs will be opened in the system's standard web browser. Application-specific URLs will open in the respective application. virtual void copyToClipboard(const std::string &str) Copies the given string to the clipboard.","title":"OS Services"},{"location":"reference/foundation/application/#resources","text":"virtual std::string uriToBundledFileUri(const std::string &uri) Returns a platform specific representation of a resource path (see: Resources ). If the path cannot be converted, the uri parameter is returned.","title":"Resources"},{"location":"reference/foundation/application/#shutdown","text":"void initiateExitIfPossible(int exitCode) Tries to shutdown the application with the given exit code. Does nothing on Android.","title":"Shutdown"},{"location":"reference/foundation/application_controller/","text":"ApplicationController \u00b6 A base class for managing the lifecycle of your Boden-based application. Inherit from this class to create an application controller for your application. Declaration \u00b6 namespace bdn { class ApplicationController : public std :: enable_shared_from_this < ApplicationController > } Example \u00b6 #include <bdn/Window.h> #include <bdn/ApplicationController.h> using namespace bdn ; using namespace bdn :: ui ; class MyApplicationController : public ApplicationController { public : void beginLaunch () override { _window = std :: make_shared < Window > (); _window -> title = \"AwesomeApp\" ; _window -> geometry = Rect { 0 , 0 , 400 , 300 }; std :: shared_ptr < Button > button = std :: make_shared < Button > (); button -> label = \"Hello World\" ; button -> geometry = Rect { 150 , 129 , 100 , 22 }; _window -> contentView = button ; _window -> visible = true ; } private : std :: shared_ptr < Window > _window ; }; BDN_APP_INIT ( MyApplicationController ) Startup \u00b6 virtual void beginLaunch() This is the first entry point for your application after it is started. You should start creating your UI and other objects here. If the operating system supports automatically restoring the state of the application UI (for example, on iOS) then the restoration has NOT yet happened when this function is called. virtual void finishLaunch() This is called after the Application has finished its launch. If the operating system supports automatically restoring the state of the app's UI (for example, on iOS) then the restoration has finished when this function is called. Activity \u00b6 virtual void onActivate() Called once is ready for the User to interact with it. On mobile operating systems this can be called when the User switches back to the application. virtual void onDeactivate() Called when the application is deactivated. On mobile operating systems this can be called when the User switches focus to another application Sleep \u00b6 virtual void onSuspend() Called when the application is about to be suspended. An application can store the state it needs to be reactivated here. This is typically called after onDeactivate This function should return as quickly as possible since many Mobile Operating Systems may terminate it otherwise ( usually 1-5 seconds ) virtual void onResume() Called when the application is reactivated after a suspension. onActivate() will usually be called shortly after. Exit \u00b6 virtual void onTerminate() The app is about to be terminated by the OS. This function will not be called on all Operating Systems. Use onSuspend to store application state or User data.","title":"ApplicationController"},{"location":"reference/foundation/application_controller/#applicationcontroller","text":"A base class for managing the lifecycle of your Boden-based application. Inherit from this class to create an application controller for your application.","title":"ApplicationController"},{"location":"reference/foundation/application_controller/#declaration","text":"namespace bdn { class ApplicationController : public std :: enable_shared_from_this < ApplicationController > }","title":"Declaration"},{"location":"reference/foundation/application_controller/#example","text":"#include <bdn/Window.h> #include <bdn/ApplicationController.h> using namespace bdn ; using namespace bdn :: ui ; class MyApplicationController : public ApplicationController { public : void beginLaunch () override { _window = std :: make_shared < Window > (); _window -> title = \"AwesomeApp\" ; _window -> geometry = Rect { 0 , 0 , 400 , 300 }; std :: shared_ptr < Button > button = std :: make_shared < Button > (); button -> label = \"Hello World\" ; button -> geometry = Rect { 150 , 129 , 100 , 22 }; _window -> contentView = button ; _window -> visible = true ; } private : std :: shared_ptr < Window > _window ; }; BDN_APP_INIT ( MyApplicationController )","title":"Example"},{"location":"reference/foundation/application_controller/#startup","text":"virtual void beginLaunch() This is the first entry point for your application after it is started. You should start creating your UI and other objects here. If the operating system supports automatically restoring the state of the application UI (for example, on iOS) then the restoration has NOT yet happened when this function is called. virtual void finishLaunch() This is called after the Application has finished its launch. If the operating system supports automatically restoring the state of the app's UI (for example, on iOS) then the restoration has finished when this function is called.","title":"Startup"},{"location":"reference/foundation/application_controller/#activity","text":"virtual void onActivate() Called once is ready for the User to interact with it. On mobile operating systems this can be called when the User switches back to the application. virtual void onDeactivate() Called when the application is deactivated. On mobile operating systems this can be called when the User switches focus to another application","title":"Activity"},{"location":"reference/foundation/application_controller/#sleep","text":"virtual void onSuspend() Called when the application is about to be suspended. An application can store the state it needs to be reactivated here. This is typically called after onDeactivate This function should return as quickly as possible since many Mobile Operating Systems may terminate it otherwise ( usually 1-5 seconds ) virtual void onResume() Called when the application is reactivated after a suspension. onActivate() will usually be called shortly after.","title":"Sleep"},{"location":"reference/foundation/application_controller/#exit","text":"virtual void onTerminate() The app is about to be terminated by the OS. This function will not be called on all Operating Systems. Use onSuspend to store application state or User data.","title":"Exit"},{"location":"reference/foundation/attributed_string/","text":"AttributedString \u00b6 A string that allows you to set attributes for text ranges. Attributed strings are commonly used to apply formatting to a string. Declaration \u00b6 namespace bdn { class AttributedString } Construction \u00b6 To create an instance of AttributedString simply call std::make_shared<AttributedString>() . A special implementation of std::make_shared will create the platform specific version of an AttributedString . Serializing \u00b6 virtual bool fromHTML(const std::string &html) Replaces the contents of the AttributedString with the given html markup code. virtual std::string toHTML() const Returns the contents as a string containing HTML markup code. Json \u00b6 void fromJSON(const bdn::json& json) Replaces the contents of the string with the data from json . HTML form: { \"html\" : <h t ml - s tr i n g> } Raw form: { \"string\" : <raw s tr i n g> , \"ranges\" : [ { \"start\" : <i nt > , \"length\" : <i nt > , a ttr ibu tes : { < na me> : <value> , ... } }, ... ] } bdn::json toJSON() const Returns the output of toHTML() wrapped in a json object. Attributes \u00b6 virtual void addAttribute(std::string attributeName, std::any value, Range range) Adds an attribute to the specified range . The value is converted using the types fromAny function. Attribute Name Type foreground-color Color font Font link std::string baseline-offset float virtual void addAttributes(AttributeMap attributes, Range range) Adds all attributes in attributes to the specified range . Types \u00b6 CreatorStack A GlobalStack used to create platform specific versions of AttributedString .","title":"AttributedString"},{"location":"reference/foundation/attributed_string/#attributedstring","text":"A string that allows you to set attributes for text ranges. Attributed strings are commonly used to apply formatting to a string.","title":"AttributedString"},{"location":"reference/foundation/attributed_string/#declaration","text":"namespace bdn { class AttributedString }","title":"Declaration"},{"location":"reference/foundation/attributed_string/#construction","text":"To create an instance of AttributedString simply call std::make_shared<AttributedString>() . A special implementation of std::make_shared will create the platform specific version of an AttributedString .","title":"Construction"},{"location":"reference/foundation/attributed_string/#serializing","text":"virtual bool fromHTML(const std::string &html) Replaces the contents of the AttributedString with the given html markup code. virtual std::string toHTML() const Returns the contents as a string containing HTML markup code.","title":"Serializing"},{"location":"reference/foundation/attributed_string/#json","text":"void fromJSON(const bdn::json& json) Replaces the contents of the string with the data from json . HTML form: { \"html\" : <h t ml - s tr i n g> } Raw form: { \"string\" : <raw s tr i n g> , \"ranges\" : [ { \"start\" : <i nt > , \"length\" : <i nt > , a ttr ibu tes : { < na me> : <value> , ... } }, ... ] } bdn::json toJSON() const Returns the output of toHTML() wrapped in a json object.","title":"Json"},{"location":"reference/foundation/attributed_string/#attributes","text":"virtual void addAttribute(std::string attributeName, std::any value, Range range) Adds an attribute to the specified range . The value is converted using the types fromAny function. Attribute Name Type foreground-color Color font Font link std::string baseline-offset float virtual void addAttributes(AttributeMap attributes, Range range) Adds all attributes in attributes to the specified range .","title":"Attributes"},{"location":"reference/foundation/attributed_string/#types","text":"CreatorStack A GlobalStack used to create platform specific versions of AttributedString .","title":"Types"},{"location":"reference/foundation/color/","text":"Color \u00b6 Represents an RGBA color. Can be de-/serialized from/to JSON. Example \u00b6 #include <bdn/Color.h> #include <bdn/Json.h> using namespace bdn ; int main () { Color color ( \"royalblue\" ); json j = color ; return 0 ; } Declaration \u00b6 namespace bdn { class Color } Constructor \u00b6 Color() Creates an opaque black color. Color(std::string color) Creates a color from a string. You can specify the color via a hex value: #RRGGBBAA or #RGBA . If you omit the alpha value it will default to opaque. You can also use up to CSS Level 4 color names including transparent . constexpr Color(std::array array) Initializes the color with the given array of floating point component values in range [0,1] (r,g,b,a). constexpr Color(double r, double g, double b, double a = 1.0f) Initializes the color with the given floating point component values in range [0,1]. constexpr Color(uint32_t color) Initializes the color with the give uint32_t value. Red is stored in the highest 8 bits, alpha is stored in the lowest 8 bits. Conversion \u00b6 static Color fromAny(std::any anyColor) Converts an std::any to Color. Throws std::bad_any_cast if no conversion possible. std::any type calls Color Color(std::any_cast<Color>(any)) std::string Color(std::any_cast<std::string>(any)) json (Color)std::any_cast<json>(any) static Color fromIntAlphaFirst(uint32_t color) Same as Color(uint32_t) but takes the alpha value from the highest 8 bits. RGBA \u00b6 double red() const Returns the red component as a floating point value in range [0,1]. double green() const Returns the green component as a floating point value in range [0,1]. double blue() const Returns the blue component as a floating point value in range [0,1]. double alpha() const Returns the alpha component as a floating point value in range [0,1]. Array access \u00b6 std::array asArray() const Returns the components as an std::array of doubles. template std::array asIntArray() const Returns the components as an std::array<T> where T is the int type to convert to. The internal floating point values are scaled from 0 to std::numerical_limits<T>::max() . Int32 access \u00b6 uint32_t asInt() const Returns all components as one uint32_t in the form 0xRRGGBBAA . uint32_t asIntAlphaFirst() const Returns all components as one uint32_t in the form 0xAARRGGBB .","title":"Color"},{"location":"reference/foundation/color/#color","text":"Represents an RGBA color. Can be de-/serialized from/to JSON.","title":"Color"},{"location":"reference/foundation/color/#example","text":"#include <bdn/Color.h> #include <bdn/Json.h> using namespace bdn ; int main () { Color color ( \"royalblue\" ); json j = color ; return 0 ; }","title":"Example"},{"location":"reference/foundation/color/#declaration","text":"namespace bdn { class Color }","title":"Declaration"},{"location":"reference/foundation/color/#constructor","text":"Color() Creates an opaque black color. Color(std::string color) Creates a color from a string. You can specify the color via a hex value: #RRGGBBAA or #RGBA . If you omit the alpha value it will default to opaque. You can also use up to CSS Level 4 color names including transparent . constexpr Color(std::array array) Initializes the color with the given array of floating point component values in range [0,1] (r,g,b,a). constexpr Color(double r, double g, double b, double a = 1.0f) Initializes the color with the given floating point component values in range [0,1]. constexpr Color(uint32_t color) Initializes the color with the give uint32_t value. Red is stored in the highest 8 bits, alpha is stored in the lowest 8 bits.","title":"Constructor"},{"location":"reference/foundation/color/#conversion","text":"static Color fromAny(std::any anyColor) Converts an std::any to Color. Throws std::bad_any_cast if no conversion possible. std::any type calls Color Color(std::any_cast<Color>(any)) std::string Color(std::any_cast<std::string>(any)) json (Color)std::any_cast<json>(any) static Color fromIntAlphaFirst(uint32_t color) Same as Color(uint32_t) but takes the alpha value from the highest 8 bits.","title":"Conversion"},{"location":"reference/foundation/color/#rgba","text":"double red() const Returns the red component as a floating point value in range [0,1]. double green() const Returns the green component as a floating point value in range [0,1]. double blue() const Returns the blue component as a floating point value in range [0,1]. double alpha() const Returns the alpha component as a floating point value in range [0,1].","title":"RGBA"},{"location":"reference/foundation/color/#array-access","text":"std::array asArray() const Returns the components as an std::array of doubles. template std::array asIntArray() const Returns the components as an std::array<T> where T is the int type to convert to. The internal floating point values are scaled from 0 to std::numerical_limits<T>::max() .","title":"Array access"},{"location":"reference/foundation/color/#int32-access","text":"uint32_t asInt() const Returns all components as one uint32_t in the form 0xRRGGBBAA . uint32_t asIntAlphaFirst() const Returns all components as one uint32_t in the form 0xAARRGGBB .","title":"Int32 access"},{"location":"reference/foundation/dispatch_queue/","text":"DispatchQueue \u00b6 Queues and executes arbitrary functions on a thread. Declaration \u00b6 namespace bdn { class DispatchQueue } Types \u00b6 using Function = std::function<void()> using Clock = std::chrono::steady_clock using TimePoint = Clock::time_point Creating a DispatchQueue Object \u00b6 DispatchQueue(bool slave = false) Constructs a dispatch queue. If slave is false (the default), creates and manages a thread for the dispatch queue. If slave is true , the queue will not create a thread on its own. This is handy if there is already a thread/run loop which should be integrated with the dispatch queue. Dispatching Methods to the Queue \u00b6 void dispatchSync( Function function) Dispatches a function on the dispatch queue thread and waits for it to finish. void dispatchAsync( Function function) Dispatches a function on the dispatch queue thread and returns immediately. template <> void dispatchAsyncDelayed(std::chrono::duration<> delay, Function function) Dispatches a function to run on the dispatch queue thread after the delay . Creating Timers \u00b6 template<> createTimer(std::chrono::duration<> interval, std::function<bool()> timer) Creates a timer that will run timer repeatedly on the dispatch queue's thread every interval until timer returns false . Controlling the Queue's Internal Processing \u00b6 void enter() Starts processing synchronously until cancel is called. Only allowed if slave was true during construction. void cancel() Stops processing as soon as possible. void executeSync() Executes the next function scheduled on the queue and returns.","title":"DispatchQueue"},{"location":"reference/foundation/dispatch_queue/#dispatchqueue","text":"Queues and executes arbitrary functions on a thread.","title":"DispatchQueue"},{"location":"reference/foundation/dispatch_queue/#declaration","text":"namespace bdn { class DispatchQueue }","title":"Declaration"},{"location":"reference/foundation/dispatch_queue/#types","text":"using Function = std::function<void()> using Clock = std::chrono::steady_clock using TimePoint = Clock::time_point","title":"Types"},{"location":"reference/foundation/dispatch_queue/#creating-a-dispatchqueue-object","text":"DispatchQueue(bool slave = false) Constructs a dispatch queue. If slave is false (the default), creates and manages a thread for the dispatch queue. If slave is true , the queue will not create a thread on its own. This is handy if there is already a thread/run loop which should be integrated with the dispatch queue.","title":"Creating a DispatchQueue Object"},{"location":"reference/foundation/dispatch_queue/#dispatching-methods-to-the-queue","text":"void dispatchSync( Function function) Dispatches a function on the dispatch queue thread and waits for it to finish. void dispatchAsync( Function function) Dispatches a function on the dispatch queue thread and returns immediately. template <> void dispatchAsyncDelayed(std::chrono::duration<> delay, Function function) Dispatches a function to run on the dispatch queue thread after the delay .","title":"Dispatching Methods to the Queue"},{"location":"reference/foundation/dispatch_queue/#creating-timers","text":"template<> createTimer(std::chrono::duration<> interval, std::function<bool()> timer) Creates a timer that will run timer repeatedly on the dispatch queue's thread every interval until timer returns false .","title":"Creating Timers"},{"location":"reference/foundation/dispatch_queue/#controlling-the-queues-internal-processing","text":"void enter() Starts processing synchronously until cancel is called. Only allowed if slave was true during construction. void cancel() Stops processing as soon as possible. void executeSync() Executes the next function scheduled on the queue and returns.","title":"Controlling the Queue's Internal Processing"},{"location":"reference/foundation/font/","text":"Font \u00b6 Represents a font. Can be de-/serialized from/to JSON. Example \u00b6 #include <bdn/Font.h> #include <bdn/Json.h> int main () { bdn :: Font font ; font . family = \"Arial\" ; font . size . type = Font :: Size :: Type :: Pixels ; font . size . value = 32 ; bdn :: json j = font ; return 0 ; } Declaration \u00b6 namespace bdn { class Font } Conversion \u00b6 static Font fromAny(std::any anyFont) Converts an std::any to Font. Throws std::bad_any_cast if no conversion possible. std::any type calls Font Font(std::any_cast<Font>(any)) json (Font)std::any_cast<json>(any) Members \u00b6 std::string family The font family Size size The font size ( see Size ) Style style = Style::Inherit The font style Weight weight = Weight::Inherit The font weight. Variant variant = Variant::Inherit The font variant Inner types \u00b6 Size \u00b6 struct Size { enum class Type { Inherit = 0 , Medium = 1 , Small = 2 , XSmall = 3 , XXSmall = 4 , Large = 5 , XLarge = 6 , XXLarge = 7 , Percent = 8 , Points = 9 , Pixels = 10 , }; Type type = Type :: Inherit ; float value = 11.0f ; }; Weight \u00b6 enum Weight { Inherit = -1 , Normal = 400 , Bold = 700 }; Style \u00b6 enum class Style { Inherit , Normal , Italic }; Variant \u00b6 enum class Variant { Inherit , Normal , SmallCaps };","title":"Font"},{"location":"reference/foundation/font/#font","text":"Represents a font. Can be de-/serialized from/to JSON.","title":"Font"},{"location":"reference/foundation/font/#example","text":"#include <bdn/Font.h> #include <bdn/Json.h> int main () { bdn :: Font font ; font . family = \"Arial\" ; font . size . type = Font :: Size :: Type :: Pixels ; font . size . value = 32 ; bdn :: json j = font ; return 0 ; }","title":"Example"},{"location":"reference/foundation/font/#declaration","text":"namespace bdn { class Font }","title":"Declaration"},{"location":"reference/foundation/font/#conversion","text":"static Font fromAny(std::any anyFont) Converts an std::any to Font. Throws std::bad_any_cast if no conversion possible. std::any type calls Font Font(std::any_cast<Font>(any)) json (Font)std::any_cast<json>(any)","title":"Conversion"},{"location":"reference/foundation/font/#members","text":"std::string family The font family Size size The font size ( see Size ) Style style = Style::Inherit The font style Weight weight = Weight::Inherit The font weight. Variant variant = Variant::Inherit The font variant","title":"Members"},{"location":"reference/foundation/font/#inner-types","text":"","title":"Inner types"},{"location":"reference/foundation/font/#size","text":"struct Size { enum class Type { Inherit = 0 , Medium = 1 , Small = 2 , XSmall = 3 , XXSmall = 4 , Large = 5 , XLarge = 6 , XXLarge = 7 , Percent = 8 , Points = 9 , Pixels = 10 , }; Type type = Type :: Inherit ; float value = 11.0f ; };","title":"Size"},{"location":"reference/foundation/font/#weight","text":"enum Weight { Inherit = -1 , Normal = 400 , Bold = 700 };","title":"Weight"},{"location":"reference/foundation/font/#style","text":"enum class Style { Inherit , Normal , Italic };","title":"Style"},{"location":"reference/foundation/font/#variant","text":"enum class Variant { Inherit , Normal , SmallCaps };","title":"Variant"},{"location":"reference/foundation/global_stack/","text":"GlobalStack \u00b6 An implementation of a thread_local global static stack. Declaration \u00b6 namespace bdn { template < class T , T ( * defaultFunction )() = nullptr > class GlobalStack } Example \u00b6 #include <bdn/GlobalStack.h> using namespace bdn ; int defaultInt () { return 0 ; } int main () { using MyStack = GlobalStack < int , & defaultInt > ; std :: cout << MyStack :: top () << std :: endl ; // \"0\" MyStack :: push ( 10 ); std :: cout << MyStack :: top () << std :: endl ; // \"10\" MyStack :: pop (); std :: cout << MyStack :: top () << std :: endl ; // \"0\" } Template arguments \u00b6 T The type stored in the stack T(*defaultFunction)() A function pointer that is called if the stack is empty during a call to top() Accessing the stack \u00b6 static T& top() Returns the top entry of the current threads stack. If the stack is empty and a defaultFunction was set, a new entry will be pushed onto the stack by calling defaultFunction and pushing the result onto the stack. If no defaultFunction was set an std::runtime_error will be thrown. Changing the stack \u00b6 static void push(T&& entry) Pushed the entry to the top of the current threads stack static void pop() Removes the top entry from the the current threads stack.","title":"GlobalStack"},{"location":"reference/foundation/global_stack/#globalstack","text":"An implementation of a thread_local global static stack.","title":"GlobalStack"},{"location":"reference/foundation/global_stack/#declaration","text":"namespace bdn { template < class T , T ( * defaultFunction )() = nullptr > class GlobalStack }","title":"Declaration"},{"location":"reference/foundation/global_stack/#example","text":"#include <bdn/GlobalStack.h> using namespace bdn ; int defaultInt () { return 0 ; } int main () { using MyStack = GlobalStack < int , & defaultInt > ; std :: cout << MyStack :: top () << std :: endl ; // \"0\" MyStack :: push ( 10 ); std :: cout << MyStack :: top () << std :: endl ; // \"10\" MyStack :: pop (); std :: cout << MyStack :: top () << std :: endl ; // \"0\" }","title":"Example"},{"location":"reference/foundation/global_stack/#template-arguments","text":"T The type stored in the stack T(*defaultFunction)() A function pointer that is called if the stack is empty during a call to top()","title":"Template arguments"},{"location":"reference/foundation/global_stack/#accessing-the-stack","text":"static T& top() Returns the top entry of the current threads stack. If the stack is empty and a defaultFunction was set, a new entry will be pushed onto the stack by calling defaultFunction and pushing the result onto the stack. If no defaultFunction was set an std::runtime_error will be thrown.","title":"Accessing the stack"},{"location":"reference/foundation/global_stack/#changing-the-stack","text":"static void push(T&& entry) Pushed the entry to the top of the current threads stack static void pop() Removes the top entry from the the current threads stack.","title":"Changing the stack"},{"location":"reference/foundation/needs_init/","text":"NeedsInit \u00b6 NeedsInit implements a custom version of std::make_shared that calls the void init() member function of certain objects after construction is complete. Types \u00b6 class NeedsInit Helper type used in the constructor of a class to indicate that the custom version of make_shared should be called. namespace bdn { class NeedsInit {}; constexpr static const NeedsInit needsInit ; } struct has_init_method Helper type to determine if a class has a member function called init() at compile time. namespace bdn { template < typename T > struct has_init_method { private : typedef std :: true_type yes ; typedef std :: false_type no ; template < typename U > static auto test ( int ) -> decltype ( std :: declval < U > (). init (), yes ()); template < typename > static no test (...); public : static constexpr bool value = std :: is_same < decltype ( test < T > ( 0 )), yes >:: value ; }; } Functions \u00b6 std::shared_ptr<T> make_shared(bdn::NeedsInit needsInit = bdn::needsInit) Specialized version of std::make_shared<>() that calls init() after construction. namespace std { template < typename T , typename std :: enable_if < bdn :: has_init_method < T >:: value , int >:: type = 0 > std :: shared_ptr < T > make_shared ( bdn :: NeedsInit ni = bdn :: needsInit ) { auto t = std :: allocate_shared < T , std :: allocator < T >> ( std :: allocator < T > (), ni ); t -> init (); return t ; } } std::shared_ptr<T> make_shared(bdn::NeedsInit needsInit, Arguments... arguments) Specialized version of std::make_shared<>() that calls init() after construction. namespace std { template < typename T , typename ... Arguments > std :: shared_ptr < T > make_shared ( bdn :: NeedsInit needsInit , Arguments ... arguments ) { auto t = std :: allocate_shared < T , std :: allocator < T >> ( std :: allocator < T > (), needsInit , arguments ...); t -> init (); return t ; } }","title":"NeedsInit"},{"location":"reference/foundation/needs_init/#needsinit","text":"NeedsInit implements a custom version of std::make_shared that calls the void init() member function of certain objects after construction is complete.","title":"NeedsInit"},{"location":"reference/foundation/needs_init/#types","text":"class NeedsInit Helper type used in the constructor of a class to indicate that the custom version of make_shared should be called. namespace bdn { class NeedsInit {}; constexpr static const NeedsInit needsInit ; } struct has_init_method Helper type to determine if a class has a member function called init() at compile time. namespace bdn { template < typename T > struct has_init_method { private : typedef std :: true_type yes ; typedef std :: false_type no ; template < typename U > static auto test ( int ) -> decltype ( std :: declval < U > (). init (), yes ()); template < typename > static no test (...); public : static constexpr bool value = std :: is_same < decltype ( test < T > ( 0 )), yes >:: value ; }; }","title":"Types"},{"location":"reference/foundation/needs_init/#functions","text":"std::shared_ptr<T> make_shared(bdn::NeedsInit needsInit = bdn::needsInit) Specialized version of std::make_shared<>() that calls init() after construction. namespace std { template < typename T , typename std :: enable_if < bdn :: has_init_method < T >:: value , int >:: type = 0 > std :: shared_ptr < T > make_shared ( bdn :: NeedsInit ni = bdn :: needsInit ) { auto t = std :: allocate_shared < T , std :: allocator < T >> ( std :: allocator < T > (), ni ); t -> init (); return t ; } } std::shared_ptr<T> make_shared(bdn::NeedsInit needsInit, Arguments... arguments) Specialized version of std::make_shared<>() that calls init() after construction. namespace std { template < typename T , typename ... Arguments > std :: shared_ptr < T > make_shared ( bdn :: NeedsInit needsInit , Arguments ... arguments ) { auto t = std :: allocate_shared < T , std :: allocator < T >> ( std :: allocator < T > (), needsInit , arguments ...); t -> init (); return t ; } }","title":"Functions"},{"location":"reference/foundation/notifier/","text":"Notifier \u00b6 Notifies subscribing callback methods about an event synchronously. Declaration \u00b6 namespace bdn { template < class ... Arguments > class Notifier } Types \u00b6 using Subscription = size_t An ID referencing a specific subscription. using Target = std::function<void(Arguments...)> The type of a callback. Subscribing to a Notifier \u00b6 Subscription subscribe(Target target) Subscribes the function specified by target to the notifier and returns a Subscription value. The returned Subscription may be persisted by the caller to later unsubscribe from the subscription again. Notifier<Arguments...> operator+=(Target target) Convenience for adding a new subscription by using operator += . If you need to unsubscribe the subscriber later on, use subscribe instead. Unsubscribing from a Notifier \u00b6 void unsubscribe(Subscription subscription) Unsubscribe the given subscription. void unsubscribeAll() Unsubscribe all subscriptions. Note It is safe to unsubscribe during a notify() call Notifying Subscribers \u00b6 void notify( Arguments ... arguments) Notifies all subscribers. Passes the given arguments to each subscriber.","title":"Notifier"},{"location":"reference/foundation/notifier/#notifier","text":"Notifies subscribing callback methods about an event synchronously.","title":"Notifier"},{"location":"reference/foundation/notifier/#declaration","text":"namespace bdn { template < class ... Arguments > class Notifier }","title":"Declaration"},{"location":"reference/foundation/notifier/#types","text":"using Subscription = size_t An ID referencing a specific subscription. using Target = std::function<void(Arguments...)> The type of a callback.","title":"Types"},{"location":"reference/foundation/notifier/#subscribing-to-a-notifier","text":"Subscription subscribe(Target target) Subscribes the function specified by target to the notifier and returns a Subscription value. The returned Subscription may be persisted by the caller to later unsubscribe from the subscription again. Notifier<Arguments...> operator+=(Target target) Convenience for adding a new subscription by using operator += . If you need to unsubscribe the subscriber later on, use subscribe instead.","title":"Subscribing to a Notifier"},{"location":"reference/foundation/notifier/#unsubscribing-from-a-notifier","text":"void unsubscribe(Subscription subscription) Unsubscribe the given subscription. void unsubscribeAll() Unsubscribe all subscriptions. Note It is safe to unsubscribe during a notify() call","title":"Unsubscribing from a Notifier"},{"location":"reference/foundation/notifier/#notifying-subscribers","text":"void notify( Arguments ... arguments) Notifies all subscribers. Passes the given arguments to each subscriber.","title":"Notifying Subscribers"},{"location":"reference/foundation/path/","text":"path \u00b6 Provides functions to retrieve platform-specific directory paths. Note All functions that retrieve directory paths may return paths to directories that do not exist. After retrieving a path, make sure the directory exists. Declaration \u00b6 namespace bdn :: path Retrieving Directory Paths \u00b6 std::string temporaryDirectoryPath() Returns a path to the temporary (or caches) directory of the system. std::string applicationSupportDirectoryPath() Returns a path to the application support/application data directory for the current application. std::string documentDirectoryPath() Returns a path to a directory where user documents should be stored. This directory can either be application-specific (iOS, Android) or user-specific (e.g. macOS).","title":"path"},{"location":"reference/foundation/path/#path","text":"Provides functions to retrieve platform-specific directory paths. Note All functions that retrieve directory paths may return paths to directories that do not exist. After retrieving a path, make sure the directory exists.","title":"path"},{"location":"reference/foundation/path/#declaration","text":"namespace bdn :: path","title":"Declaration"},{"location":"reference/foundation/path/#retrieving-directory-paths","text":"std::string temporaryDirectoryPath() Returns a path to the temporary (or caches) directory of the system. std::string applicationSupportDirectoryPath() Returns a path to the application support/application data directory for the current application. std::string documentDirectoryPath() Returns a path to a directory where user documents should be stored. This directory can either be application-specific (iOS, Android) or user-specific (e.g. macOS).","title":"Retrieving Directory Paths"},{"location":"reference/foundation/point/","text":"Point \u00b6 Represents a two-dimensional point comprised of x and y floating point numbers with double precision. Declaration \u00b6 namespace bdn { struct Point } Public Member Variables \u00b6 double x = 0; A double representing the horizontal position of the Point object. Defaults to 0 . double y = 0; A double representing the vertical position of the Point object. Defaults to 0 . Creating a Point Object \u00b6 Point() Constructs a Point object with x and y initialized to 0 . Point(double x, double y) Constructs a Point object with the given x and y coordinates.","title":"Point"},{"location":"reference/foundation/point/#point","text":"Represents a two-dimensional point comprised of x and y floating point numbers with double precision.","title":"Point"},{"location":"reference/foundation/point/#declaration","text":"namespace bdn { struct Point }","title":"Declaration"},{"location":"reference/foundation/point/#public-member-variables","text":"double x = 0; A double representing the horizontal position of the Point object. Defaults to 0 . double y = 0; A double representing the vertical position of the Point object. Defaults to 0 .","title":"Public Member Variables"},{"location":"reference/foundation/point/#creating-a-point-object","text":"Point() Constructs a Point object with x and y initialized to 0 . Point(double x, double y) Constructs a Point object with the given x and y coordinates.","title":"Creating a Point Object"},{"location":"reference/foundation/property/","text":"Property \u00b6 Represents a property of a class. Properties provide you with a simple way to represent and observe arbitrary member variables of a class or struct. You may observe value changes using the onChange() method or bind two or more properties using the bind() method. See also: Property Guide Declaration \u00b6 namespace bdn { template < class ValType > class Property } Creating a Property Object \u00b6 Property() Constructs a property with a default-constructed value. Property(const Property &) = delete Property instances cannot be copy-constructed. However, they can be default-constructed and then assigned using operator = . See the Property Guide for details. Property(ValType value) Initializes the property's value with the given value. Property(const GetterSetter &getterSetter) Constructs a Property instance from a GetterSetter object. This can be used to define custom getter and setter methods. See the Property Guide for details. Property( StreamBacking &stream) Constructs a Property instance with the given Streaming object. template <class U> Property(const TransformBacking <ValType, U> &transform) Constructs a Property instance with the given Transform object. Getting and Modifying the Value \u00b6 ValType get() const Returns the current value. void set(const ValType &value, bool notify = true) Sets a new value. you can disable notifications via the notify argument. ValType operator*() const Returns the property's value. Intended for use with the auto keyword. operator ValType() const Returns the property's value when casting explicitly or implicitly. Accessing Non-Primitive Value Types \u00b6 template<...> const ValType operator->() const template<...> const typename backing_t::Proxy operator->() const template < typename U = ValType , typename std :: enable_if < overloadsArrowOperator < U >:: value , int >:: type = 0 > const ValType operator -> (); template < typename U = ValType , typename std :: enable_if <! overloadsArrowOperator < U >:: value , int >:: type = 0 > const typename backing_t :: Proxy operator -> () const ; Provides access to members of non-primitive pointer types. Binding Properties \u00b6 void bind(Property<ValType> &sourceProperty, BindMode bindMode = BindMode::bidirectional) Binds the property to the given source property. bindMode can be one of BindMode::unidirectional (one-way) or BindMode::bidirectional (two-way). If bindMode is set to BindMode::unidirectional , the property's value will be updated when the source property's value is changed. However, the source property's value will not be updated when the property's value is changed. If bindMode is set to BindMode::bidirectional , either property will be updated when the other's value is changed. This is the default behavior of bind() . Property bindings work synchronously. That is, the bound property will be updated immediately on the thread the value change has been invoked on. Being Notified of Changes \u00b6 Notifier &onChange() const Returns a Notifier which is called when the property value changes. Operators \u00b6 Property &operator=(const ValType &value) bool operator==(const ValType &value) const bool operator==(const char *cString) const bool operator!=(const ValType &value) const bool operator!=(const char *cString) const Property &operator=(const Property &otherProperty) Property operator+() const Property operator-() const Property operator+(const Property &otherProperty) const Property operator-(const Property &otherProperty) const Property operator*(const Property &otherProperty) const Property operator/(const Property &otherProperty) const Property operator%(const Property &otherProperty) const Property operator~() const Property operator&(const Property &otherProperty) const Property operator|(const Property &otherProperty) const Property operator^(const Property &otherProperty) const Property operator<<(const Property &otherProperty) const Property operator>>(const Property &otherProperty) const ValType operator+(const ValType &other) const ValType operator-(const ValType &other) const ValType operator*(const ValType &other) const ValType operator/(const ValType &other) const ValType operator%(const ValType &other) const ValType operator&(const ValType &other) const ValType operator|(const ValType &other) const ValType operator^(const ValType &other) const ValType operator<<(const ValType &other) const ValType operator>>(const ValType &other) const Property &operator+=(const Property &otherProperty) Property &operator-=(const Property &otherProperty) Property &operator*=(const Property &otherProperty) Property &operator/=(const Property &otherProperty) Property &operator%=(const Property &otherProperty) Property &operator&=(const Property &otherProperty) Property &operator|=(const Property &otherProperty) Property &operator^=(const Property &otherProperty) Property &operator<<=(const Property &otherProperty) Property &operator>>=(const Property &otherProperty)","title":"Property"},{"location":"reference/foundation/property/#property","text":"Represents a property of a class. Properties provide you with a simple way to represent and observe arbitrary member variables of a class or struct. You may observe value changes using the onChange() method or bind two or more properties using the bind() method. See also: Property Guide","title":"Property"},{"location":"reference/foundation/property/#declaration","text":"namespace bdn { template < class ValType > class Property }","title":"Declaration"},{"location":"reference/foundation/property/#creating-a-property-object","text":"Property() Constructs a property with a default-constructed value. Property(const Property &) = delete Property instances cannot be copy-constructed. However, they can be default-constructed and then assigned using operator = . See the Property Guide for details. Property(ValType value) Initializes the property's value with the given value. Property(const GetterSetter &getterSetter) Constructs a Property instance from a GetterSetter object. This can be used to define custom getter and setter methods. See the Property Guide for details. Property( StreamBacking &stream) Constructs a Property instance with the given Streaming object. template <class U> Property(const TransformBacking <ValType, U> &transform) Constructs a Property instance with the given Transform object.","title":"Creating a Property Object"},{"location":"reference/foundation/property/#getting-and-modifying-the-value","text":"ValType get() const Returns the current value. void set(const ValType &value, bool notify = true) Sets a new value. you can disable notifications via the notify argument. ValType operator*() const Returns the property's value. Intended for use with the auto keyword. operator ValType() const Returns the property's value when casting explicitly or implicitly.","title":"Getting and Modifying the Value"},{"location":"reference/foundation/property/#accessing-non-primitive-value-types","text":"template<...> const ValType operator->() const template<...> const typename backing_t::Proxy operator->() const template < typename U = ValType , typename std :: enable_if < overloadsArrowOperator < U >:: value , int >:: type = 0 > const ValType operator -> (); template < typename U = ValType , typename std :: enable_if <! overloadsArrowOperator < U >:: value , int >:: type = 0 > const typename backing_t :: Proxy operator -> () const ; Provides access to members of non-primitive pointer types.","title":"Accessing Non-Primitive Value Types"},{"location":"reference/foundation/property/#binding-properties","text":"void bind(Property<ValType> &sourceProperty, BindMode bindMode = BindMode::bidirectional) Binds the property to the given source property. bindMode can be one of BindMode::unidirectional (one-way) or BindMode::bidirectional (two-way). If bindMode is set to BindMode::unidirectional , the property's value will be updated when the source property's value is changed. However, the source property's value will not be updated when the property's value is changed. If bindMode is set to BindMode::bidirectional , either property will be updated when the other's value is changed. This is the default behavior of bind() . Property bindings work synchronously. That is, the bound property will be updated immediately on the thread the value change has been invoked on.","title":"Binding Properties"},{"location":"reference/foundation/property/#being-notified-of-changes","text":"Notifier &onChange() const Returns a Notifier which is called when the property value changes.","title":"Being Notified of Changes"},{"location":"reference/foundation/property/#operators","text":"Property &operator=(const ValType &value) bool operator==(const ValType &value) const bool operator==(const char *cString) const bool operator!=(const ValType &value) const bool operator!=(const char *cString) const Property &operator=(const Property &otherProperty) Property operator+() const Property operator-() const Property operator+(const Property &otherProperty) const Property operator-(const Property &otherProperty) const Property operator*(const Property &otherProperty) const Property operator/(const Property &otherProperty) const Property operator%(const Property &otherProperty) const Property operator~() const Property operator&(const Property &otherProperty) const Property operator|(const Property &otherProperty) const Property operator^(const Property &otherProperty) const Property operator<<(const Property &otherProperty) const Property operator>>(const Property &otherProperty) const ValType operator+(const ValType &other) const ValType operator-(const ValType &other) const ValType operator*(const ValType &other) const ValType operator/(const ValType &other) const ValType operator%(const ValType &other) const ValType operator&(const ValType &other) const ValType operator|(const ValType &other) const ValType operator^(const ValType &other) const ValType operator<<(const ValType &other) const ValType operator>>(const ValType &other) const Property &operator+=(const Property &otherProperty) Property &operator-=(const Property &otherProperty) Property &operator*=(const Property &otherProperty) Property &operator/=(const Property &otherProperty) Property &operator%=(const Property &otherProperty) Property &operator&=(const Property &otherProperty) Property &operator|=(const Property &otherProperty) Property &operator^=(const Property &otherProperty) Property &operator<<=(const Property &otherProperty) Property &operator>>=(const Property &otherProperty)","title":"Operators"},{"location":"reference/foundation/rect/","text":"Rect \u00b6 Represents a two-dimensional rectangle comprised of position and size represented by x , y , width , and height floating point numbers with double precision. Declaration \u00b6 namespace bdn { struct Rect } Public Member Variables \u00b6 double x = 0; A double representing the horizontal position of the Rect object. Defaults to 0 . double y = 0; A double representing the vertical position of the Rect object. Defaults to 0 . double width = 0; A double representing the width of the Rect object. Defaults to 0 . double height = 0; A double representing the height of the Rect object. Defaults to 0 . Creating a Rect Object \u00b6 Rect() Default-constructs a Rect object with x , y , width , and height initialized to 0 . Rect(const Point &pos, const Size &size) Constructs a Rect object with the given position and size. Rect(double x, double y, double width, double height) Constructs a Rect object with the given x , y , width , and height . Retrieving Position and Size \u00b6 Point position() const Returns the rect's position as a Point object. Size size() const Returns the rect's size as a Size object.","title":"Rect"},{"location":"reference/foundation/rect/#rect","text":"Represents a two-dimensional rectangle comprised of position and size represented by x , y , width , and height floating point numbers with double precision.","title":"Rect"},{"location":"reference/foundation/rect/#declaration","text":"namespace bdn { struct Rect }","title":"Declaration"},{"location":"reference/foundation/rect/#public-member-variables","text":"double x = 0; A double representing the horizontal position of the Rect object. Defaults to 0 . double y = 0; A double representing the vertical position of the Rect object. Defaults to 0 . double width = 0; A double representing the width of the Rect object. Defaults to 0 . double height = 0; A double representing the height of the Rect object. Defaults to 0 .","title":"Public Member Variables"},{"location":"reference/foundation/rect/#creating-a-rect-object","text":"Rect() Default-constructs a Rect object with x , y , width , and height initialized to 0 . Rect(const Point &pos, const Size &size) Constructs a Rect object with the given position and size. Rect(double x, double y, double width, double height) Constructs a Rect object with the given x , y , width , and height .","title":"Creating a Rect Object"},{"location":"reference/foundation/rect/#retrieving-position-and-size","text":"Point position() const Returns the rect's position as a Point object. Size size() const Returns the rect's size as a Size object.","title":"Retrieving Position and Size"},{"location":"reference/foundation/size/","text":"Size \u00b6 Represents a two-dimensional size comprised of width and height floating point numbers with double precision. Size objects are used throughout the framework to work with measurements and layouts. By default, a size in Boden is used to represent unscaled coordinates (points) and might be translated to physical pixels as required by the framework. Declaration \u00b6 namespace bdn { struct Size } Public Member Variables \u00b6 double width = 0; A double representing the width of the Size object. Defaults to 0 . double height = 0; A double representing the height of the Size object. Defaults to 0 . Creating a Size Object \u00b6 constexpr Size() Constructs a Size object with width and height initialized to 0 . constexpr Size(double width, double height) Constructs a Size object with the given width and height . Representing Non-Sizes \u00b6 static constexpr double componentNone(); Represents a size component set to a non-value. Non-values are represented as std::numeric_limits<double>::infinity() . static constexpr Size none() Returns a new Size object with width and height both initialized to componentNone() . Calculating with Sizes \u00b6 Size operator+(const Size &o) Adds the right hand size value to the left hand size value by performing component-wise addition. Size &operator+=(const Size &o) Adds the given right hand size value to the left hand size value by performing component-wise addition and stores the result in the left hand size value. Size operator-(const Size &o) Subtracts the right hand size value from the left hand size value by performing component-wise subtraction. Size &operator-=(const Size &o) Subtracts the given right hand size value from the left hand size value by performing component-wise addition and stores the result in the left hand size value.","title":"Size"},{"location":"reference/foundation/size/#size","text":"Represents a two-dimensional size comprised of width and height floating point numbers with double precision. Size objects are used throughout the framework to work with measurements and layouts. By default, a size in Boden is used to represent unscaled coordinates (points) and might be translated to physical pixels as required by the framework.","title":"Size"},{"location":"reference/foundation/size/#declaration","text":"namespace bdn { struct Size }","title":"Declaration"},{"location":"reference/foundation/size/#public-member-variables","text":"double width = 0; A double representing the width of the Size object. Defaults to 0 . double height = 0; A double representing the height of the Size object. Defaults to 0 .","title":"Public Member Variables"},{"location":"reference/foundation/size/#creating-a-size-object","text":"constexpr Size() Constructs a Size object with width and height initialized to 0 . constexpr Size(double width, double height) Constructs a Size object with the given width and height .","title":"Creating a Size Object"},{"location":"reference/foundation/size/#representing-non-sizes","text":"static constexpr double componentNone(); Represents a size component set to a non-value. Non-values are represented as std::numeric_limits<double>::infinity() . static constexpr Size none() Returns a new Size object with width and height both initialized to componentNone() .","title":"Representing Non-Sizes"},{"location":"reference/foundation/size/#calculating-with-sizes","text":"Size operator+(const Size &o) Adds the right hand size value to the left hand size value by performing component-wise addition. Size &operator+=(const Size &o) Adds the given right hand size value to the left hand size value by performing component-wise addition and stores the result in the left hand size value. Size operator-(const Size &o) Subtracts the right hand size value from the left hand size value by performing component-wise subtraction. Size &operator-=(const Size &o) Subtracts the given right hand size value from the left hand size value by performing component-wise addition and stores the result in the left hand size value.","title":"Calculating with Sizes"},{"location":"reference/foundation/stream_backing/","text":"StreamBacking \u00b6 Allows you to create a std::string property that chains multiple properties and values together. Declaration \u00b6 namespace bdn { class StreamBacking } Example \u00b6 #include <bdn/property/Property.h> using namespace bdn ; Property < int > integerProperty = 10 ; Property < std :: string > type = \"posts\" s ; Property < std :: string > streamingProperty ( StreamBacking () << \"There are \" s << integerProperty << \" \" << type ); std :: cout << streamingProperty . get () << std :: endl ; // \"There are 10 posts\" integerProperty = 42 ; type = \"messages\" s ; std :: cout << streamingProperty . get () << std :: endl ; // \"There are 42 messages\" Operators \u00b6 template <class T> StreamBacking &operator<<(const Property <T> &property) Appends a Property<T> property to the stream template <class T> StreamBacking &operator<<(T value) Appends a value T value to the stream","title":"StreamBacking"},{"location":"reference/foundation/stream_backing/#streambacking","text":"Allows you to create a std::string property that chains multiple properties and values together.","title":"StreamBacking"},{"location":"reference/foundation/stream_backing/#declaration","text":"namespace bdn { class StreamBacking }","title":"Declaration"},{"location":"reference/foundation/stream_backing/#example","text":"#include <bdn/property/Property.h> using namespace bdn ; Property < int > integerProperty = 10 ; Property < std :: string > type = \"posts\" s ; Property < std :: string > streamingProperty ( StreamBacking () << \"There are \" s << integerProperty << \" \" << type ); std :: cout << streamingProperty . get () << std :: endl ; // \"There are 10 posts\" integerProperty = 42 ; type = \"messages\" s ; std :: cout << streamingProperty . get () << std :: endl ; // \"There are 42 messages\"","title":"Example"},{"location":"reference/foundation/stream_backing/#operators","text":"template <class T> StreamBacking &operator<<(const Property <T> &property) Appends a Property<T> property to the stream template <class T> StreamBacking &operator<<(T value) Appends a value T value to the stream","title":"Operators"},{"location":"reference/foundation/string/","text":"String \u00b6 All string operations in the Boden Framework are based on UTF-8 std::string s. The String.h header file is provided to make working with std::string more convenient. Types \u00b6 The following types are deprecated and should no longer be used. namespace bdn { using String [[ deprecated ( \"Use std::string instead\" )]] = std :: string ; using StringView [[ deprecated ( \"Use std::string_view instead\" )]] = std :: string_view ; } C++20 Polyfills \u00b6 inline bool starts_with(const std::string &haystack, const std::string &needle) Returns whether haystack starts with needle . Implements a polyfill emulating the std::basic_string::starts_with() function which will be part of the C++20 standard. inline bool ends_with(const std::string &haystack, const std::string &needle) Returns whether haystack ends with needle . Implements a polyfill emulating the std::basic_string::ends_with() function which will be part of the C++20 standard. Conversion Functions \u00b6 std::string stringFromAny(const std::any& anyString) Converts an std::any to std::string. Throws std::bad_any_cast if no conversion possible. std::any type calls std::string std::string(std::any_cast<std::string>(any)) json (std::string)std::any_cast<json>(any) Convenience Functions \u00b6 std::string fromUtf32(const std::u32string &utf32String) Converts the given UTF-32 string to an UTF-8 string. std::string fromUtf16(const std::u16string &utf16String) Converts the given UTF-16 string to an UTF-8 string. std::tuple split(const StringView &view, std::string::value_type token) Splits the given string view using the specified token as a delimiter. void ltrim(std::string &s) Trims whitespace from the start of the given string. The trim operation is performed in place and modifies the given string. void rtrim(std::string &s) Trims whitespace from the end of the given string. The trim operation is performed in place and modifies the given string. void trim(std::string &s) Trims whitespace from the start and end of the given string. The trim operation is performed in place and modifies the given string. std::string ltrim_copy(std::string s) Trims whitespace from the start of the given string. The trim operation does not modify the given string, but returns a trimmed copy instead. std::string rtrim_copy(std::string s) Trims whitespace from the end of the given string. The trim operation does not modify the given string, but returns a trimmed copy instead. std::string trim_copy(std::string s) Trims whitespace from the start and end of the given string. The trim operation does not modify the given string, but returns a trimmed copy instead.","title":"String"},{"location":"reference/foundation/string/#string","text":"All string operations in the Boden Framework are based on UTF-8 std::string s. The String.h header file is provided to make working with std::string more convenient.","title":"String"},{"location":"reference/foundation/string/#types","text":"The following types are deprecated and should no longer be used. namespace bdn { using String [[ deprecated ( \"Use std::string instead\" )]] = std :: string ; using StringView [[ deprecated ( \"Use std::string_view instead\" )]] = std :: string_view ; }","title":"Types"},{"location":"reference/foundation/string/#c20-polyfills","text":"inline bool starts_with(const std::string &haystack, const std::string &needle) Returns whether haystack starts with needle . Implements a polyfill emulating the std::basic_string::starts_with() function which will be part of the C++20 standard. inline bool ends_with(const std::string &haystack, const std::string &needle) Returns whether haystack ends with needle . Implements a polyfill emulating the std::basic_string::ends_with() function which will be part of the C++20 standard.","title":"C++20 Polyfills"},{"location":"reference/foundation/string/#conversion-functions","text":"std::string stringFromAny(const std::any& anyString) Converts an std::any to std::string. Throws std::bad_any_cast if no conversion possible. std::any type calls std::string std::string(std::any_cast<std::string>(any)) json (std::string)std::any_cast<json>(any)","title":"Conversion Functions"},{"location":"reference/foundation/string/#convenience-functions","text":"std::string fromUtf32(const std::u32string &utf32String) Converts the given UTF-32 string to an UTF-8 string. std::string fromUtf16(const std::u16string &utf16String) Converts the given UTF-16 string to an UTF-8 string. std::tuple split(const StringView &view, std::string::value_type token) Splits the given string view using the specified token as a delimiter. void ltrim(std::string &s) Trims whitespace from the start of the given string. The trim operation is performed in place and modifies the given string. void rtrim(std::string &s) Trims whitespace from the end of the given string. The trim operation is performed in place and modifies the given string. void trim(std::string &s) Trims whitespace from the start and end of the given string. The trim operation is performed in place and modifies the given string. std::string ltrim_copy(std::string s) Trims whitespace from the start of the given string. The trim operation does not modify the given string, but returns a trimmed copy instead. std::string rtrim_copy(std::string s) Trims whitespace from the end of the given string. The trim operation does not modify the given string, but returns a trimmed copy instead. std::string trim_copy(std::string s) Trims whitespace from the start and end of the given string. The trim operation does not modify the given string, but returns a trimmed copy instead.","title":"Convenience Functions"},{"location":"reference/foundation/transform_backing/","text":"TransformBacking \u00b6 Allows you to create a Property that represents a custom transformation from another property's value. Declaration \u00b6 namespace bdn { template < class T , class U > class TransformBacking } Example \u00b6 using namespace bdn ; auto toFunc = []( int value ) -> std :: string { switch ( value ) { case 0 : return \"no\" s ; case 1 : return \"one\" s ; case 2 : return \"two\" s ; case 3 : return \"three\" s ; case 4 : return \"four\" s ; } std :: ostringstream s ; s << value ; return s . str (); }; auto fromFunc = []( std :: string value ) -> int { if ( value . empty ()) return 0 ; if ( value == \"no\" s ) return 0 ; if ( value == \"one\" s ) return 1 ; if ( value == \"two\" s ) return 2 ; if ( value == \"three\" s ) return 3 ; if ( value == \"four\" s ) return 4 ; int result = 0 ; std :: istringstream s ( value ); s >> result ; return result ; }; Property < int > integerProperty = 1 ; Property < std :: string > transformedProperty ( TransformBacking < std :: string , int > { test , toFunc , fromFunc } ); // transformedProperty now equals \"one\"s integerProperty = 42 ; // transformedProperty now equals \"42\"s transformedProperty = \"12345\" ; // integerProperty now equals 12345 Types \u00b6 using ToFunc = std::function<T(U)> using FromFunc = std::function<U(T)> Constructor \u00b6 TransformBacking(const Property <U> &p, ToFunc to, FromFunc from) Creates a TransformBacking object that can be passed to a Property . Whenever the Property<U>& p changes, that value of the Property<T> will be changed to reflect the value of the Property<U>& p based on the result of the Backing::ToFunc to and vice versa","title":"TransformBacking"},{"location":"reference/foundation/transform_backing/#transformbacking","text":"Allows you to create a Property that represents a custom transformation from another property's value.","title":"TransformBacking"},{"location":"reference/foundation/transform_backing/#declaration","text":"namespace bdn { template < class T , class U > class TransformBacking }","title":"Declaration"},{"location":"reference/foundation/transform_backing/#example","text":"using namespace bdn ; auto toFunc = []( int value ) -> std :: string { switch ( value ) { case 0 : return \"no\" s ; case 1 : return \"one\" s ; case 2 : return \"two\" s ; case 3 : return \"three\" s ; case 4 : return \"four\" s ; } std :: ostringstream s ; s << value ; return s . str (); }; auto fromFunc = []( std :: string value ) -> int { if ( value . empty ()) return 0 ; if ( value == \"no\" s ) return 0 ; if ( value == \"one\" s ) return 1 ; if ( value == \"two\" s ) return 2 ; if ( value == \"three\" s ) return 3 ; if ( value == \"four\" s ) return 4 ; int result = 0 ; std :: istringstream s ( value ); s >> result ; return result ; }; Property < int > integerProperty = 1 ; Property < std :: string > transformedProperty ( TransformBacking < std :: string , int > { test , toFunc , fromFunc } ); // transformedProperty now equals \"one\"s integerProperty = 42 ; // transformedProperty now equals \"42\"s transformedProperty = \"12345\" ; // integerProperty now equals 12345","title":"Example"},{"location":"reference/foundation/transform_backing/#types","text":"using ToFunc = std::function<T(U)> using FromFunc = std::function<U(T)>","title":"Types"},{"location":"reference/foundation/transform_backing/#constructor","text":"TransformBacking(const Property <U> &p, ToFunc to, FromFunc from) Creates a TransformBacking object that can be passed to a Property . Whenever the Property<U>& p changes, that value of the Property<T> will be changed to reflect the value of the Property<U>& p based on the result of the Backing::ToFunc to and vice versa","title":"Constructor"},{"location":"reference/net/http/","text":"HTTP \u00b6 Provides methods and types for working with HTTP(S) requests. Note Mobile platforms by default often disallow internet access, especially non-HTTPS requests. Make sure to specify configure_app_permissions(ALLOW_INTERNET ALLOW_HTTP) in your app's CMakeLists.txt Declaration \u00b6 namespace bdn :: net :: http { enum class Method { GET , POST , PUT , DELETE , HEAD , TRACE , OPTIONS , CONNECT }; std :: shared_ptr < HTTPResponse > request ( HTTPRequest request ); } Example \u00b6 #include <bdn/net/HTTP.h> // ... void handleResponse ( net :: HTTPResponse response ) { json j = json :: parse ( r -> data ); std :: cout << j . dump ( 1 ) << std :: endl ; } // ... net :: http :: request ({ net :: http :: Method :: GET , \"https://www.reddit.com/hot.json\" , & handleResponse }); Request \u00b6 void request( HTTPRequest request) Performs the given request asynchronously and immediately returns. The request's DoneHandler is called on the main thread once a response has been received or an error has occurred.","title":"HTTP"},{"location":"reference/net/http/#http","text":"Provides methods and types for working with HTTP(S) requests. Note Mobile platforms by default often disallow internet access, especially non-HTTPS requests. Make sure to specify configure_app_permissions(ALLOW_INTERNET ALLOW_HTTP) in your app's CMakeLists.txt","title":"HTTP"},{"location":"reference/net/http/#declaration","text":"namespace bdn :: net :: http { enum class Method { GET , POST , PUT , DELETE , HEAD , TRACE , OPTIONS , CONNECT }; std :: shared_ptr < HTTPResponse > request ( HTTPRequest request ); }","title":"Declaration"},{"location":"reference/net/http/#example","text":"#include <bdn/net/HTTP.h> // ... void handleResponse ( net :: HTTPResponse response ) { json j = json :: parse ( r -> data ); std :: cout << j . dump ( 1 ) << std :: endl ; } // ... net :: http :: request ({ net :: http :: Method :: GET , \"https://www.reddit.com/hot.json\" , & handleResponse });","title":"Example"},{"location":"reference/net/http/#request","text":"void request( HTTPRequest request) Performs the given request asynchronously and immediately returns. The request's DoneHandler is called on the main thread once a response has been received or an error has occurred.","title":"Request"},{"location":"reference/net/http_request/","text":"HTTPRequest \u00b6 Represents an HTTP(S) request. Use the http::request() method to perform an HTTP request. Declaration \u00b6 namespace bdn :: net { class HTTPRequest } Handler \u00b6 using DoneHandler = std::function<void(std::shared_ptr<HTTPResponse>)> Called once a response has been received or an error occurred. Constructor \u00b6 HTTPRequest(std::string requestUrl, DoneHandler requestDoneHandler) Creates a HTTP GET request with the given request URL and done handler. HTTPRequest( http::Method requestMethod, std::string requestUrl, DoneHandler requestDoneHandler) Creates a HTTP request with the specified request method.","title":"HTTPRequest"},{"location":"reference/net/http_request/#httprequest","text":"Represents an HTTP(S) request. Use the http::request() method to perform an HTTP request.","title":"HTTPRequest"},{"location":"reference/net/http_request/#declaration","text":"namespace bdn :: net { class HTTPRequest }","title":"Declaration"},{"location":"reference/net/http_request/#handler","text":"using DoneHandler = std::function<void(std::shared_ptr<HTTPResponse>)> Called once a response has been received or an error occurred.","title":"Handler"},{"location":"reference/net/http_request/#constructor","text":"HTTPRequest(std::string requestUrl, DoneHandler requestDoneHandler) Creates a HTTP GET request with the given request URL and done handler. HTTPRequest( http::Method requestMethod, std::string requestUrl, DoneHandler requestDoneHandler) Creates a HTTP request with the specified request method.","title":"Constructor"},{"location":"reference/net/http_response/","text":"HTTPResponse \u00b6 Represents a response to an HTTPRequest . Declaration \u00b6 namespace bdn :: net { class HTTPResponse } Fields \u00b6 HTTPRequest originalRequest The request that resulted in the given response. int responseCode The HTTP reponse code returned by the server. std::string url The actual URL. This might be different from the requested URL, e.g. due to redirects. std::string header The HTTP header returned by the server. std::string data The data in the HTTP response's body returned by the server.","title":"HTTPResponse"},{"location":"reference/net/http_response/#httpresponse","text":"Represents a response to an HTTPRequest .","title":"HTTPResponse"},{"location":"reference/net/http_response/#declaration","text":"namespace bdn :: net { class HTTPResponse }","title":"Declaration"},{"location":"reference/net/http_response/#fields","text":"HTTPRequest originalRequest The request that resulted in the given response. int responseCode The HTTP reponse code returned by the server. std::string url The actual URL. This might be different from the requested URL, e.g. due to redirects. std::string header The HTTP header returned by the server. std::string data The data in the HTTP response's body returned by the server.","title":"Fields"},{"location":"reference/ui/autocorrection_type/","text":"AutocorrectionType \u00b6 The type of autocorrection used by a TextField or other text input control. Definition \u00b6 namespace bdn :: ui { enum class AutocorrectionType { Default , No , Yes }; } Enum Values \u00b6 AutocorrectionType::Default The text control uses the default autocorrection behavior defined by the platform. AutocorrectionType::No The text control should not apply autocorrection and autocomplete while typing. Also, no typing suggestions should be displayed to the user. AutocorrectionType::Yes The text control should display typing suggestions and apply autocorrection and autocomplete while typing.","title":"AutocorrectionType"},{"location":"reference/ui/autocorrection_type/#autocorrectiontype","text":"The type of autocorrection used by a TextField or other text input control.","title":"AutocorrectionType"},{"location":"reference/ui/autocorrection_type/#definition","text":"namespace bdn :: ui { enum class AutocorrectionType { Default , No , Yes }; }","title":"Definition"},{"location":"reference/ui/autocorrection_type/#enum-values","text":"AutocorrectionType::Default The text control uses the default autocorrection behavior defined by the platform. AutocorrectionType::No The text control should not apply autocorrection and autocomplete while typing. Also, no typing suggestions should be displayed to the user. AutocorrectionType::Yes The text control should display typing suggestions and apply autocorrection and autocomplete while typing.","title":"Enum Values"},{"location":"reference/ui/button/","text":"Button \u00b6 A simple button with a text label. Declaration \u00b6 namespace bdn :: ui { class Button : public View } Example \u00b6 #include <bdn/ui/Button.h> // ... auto button = std :: make_shared < Button > (); button -> label = \"Click me!\" ; button -> onClick () += []( auto event ) { // Do something on submit }; Properties \u00b6 Property <std::string> label The button's label. Events \u00b6 Notifier <const ClickEvent &> &onClick() A notifier for click events. Subscribe to this notifier if you want to be notified when the user clicks the button. Relationships \u00b6 Inherits from View .","title":"Button"},{"location":"reference/ui/button/#button","text":"A simple button with a text label.","title":"Button"},{"location":"reference/ui/button/#declaration","text":"namespace bdn :: ui { class Button : public View }","title":"Declaration"},{"location":"reference/ui/button/#example","text":"#include <bdn/ui/Button.h> // ... auto button = std :: make_shared < Button > (); button -> label = \"Click me!\" ; button -> onClick () += []( auto event ) { // Do something on submit };","title":"Example"},{"location":"reference/ui/button/#properties","text":"Property <std::string> label The button's label.","title":"Properties"},{"location":"reference/ui/button/#events","text":"Notifier <const ClickEvent &> &onClick() A notifier for click events. Subscribe to this notifier if you want to be notified when the user clicks the button.","title":"Events"},{"location":"reference/ui/button/#relationships","text":"Inherits from View .","title":"Relationships"},{"location":"reference/ui/checkbox/","text":"Checkbox \u00b6 A control providing the user with an on/off choice. In contrast to Switch , Checkbox is commonly used in scenarios where the user's on or off choice does not take effect immediately and an additional confirmation is required for the setting to take effect, e.g. by pushing an OK button. If the target platform does not provide a native checkbox widget, a platform-specific substitution provided by the framework will be displayed instead. Declaration \u00b6 namespace bdn :: ui { class Checkbox : public View } Example \u00b6 #include <bdn/ui/Checkbox.h> // ... auto checkbox = std :: make_shared < Checkbox > (); checkbox -> label = \"Click me!\" ; checkbox -> state = TriState :: on ; checkbox -> onClick () += []( auto event ) { // Do something on submit }; Properties \u00b6 Property <std::string> label The checkbox's label. Property < TriState > state A TriState representing the checkbox's state. Note that Android does not support mixed state checkboxes. Checkboxes in mixed state will be displayed as off on Android. Property <bool> checked A boolean representing the checkbox's state. It mirrors and updates the state property when changed. Events \u00b6 Notifier <const ClickEvent &> &onClick() A notifier for click events. Subscribe to this notifier if you want to be notified when the user clicks the checkbox. Relationships \u00b6 Inherits from View .","title":"Checkbox"},{"location":"reference/ui/checkbox/#checkbox","text":"A control providing the user with an on/off choice. In contrast to Switch , Checkbox is commonly used in scenarios where the user's on or off choice does not take effect immediately and an additional confirmation is required for the setting to take effect, e.g. by pushing an OK button. If the target platform does not provide a native checkbox widget, a platform-specific substitution provided by the framework will be displayed instead.","title":"Checkbox"},{"location":"reference/ui/checkbox/#declaration","text":"namespace bdn :: ui { class Checkbox : public View }","title":"Declaration"},{"location":"reference/ui/checkbox/#example","text":"#include <bdn/ui/Checkbox.h> // ... auto checkbox = std :: make_shared < Checkbox > (); checkbox -> label = \"Click me!\" ; checkbox -> state = TriState :: on ; checkbox -> onClick () += []( auto event ) { // Do something on submit };","title":"Example"},{"location":"reference/ui/checkbox/#properties","text":"Property <std::string> label The checkbox's label. Property < TriState > state A TriState representing the checkbox's state. Note that Android does not support mixed state checkboxes. Checkboxes in mixed state will be displayed as off on Android. Property <bool> checked A boolean representing the checkbox's state. It mirrors and updates the state property when changed.","title":"Properties"},{"location":"reference/ui/checkbox/#events","text":"Notifier <const ClickEvent &> &onClick() A notifier for click events. Subscribe to this notifier if you want to be notified when the user clicks the checkbox.","title":"Events"},{"location":"reference/ui/checkbox/#relationships","text":"Inherits from View .","title":"Relationships"},{"location":"reference/ui/click_event/","text":"ClickEvent \u00b6 A click event as generated by e.g. a Button . Declaration \u00b6 namespace bdn :: ui { class ClickEvent : public ViewEvent } Relationships \u00b6 Inherits from: ViewEvent","title":"ClickEvent"},{"location":"reference/ui/click_event/#clickevent","text":"A click event as generated by e.g. a Button .","title":"ClickEvent"},{"location":"reference/ui/click_event/#declaration","text":"namespace bdn :: ui { class ClickEvent : public ViewEvent }","title":"Declaration"},{"location":"reference/ui/click_event/#relationships","text":"Inherits from: ViewEvent","title":"Relationships"},{"location":"reference/ui/container_view/","text":"ContainerView \u00b6 A view that can hold child views. Declaration \u00b6 namespace bdn :: ui { class ContainerView : public View } Example \u00b6 #include <bdn/ui/ContainerView.h> #include <bdn/ui/TextView.h> #include <bdn/ui/Button.h> // ... auto container = std :: make_shared < ContainerView > (); auto label = std :: make_shared < TextView > (); auto button = std :: make_shared < Button > (); container -> addChildView ( label ); container -> addChildView ( button ); Managing Child Views \u00b6 void addChildView(const std::shared_ptr< View > &childView) Adds a new child view to the container view. void removeChildView(const std::shared_ptr< View > &childView) Removes the given child view from the container view. void removeAllChildViews() Removes all child views from the container view. std::optional<std::vector::size_type> childIndex(const std::shared_ptr<View>& child) Returns the index of child inside the list of child views or std::nullopt if the child cannot be found. Relationships \u00b6 Inherits from: View","title":"ContainerView"},{"location":"reference/ui/container_view/#containerview","text":"A view that can hold child views.","title":"ContainerView"},{"location":"reference/ui/container_view/#declaration","text":"namespace bdn :: ui { class ContainerView : public View }","title":"Declaration"},{"location":"reference/ui/container_view/#example","text":"#include <bdn/ui/ContainerView.h> #include <bdn/ui/TextView.h> #include <bdn/ui/Button.h> // ... auto container = std :: make_shared < ContainerView > (); auto label = std :: make_shared < TextView > (); auto button = std :: make_shared < Button > (); container -> addChildView ( label ); container -> addChildView ( button );","title":"Example"},{"location":"reference/ui/container_view/#managing-child-views","text":"void addChildView(const std::shared_ptr< View > &childView) Adds a new child view to the container view. void removeChildView(const std::shared_ptr< View > &childView) Removes the given child view from the container view. void removeAllChildViews() Removes all child views from the container view. std::optional<std::vector::size_type> childIndex(const std::shared_ptr<View>& child) Returns the index of child inside the list of child views or std::nullopt if the child cannot be found.","title":"Managing Child Views"},{"location":"reference/ui/container_view/#relationships","text":"Inherits from: View","title":"Relationships"},{"location":"reference/ui/core_less/","text":"CoreLess \u00b6 Helper class allowing you to easily create your own platform-independent composite views without having to create a specialized ViewCore . Declaration \u00b6 namespace bdn :: ui { template < class BASE > class CoreLess : public BASE } Example \u00b6 #include <bdn/ui/CoreLess.h> #include <bdn/ui/ContainerView.h> #include <bdn/ui/Label.h> using namespace bdn :: ui ; class MyCustomView : public CoreLess < ContainerView > { public : using CoreLess < ContainerView >:: CoreLess ; void init () override { _firstLabel = std :: make_shared < Label > (); _firstLabel -> text = \"Hello\" ; _secondLabel = std :: make_shared < Label > (); _secondLabel -> text = \"World\" ; addChildView ( _firstLabel ); addChildView ( _secondLabel ); } private : std :: shared_ptr < Label > _firstLabel ; std :: shared_ptr < Label > _secondLabel ; }; void test () { auto myCustomView = std :: make_shared < MyCustomView > ( needsInit ); // ... } Constuctor \u00b6 explicit CoreLess(bdn::NeedsInit, std::shared_ptr viewCoreFactory = nullptr) Expects a bdn::NeedsInit so that make_shared is used which will automatically call the init() function. Virtual methods \u00b6 virtual void init() = 0 Override the init function to create children. This is needed because ContainerView::addChildView() uses shared_from_this() which is not available during construction.","title":"CoreLess"},{"location":"reference/ui/core_less/#coreless","text":"Helper class allowing you to easily create your own platform-independent composite views without having to create a specialized ViewCore .","title":"CoreLess"},{"location":"reference/ui/core_less/#declaration","text":"namespace bdn :: ui { template < class BASE > class CoreLess : public BASE }","title":"Declaration"},{"location":"reference/ui/core_less/#example","text":"#include <bdn/ui/CoreLess.h> #include <bdn/ui/ContainerView.h> #include <bdn/ui/Label.h> using namespace bdn :: ui ; class MyCustomView : public CoreLess < ContainerView > { public : using CoreLess < ContainerView >:: CoreLess ; void init () override { _firstLabel = std :: make_shared < Label > (); _firstLabel -> text = \"Hello\" ; _secondLabel = std :: make_shared < Label > (); _secondLabel -> text = \"World\" ; addChildView ( _firstLabel ); addChildView ( _secondLabel ); } private : std :: shared_ptr < Label > _firstLabel ; std :: shared_ptr < Label > _secondLabel ; }; void test () { auto myCustomView = std :: make_shared < MyCustomView > ( needsInit ); // ... }","title":"Example"},{"location":"reference/ui/core_less/#constuctor","text":"explicit CoreLess(bdn::NeedsInit, std::shared_ptr viewCoreFactory = nullptr) Expects a bdn::NeedsInit so that make_shared is used which will automatically call the init() function.","title":"Constuctor"},{"location":"reference/ui/core_less/#virtual-methods","text":"virtual void init() = 0 Override the init function to create children. This is needed because ContainerView::addChildView() uses shared_from_this() which is not available during construction.","title":"Virtual methods"},{"location":"reference/ui/image_view/","text":"ImageView \u00b6 Displays an image on the user interface. Declaration \u00b6 namespace bdn :: ui { class ImageView : public View } Example \u00b6 #include <bdn/ui/ImageView.h> // ... auto imageView = std :: make_shared < ImageView > (); imageView -> url = ' https : //via.placeholder.com/350x150'; Properties \u00b6 Property<std::string> url The URL of the image to be displayed. ( see Using resources ) Relationships \u00b6 Inherits from View .","title":"ImageView"},{"location":"reference/ui/image_view/#imageview","text":"Displays an image on the user interface.","title":"ImageView"},{"location":"reference/ui/image_view/#declaration","text":"namespace bdn :: ui { class ImageView : public View }","title":"Declaration"},{"location":"reference/ui/image_view/#example","text":"#include <bdn/ui/ImageView.h> // ... auto imageView = std :: make_shared < ImageView > (); imageView -> url = ' https : //via.placeholder.com/350x150';","title":"Example"},{"location":"reference/ui/image_view/#properties","text":"Property<std::string> url The URL of the image to be displayed. ( see Using resources )","title":"Properties"},{"location":"reference/ui/image_view/#relationships","text":"Inherits from View .","title":"Relationships"},{"location":"reference/ui/label/","text":"Label \u00b6 A read-only text label. Declaration \u00b6 namespace bdn :: ui { class Label : public View } Example \u00b6 #include <bdn/ui/Label.h> // ... auto label = std :: make_shared < Label > (); label -> text = \"Hello World\" ; Properties \u00b6 Property < Text > text The label's text. Property <bool> wrap If true, the text will wrap if it exceeds the available width. Defaults to false Property < TextOverflow > textOverflow Specifies the way text is cut if it does not fit inside the view. Defaults to TextOverflow::EllipsisTail . Events \u00b6 Notifier <const std::string &> &onLinkClick() A notifier that is triggered when the user clicks a link. Relationships \u00b6 Inherits from: View","title":"Label"},{"location":"reference/ui/label/#label","text":"A read-only text label.","title":"Label"},{"location":"reference/ui/label/#declaration","text":"namespace bdn :: ui { class Label : public View }","title":"Declaration"},{"location":"reference/ui/label/#example","text":"#include <bdn/ui/Label.h> // ... auto label = std :: make_shared < Label > (); label -> text = \"Hello World\" ;","title":"Example"},{"location":"reference/ui/label/#properties","text":"Property < Text > text The label's text. Property <bool> wrap If true, the text will wrap if it exceeds the available width. Defaults to false Property < TextOverflow > textOverflow Specifies the way text is cut if it does not fit inside the view. Defaults to TextOverflow::EllipsisTail .","title":"Properties"},{"location":"reference/ui/label/#events","text":"Notifier <const std::string &> &onLinkClick() A notifier that is triggered when the user clicks a link.","title":"Events"},{"location":"reference/ui/label/#relationships","text":"Inherits from: View","title":"Relationships"},{"location":"reference/ui/layout/","text":"Layout \u00b6 Base class for layout implementations. Declaration \u00b6 namespace bdn :: ui { class Layout } Register \u00b6 virtual void registerView( View *view) = 0 Registers a View with the Layout. Called when the view is added to a hierarchy. virtual void unregisterView( View *view) = 0 Unregisters a View from the Layout. Called when the view is removed from its hierarchy. Update \u00b6 virtual void markDirty( View *view) = 0 Called when a View is dirty. virtual void updateStylesheet( View *view) = 0 Called when a View 's stylesheet changes. Apply \u00b6 virtual void layout( View *view) = 0 Called when it's time to layout a View .","title":"Layout"},{"location":"reference/ui/layout/#layout","text":"Base class for layout implementations.","title":"Layout"},{"location":"reference/ui/layout/#declaration","text":"namespace bdn :: ui { class Layout }","title":"Declaration"},{"location":"reference/ui/layout/#register","text":"virtual void registerView( View *view) = 0 Registers a View with the Layout. Called when the view is added to a hierarchy. virtual void unregisterView( View *view) = 0 Unregisters a View from the Layout. Called when the view is removed from its hierarchy.","title":"Register"},{"location":"reference/ui/layout/#update","text":"virtual void markDirty( View *view) = 0 Called when a View is dirty. virtual void updateStylesheet( View *view) = 0 Called when a View 's stylesheet changes.","title":"Update"},{"location":"reference/ui/layout/#apply","text":"virtual void layout( View *view) = 0 Called when it's time to layout a View .","title":"Apply"},{"location":"reference/ui/list_view/","text":"ListView \u00b6 A view displaying items in a scrollable single-column list. See also: ListViewDataSource . Declaration \u00b6 namespace bdn :: ui { class ListView : public View } Example \u00b6 #include <bdn/ui/ListView.h> ... auto listView = std :: make_shared < ListView > (); listView -> dataSource = std :: make_shared < MyDataSource > (); listView -> reloadData (); Properties \u00b6 Property <std::shared_ptr< ListViewDataSource >> dataSource The data source of the list. Property <std::optional<size_t>> selectedRowIndex The currently selected row index. Reloading the List's Data \u00b6 void reloadData() Reloads the list's data from its data source. Swipe to refresh \u00b6 Property <bool> enableRefresh Enables refresh on swipe down. Notifier <> &onRefresh() Signals that the user has requested the List to reload its data. void refreshDone() Finishes/hides the refresh animation if it was triggered by the user. Swipe to delete \u00b6 Property <bool> enableSwipeToDelete Enables deletion when swiping an item left. Notifier <size_t> &onDelete() Signals that the user has requested the deletion of an element. The size_t argument specifies the location of the element to be deleted. The ListView automatically updates itself after the notification is processed, failure to update the datasource results in undefined behaviour. Relationships \u00b6 Inherits from: View","title":"ListView"},{"location":"reference/ui/list_view/#listview","text":"A view displaying items in a scrollable single-column list. See also: ListViewDataSource .","title":"ListView"},{"location":"reference/ui/list_view/#declaration","text":"namespace bdn :: ui { class ListView : public View }","title":"Declaration"},{"location":"reference/ui/list_view/#example","text":"#include <bdn/ui/ListView.h> ... auto listView = std :: make_shared < ListView > (); listView -> dataSource = std :: make_shared < MyDataSource > (); listView -> reloadData ();","title":"Example"},{"location":"reference/ui/list_view/#properties","text":"Property <std::shared_ptr< ListViewDataSource >> dataSource The data source of the list. Property <std::optional<size_t>> selectedRowIndex The currently selected row index.","title":"Properties"},{"location":"reference/ui/list_view/#reloading-the-lists-data","text":"void reloadData() Reloads the list's data from its data source.","title":"Reloading the List's Data"},{"location":"reference/ui/list_view/#swipe-to-refresh","text":"Property <bool> enableRefresh Enables refresh on swipe down. Notifier <> &onRefresh() Signals that the user has requested the List to reload its data. void refreshDone() Finishes/hides the refresh animation if it was triggered by the user.","title":"Swipe to refresh"},{"location":"reference/ui/list_view/#swipe-to-delete","text":"Property <bool> enableSwipeToDelete Enables deletion when swiping an item left. Notifier <size_t> &onDelete() Signals that the user has requested the deletion of an element. The size_t argument specifies the location of the element to be deleted. The ListView automatically updates itself after the notification is processed, failure to update the datasource results in undefined behaviour.","title":"Swipe to delete"},{"location":"reference/ui/list_view/#relationships","text":"Inherits from: View","title":"Relationships"},{"location":"reference/ui/list_view_data_source/","text":"ListViewDataSource \u00b6 An abstract base class for a ListView 's data source. To implement a custom list view data source, inherit from ListViewDataSource and implement numberOfRows() , viewForRowIndex() , and heightForRowIndex() . See the example below for reference. Declaration \u00b6 namespace bdn :: ui { class ListViewDataSource } Example \u00b6 #include <bdn/String.h> #include <bdn/ui/ListView.h> #include <bdn/ui/ListViewDataSource.h> class MyDataSource : public bdn :: ListViewDataSource { public : std :: array < std :: string , 2 > _data = { \"This is a test\" , \"With only two lines of text\" }; size_t numberOfRows ( const std :: shared_ptr < ListView >& ) override { return 2 ; } std :: shared_ptr < View > viewForRowIndex ( const std :: shared_ptr < ListView >& , size_t rowIndex , std :: shared_ptr < bdn :: View > reusableView ) override { auto label = std :: dynamic_pointer_cast < bdn :: Label > ( reusableView ); if ( ! label ) { label = std :: make_shared < bdn :: Label > (); } label -> text = _data [ rowIndex ];; return std :: dynamic_pointer_cast < bdn :: View > ( label ); } float heightForRowIndex ( const std :: shared_ptr < ListView >& , size_t rowIndex ) override { return 25 ; } }; // ... auto listView = std :: make_shared < bdn :: ListView > (); listView -> dataSource = std :: make_shared < MyDataSource > (); listView -> reloadData (); Implementing a Data Source \u00b6 virtual size_t numberOfRows(const std::shared_ptr< ListView >& listView) = 0 Return the number of available rows in your data source implementation. virtual std::shared_ptr< View > viewForRowIndex(const std::shared_ptr< ListView >& listView, size_t rowIndex, std::shared_ptr< View > reusableView) = 0 Return the item view for the given row index in your data source implementation. virtual float heightForRowIndex(const std::shared_ptr< ListView >& listView, size_t rowIndex) = 0 Return the height of the row at the given row index in your data source implementation. virtual bool shouldSelectRow(const std::shared_ptr< ListView >& listView, size_t rowIndex) Return whether the user can select the specified row. The default implementation returns true .","title":"ListViewDataSource"},{"location":"reference/ui/list_view_data_source/#listviewdatasource","text":"An abstract base class for a ListView 's data source. To implement a custom list view data source, inherit from ListViewDataSource and implement numberOfRows() , viewForRowIndex() , and heightForRowIndex() . See the example below for reference.","title":"ListViewDataSource"},{"location":"reference/ui/list_view_data_source/#declaration","text":"namespace bdn :: ui { class ListViewDataSource }","title":"Declaration"},{"location":"reference/ui/list_view_data_source/#example","text":"#include <bdn/String.h> #include <bdn/ui/ListView.h> #include <bdn/ui/ListViewDataSource.h> class MyDataSource : public bdn :: ListViewDataSource { public : std :: array < std :: string , 2 > _data = { \"This is a test\" , \"With only two lines of text\" }; size_t numberOfRows ( const std :: shared_ptr < ListView >& ) override { return 2 ; } std :: shared_ptr < View > viewForRowIndex ( const std :: shared_ptr < ListView >& , size_t rowIndex , std :: shared_ptr < bdn :: View > reusableView ) override { auto label = std :: dynamic_pointer_cast < bdn :: Label > ( reusableView ); if ( ! label ) { label = std :: make_shared < bdn :: Label > (); } label -> text = _data [ rowIndex ];; return std :: dynamic_pointer_cast < bdn :: View > ( label ); } float heightForRowIndex ( const std :: shared_ptr < ListView >& , size_t rowIndex ) override { return 25 ; } }; // ... auto listView = std :: make_shared < bdn :: ListView > (); listView -> dataSource = std :: make_shared < MyDataSource > (); listView -> reloadData ();","title":"Example"},{"location":"reference/ui/list_view_data_source/#implementing-a-data-source","text":"virtual size_t numberOfRows(const std::shared_ptr< ListView >& listView) = 0 Return the number of available rows in your data source implementation. virtual std::shared_ptr< View > viewForRowIndex(const std::shared_ptr< ListView >& listView, size_t rowIndex, std::shared_ptr< View > reusableView) = 0 Return the item view for the given row index in your data source implementation. virtual float heightForRowIndex(const std::shared_ptr< ListView >& listView, size_t rowIndex) = 0 Return the height of the row at the given row index in your data source implementation. virtual bool shouldSelectRow(const std::shared_ptr< ListView >& listView, size_t rowIndex) Return whether the user can select the specified row. The default implementation returns true .","title":"Implementing a Data Source"},{"location":"reference/ui/navigation_view/","text":"NavigationView \u00b6 Provides the user with a way to navigate between a number of different views where only one view is visible at a time. Declaration \u00b6 namespace bdn :: ui { class NavigationView : public View } Reacting to Changes \u00b6 The NavigationView signals the state of a view via its visible property. When a new view is pushed, its visible property is set to true , while the previously visible view's visible property is set to false . The same happens if e.g. the back button is clicked by the user. Example \u00b6 #include <bdn/ui/Button.h> #include <bdn/ui/NavigationView.h> // ... auto navigationView = std :: make_shared < NavigationView > (); auto firstButton = std :: make_shared < Button > (); firstButton -> label = \"Click me!\" ; firstButton -> onClick () += [ = ]( auto ) { auto secondButton = std :: make_shared < Button > (); secondButton -> label = \"Go back\" ; secondButton -> onClick () += [ = ]( auto ) { navigationView -> popView (); } navigationView -> pushView ( secondButton , \"Second Page\" ); }; navigationView -> pushView ( firstButton , \"First Page\" ); View manipulation \u00b6 void pushView(std::shared_ptr< View > view, std::string title) Pushes the given view with the specified title to the top of the stack. void popView() Pops the topmost view from the stack. Relationships \u00b6 Inherits from View .","title":"NavigationView"},{"location":"reference/ui/navigation_view/#navigationview","text":"Provides the user with a way to navigate between a number of different views where only one view is visible at a time.","title":"NavigationView"},{"location":"reference/ui/navigation_view/#declaration","text":"namespace bdn :: ui { class NavigationView : public View }","title":"Declaration"},{"location":"reference/ui/navigation_view/#reacting-to-changes","text":"The NavigationView signals the state of a view via its visible property. When a new view is pushed, its visible property is set to true , while the previously visible view's visible property is set to false . The same happens if e.g. the back button is clicked by the user.","title":"Reacting to Changes"},{"location":"reference/ui/navigation_view/#example","text":"#include <bdn/ui/Button.h> #include <bdn/ui/NavigationView.h> // ... auto navigationView = std :: make_shared < NavigationView > (); auto firstButton = std :: make_shared < Button > (); firstButton -> label = \"Click me!\" ; firstButton -> onClick () += [ = ]( auto ) { auto secondButton = std :: make_shared < Button > (); secondButton -> label = \"Go back\" ; secondButton -> onClick () += [ = ]( auto ) { navigationView -> popView (); } navigationView -> pushView ( secondButton , \"Second Page\" ); }; navigationView -> pushView ( firstButton , \"First Page\" );","title":"Example"},{"location":"reference/ui/navigation_view/#view-manipulation","text":"void pushView(std::shared_ptr< View > view, std::string title) Pushes the given view with the specified title to the top of the stack. void popView() Pops the topmost view from the stack.","title":"View manipulation"},{"location":"reference/ui/navigation_view/#relationships","text":"Inherits from View .","title":"Relationships"},{"location":"reference/ui/return_key_type/","text":"ReturnKeyType \u00b6 The type of return key to use when displaying a software keyboard. Definition \u00b6 namespace bdn :: ui { enum class ReturnKeyType { Default , // Android: IME_ACTION_UNSPECIFIED, iOS: UIReturnKeyDefault Continue , // Android: N/A, iOS: UIReturnKeyContinue Done , // Android: IME_ACTION_DONE, iOS: UIReturnKeyDone EmergencyCall , // Android: N/A, iOS: UIReturnKeyEmergencyCall Go , // Android: IME_ACTION_GO, iOS: UIReturnKeyGo Join , // Android: N/A, iOS: UIReturnKeyJoin Next , // Android: IME_ACTION_NEXT, iOS: UIReturnKeyNext None , // Android: IME_ACTION_NONE, iOS: N/A Previous , // Android: IME_ACTION_PREVIOUS, iOS: N/A Route , // Android: N/A, iOS: UIReturnKeyRoute Search , // Android: IME_ACTION_SEARCH, iOS: UIReturnKeySearch Send // Android: IME_ACTION_SEND, iOS: UIReturnKeySend }; } Enum Values \u00b6 ReturnKeyType::Default Use case: Let the operating system decide what's the most appropriate title for the return key button. Corresponds to UIReturnKeyDefault on iOS and to IME_ACTION_UNSPECIFIED on Android. Shows \"return\" in the return key button on iOS. Most likely shows \"return\" or \"done\" in the return key button on Android. ReturnKeyType::Continue Use case: Continue to the next page when entering text while navigating. Corresponds to UIReturnKeyContinue on iOS. Not supported on Android (falls back to IME_ACTION_UNSPECIFIED ). Shows \"Continue\" in the return key button on iOS. ReturnKeyType::Done Use case: Complete a form or other group of inputs. Corresponds to UIReturnKeyDone on iOS and to IME_ACTION_DONE on Android. Shows \"Done\" as the return key button's title. ReturnKeyType::EmergencyCall Use case: Call emergency services. Corresponds to UIReturnKeyEmergencyCall on iOS. Not supported on Android (falls back to IME_ACTION_UNSPECIFIED ). Shows \"Emergency Call\" as the return key button's title. ReturnKeyType::Go Use case: Go to a given destination entered in a form field. Corresponds to UIReturnKeyTypeGo on iOS and to IME_ACTION_GO on Android. The title displayed in the return key button is \"Go\". ReturnKeyType::Join Use case: Join something, e.g. a wireless network. Corresponds to UIReturnKeyTypeJoin on iOS. Not supported on Android (falls back to IME_ACTION_UNSPECIFIED ). The return key button displays \"Join\". ReturnKeyType::Next Use case: Move to the next input source. Corresponds to UIReturnKeyTypeNext on iOS and to IME_ACTION_NEXT on Android. The return key button displays \"Next\". ReturnKeyType::None Use case: It doesn't make sense to display a return key for the given input. Unsupported on iOS. Corresponds to IME_ACTION_NONE on Android. The software keyboard will most likely display a return key. ReturnKeyType::Previous Use case: Return to the previous input source, e.g. in a form or other group of input sources. Unsupported on iOS. Corresponds to IME_ACTION_PREVIOUS on Android. The software keyboard will display a return button indicating backwards movement, e.g. a left-facing arrow. ReturnKeyType::Route Use case: Provide driving directions or other route information. Corresponds to UIReturnKeyTypeRoute on iOS. Not supported on Android. Displays \"Route\" in the return key button. ReturnKeyType::Search Use case: Search for something. Corresponds to UIReturnKeySearch on iOS and to IME_ACTION_SEARCH on Android. Shows \"Search\" as the return key button's title on iOS and displays a magnifying glass icon on Android. ReturnKeyType::Send Use case: Send something, e.g. a message. Corresponds to UIReturnKeySend on iOS and to IME_ACTION_SEND on Android. Shows \"Send\" as the return key button's title on iOS and displays an icon representing a \"send\" action (e.g. a paper plane) on Android.","title":"ReturnKeyType"},{"location":"reference/ui/return_key_type/#returnkeytype","text":"The type of return key to use when displaying a software keyboard.","title":"ReturnKeyType"},{"location":"reference/ui/return_key_type/#definition","text":"namespace bdn :: ui { enum class ReturnKeyType { Default , // Android: IME_ACTION_UNSPECIFIED, iOS: UIReturnKeyDefault Continue , // Android: N/A, iOS: UIReturnKeyContinue Done , // Android: IME_ACTION_DONE, iOS: UIReturnKeyDone EmergencyCall , // Android: N/A, iOS: UIReturnKeyEmergencyCall Go , // Android: IME_ACTION_GO, iOS: UIReturnKeyGo Join , // Android: N/A, iOS: UIReturnKeyJoin Next , // Android: IME_ACTION_NEXT, iOS: UIReturnKeyNext None , // Android: IME_ACTION_NONE, iOS: N/A Previous , // Android: IME_ACTION_PREVIOUS, iOS: N/A Route , // Android: N/A, iOS: UIReturnKeyRoute Search , // Android: IME_ACTION_SEARCH, iOS: UIReturnKeySearch Send // Android: IME_ACTION_SEND, iOS: UIReturnKeySend }; }","title":"Definition"},{"location":"reference/ui/return_key_type/#enum-values","text":"ReturnKeyType::Default Use case: Let the operating system decide what's the most appropriate title for the return key button. Corresponds to UIReturnKeyDefault on iOS and to IME_ACTION_UNSPECIFIED on Android. Shows \"return\" in the return key button on iOS. Most likely shows \"return\" or \"done\" in the return key button on Android. ReturnKeyType::Continue Use case: Continue to the next page when entering text while navigating. Corresponds to UIReturnKeyContinue on iOS. Not supported on Android (falls back to IME_ACTION_UNSPECIFIED ). Shows \"Continue\" in the return key button on iOS. ReturnKeyType::Done Use case: Complete a form or other group of inputs. Corresponds to UIReturnKeyDone on iOS and to IME_ACTION_DONE on Android. Shows \"Done\" as the return key button's title. ReturnKeyType::EmergencyCall Use case: Call emergency services. Corresponds to UIReturnKeyEmergencyCall on iOS. Not supported on Android (falls back to IME_ACTION_UNSPECIFIED ). Shows \"Emergency Call\" as the return key button's title. ReturnKeyType::Go Use case: Go to a given destination entered in a form field. Corresponds to UIReturnKeyTypeGo on iOS and to IME_ACTION_GO on Android. The title displayed in the return key button is \"Go\". ReturnKeyType::Join Use case: Join something, e.g. a wireless network. Corresponds to UIReturnKeyTypeJoin on iOS. Not supported on Android (falls back to IME_ACTION_UNSPECIFIED ). The return key button displays \"Join\". ReturnKeyType::Next Use case: Move to the next input source. Corresponds to UIReturnKeyTypeNext on iOS and to IME_ACTION_NEXT on Android. The return key button displays \"Next\". ReturnKeyType::None Use case: It doesn't make sense to display a return key for the given input. Unsupported on iOS. Corresponds to IME_ACTION_NONE on Android. The software keyboard will most likely display a return key. ReturnKeyType::Previous Use case: Return to the previous input source, e.g. in a form or other group of input sources. Unsupported on iOS. Corresponds to IME_ACTION_PREVIOUS on Android. The software keyboard will display a return button indicating backwards movement, e.g. a left-facing arrow. ReturnKeyType::Route Use case: Provide driving directions or other route information. Corresponds to UIReturnKeyTypeRoute on iOS. Not supported on Android. Displays \"Route\" in the return key button. ReturnKeyType::Search Use case: Search for something. Corresponds to UIReturnKeySearch on iOS and to IME_ACTION_SEARCH on Android. Shows \"Search\" as the return key button's title on iOS and displays a magnifying glass icon on Android. ReturnKeyType::Send Use case: Send something, e.g. a message. Corresponds to UIReturnKeySend on iOS and to IME_ACTION_SEND on Android. Shows \"Send\" as the return key button's title on iOS and displays an icon representing a \"send\" action (e.g. a paper plane) on Android.","title":"Enum Values"},{"location":"reference/ui/scroll_view/","text":"ScrollView \u00b6 A container view that can scroll its content view. Declaration \u00b6 namespace bdn :: ui { class ScrollView : public View } Example \u00b6 #include <bdn/ui/ScrollView.h> #include <bdn/ui/ImageView.h> // ... auto image = std :: make_shared < ImageView > (); image -> url = \"https:://www.xyz.com/some_huge_image.png\" ; auto scrollView = std :: make_shared < ScrollView > (); scrollView -> contentView = image ; Properties \u00b6 Property <std::shared_ptr< View >> contentView The content view to be scrolled. Property <bool> verticalScrollingEnabled Whether vertical scrolling is enabled. Property <bool> horizontalScrollingEnabled Whether horizontal scrolling is enabled. Property < Rect > visibleClientRect The currently visible part of the content view. Actions \u00b6 void scrollClientRectToVisible(const Rect &area) Scrolls the view so that the area of the content view is visible. Relationships \u00b6 Inherits from: View","title":"ScrollView"},{"location":"reference/ui/scroll_view/#scrollview","text":"A container view that can scroll its content view.","title":"ScrollView"},{"location":"reference/ui/scroll_view/#declaration","text":"namespace bdn :: ui { class ScrollView : public View }","title":"Declaration"},{"location":"reference/ui/scroll_view/#example","text":"#include <bdn/ui/ScrollView.h> #include <bdn/ui/ImageView.h> // ... auto image = std :: make_shared < ImageView > (); image -> url = \"https:://www.xyz.com/some_huge_image.png\" ; auto scrollView = std :: make_shared < ScrollView > (); scrollView -> contentView = image ;","title":"Example"},{"location":"reference/ui/scroll_view/#properties","text":"Property <std::shared_ptr< View >> contentView The content view to be scrolled. Property <bool> verticalScrollingEnabled Whether vertical scrolling is enabled. Property <bool> horizontalScrollingEnabled Whether horizontal scrolling is enabled. Property < Rect > visibleClientRect The currently visible part of the content view.","title":"Properties"},{"location":"reference/ui/scroll_view/#actions","text":"void scrollClientRectToVisible(const Rect &area) Scrolls the view so that the area of the content view is visible.","title":"Actions"},{"location":"reference/ui/scroll_view/#relationships","text":"Inherits from: View","title":"Relationships"},{"location":"reference/ui/slider/","text":"Slider \u00b6 Lets users select from a range of values. Declaration \u00b6 namespace bdn :: ui { class Slider : public View } Example \u00b6 #include <bdn/ui/Slider.h> // ... auto slider = std :: make_shared < Slider > (); slider -> value = 0.5 ; Properties \u00b6 Property <double> value The position of the slider. Ranges from 0.0 to 1.0. Relationships \u00b6 Inherits from: View","title":"Slider"},{"location":"reference/ui/slider/#slider","text":"Lets users select from a range of values.","title":"Slider"},{"location":"reference/ui/slider/#declaration","text":"namespace bdn :: ui { class Slider : public View }","title":"Declaration"},{"location":"reference/ui/slider/#example","text":"#include <bdn/ui/Slider.h> // ... auto slider = std :: make_shared < Slider > (); slider -> value = 0.5 ;","title":"Example"},{"location":"reference/ui/slider/#properties","text":"Property <double> value The position of the slider. Ranges from 0.0 to 1.0.","title":"Properties"},{"location":"reference/ui/slider/#relationships","text":"Inherits from: View","title":"Relationships"},{"location":"reference/ui/styler/","text":"Styler \u00b6 Enables you to change a View 's stylesheet based on a set of conditions. Multiple conditional parts can be active, in which case they will be merged from first to last. Example \u00b6 #include <bdn/ui/Styler.h> #include <bdn/ui/Button.h> using namespace bdn ; using namespace bdn :: ui ; auto styler = std :: make_shared < Styler > (); auto button = std :: make_shared < Button > (); styler -> setCondition ( \"os\" , std :: make_shared < Styler :: equals_condition > ( BDN_TARGET )); // If 'os' equals 'ios' the button will get a 5px padding // The margin will always be 5px _styler -> setStyleSheet ( addButton , JsonStringify ( [ { \"flex\" : { \"margin\" : { \"all\" : 5 }} }, { \"if\" : { \"os\" : \"ios\" }, \"flex\" : { \"padding\" : { \"all\" : 5 }} } ] ) ); Declaration \u00b6 namespace bdn :: ui { class Styler } Layout \u00b6 void setStyleSheet(std::shared_ptr<View> view, json stylesheet) Sets the stylesheet for view . The stylesheet root must be an array. void setCondition(std::string name, std::shared_ptr<condition> condition) Adds a new condition named name that stylesheets can match against. If a condition with name already exists it will be overriden and all registered stylesheets will be updated accordingly. Conditions \u00b6 condition Base class for conditions. Overload the bool operator() for your own custom conditions. struct condition { virtual ~ condition () = default ; virtual bool operator ()( const json :: value_type & ) = 0 ; }; equals_condition Returns true if the value is equal to the target value. struct equals_condition : public condition { equals_condition ( json :: value_type targetValue ) : _targetValue ( targetValue ) {} bool operator ()( const json :: value_type & value ) override { return value == _targetValue ; } json :: value_type _targetValue ; }; less_condition Returns true if the value is less than the target value. struct less_condition : public condition { less_condition ( json :: value_type targetValue ) : _targetValue ( targetValue ) {} bool operator ()( const json :: value_type & value ) override { return value < _targetValue ; } json :: value_type _targetValue ; }; greater_equal_condition Returns true if the value is greater or equal to the target value. struct greater_equal_condition : public condition { greater_equal_condition ( json :: value_type targetValue ) : _targetValue ( targetValue ) {} bool operator ()( const json :: value_type & value ) override { return value >= _targetValue ; } json :: value_type _targetValue ; };","title":"Styler"},{"location":"reference/ui/styler/#styler","text":"Enables you to change a View 's stylesheet based on a set of conditions. Multiple conditional parts can be active, in which case they will be merged from first to last.","title":"Styler"},{"location":"reference/ui/styler/#example","text":"#include <bdn/ui/Styler.h> #include <bdn/ui/Button.h> using namespace bdn ; using namespace bdn :: ui ; auto styler = std :: make_shared < Styler > (); auto button = std :: make_shared < Button > (); styler -> setCondition ( \"os\" , std :: make_shared < Styler :: equals_condition > ( BDN_TARGET )); // If 'os' equals 'ios' the button will get a 5px padding // The margin will always be 5px _styler -> setStyleSheet ( addButton , JsonStringify ( [ { \"flex\" : { \"margin\" : { \"all\" : 5 }} }, { \"if\" : { \"os\" : \"ios\" }, \"flex\" : { \"padding\" : { \"all\" : 5 }} } ] ) );","title":"Example"},{"location":"reference/ui/styler/#declaration","text":"namespace bdn :: ui { class Styler }","title":"Declaration"},{"location":"reference/ui/styler/#layout","text":"void setStyleSheet(std::shared_ptr<View> view, json stylesheet) Sets the stylesheet for view . The stylesheet root must be an array. void setCondition(std::string name, std::shared_ptr<condition> condition) Adds a new condition named name that stylesheets can match against. If a condition with name already exists it will be overriden and all registered stylesheets will be updated accordingly.","title":"Layout"},{"location":"reference/ui/styler/#conditions","text":"condition Base class for conditions. Overload the bool operator() for your own custom conditions. struct condition { virtual ~ condition () = default ; virtual bool operator ()( const json :: value_type & ) = 0 ; }; equals_condition Returns true if the value is equal to the target value. struct equals_condition : public condition { equals_condition ( json :: value_type targetValue ) : _targetValue ( targetValue ) {} bool operator ()( const json :: value_type & value ) override { return value == _targetValue ; } json :: value_type _targetValue ; }; less_condition Returns true if the value is less than the target value. struct less_condition : public condition { less_condition ( json :: value_type targetValue ) : _targetValue ( targetValue ) {} bool operator ()( const json :: value_type & value ) override { return value < _targetValue ; } json :: value_type _targetValue ; }; greater_equal_condition Returns true if the value is greater or equal to the target value. struct greater_equal_condition : public condition { greater_equal_condition ( json :: value_type targetValue ) : _targetValue ( targetValue ) {} bool operator ()( const json :: value_type & value ) override { return value >= _targetValue ; } json :: value_type _targetValue ; };","title":"Conditions"},{"location":"reference/ui/submit_event/","text":"SubmitEvent \u00b6 A submit event as generated by a TextField . Declaration \u00b6 namespace bdn :: ui { class SubmitEvent : public ViewEvent } Relationships \u00b6 Inherits from: ViewEvent","title":"SubmitEvent"},{"location":"reference/ui/submit_event/#submitevent","text":"A submit event as generated by a TextField .","title":"SubmitEvent"},{"location":"reference/ui/submit_event/#declaration","text":"namespace bdn :: ui { class SubmitEvent : public ViewEvent }","title":"Declaration"},{"location":"reference/ui/submit_event/#relationships","text":"Inherits from: ViewEvent","title":"Relationships"},{"location":"reference/ui/switch/","text":"Switch \u00b6 A control providing the user with an on/off choice. In contrast to Checkbox , Switch is commonly used in scenarios where the user's on or off choice takes effect immediately and does not require further confirmation. Declaration \u00b6 namespace bdn :: ui { class Switch : public View } Example \u00b6 #include <bdn/ui/Switch.h> // ... auto switchControl = std :: make_shared < Switch > (); switchControl -> label = \"A switch can also have a label!\" ; switchControl -> on = true ; switchControl -> onClick () += []( auto event ) { // Do something when the switch is turned off or on }; Properties \u00b6 Property <std::string> label The switch's label. Property <bool> on Whether switch is on ( true ) or off ( false ). Events \u00b6 Notifier <const ClickEvent &> &onClick() A notifier for click events. Subscribe to this notifier if you want to be notified when the user clicks the switch. Relationships \u00b6 Inherits from View .","title":"Switch"},{"location":"reference/ui/switch/#switch","text":"A control providing the user with an on/off choice. In contrast to Checkbox , Switch is commonly used in scenarios where the user's on or off choice takes effect immediately and does not require further confirmation.","title":"Switch"},{"location":"reference/ui/switch/#declaration","text":"namespace bdn :: ui { class Switch : public View }","title":"Declaration"},{"location":"reference/ui/switch/#example","text":"#include <bdn/ui/Switch.h> // ... auto switchControl = std :: make_shared < Switch > (); switchControl -> label = \"A switch can also have a label!\" ; switchControl -> on = true ; switchControl -> onClick () += []( auto event ) { // Do something when the switch is turned off or on };","title":"Example"},{"location":"reference/ui/switch/#properties","text":"Property <std::string> label The switch's label. Property <bool> on Whether switch is on ( true ) or off ( false ).","title":"Properties"},{"location":"reference/ui/switch/#events","text":"Notifier <const ClickEvent &> &onClick() A notifier for click events. Subscribe to this notifier if you want to be notified when the user clicks the switch.","title":"Events"},{"location":"reference/ui/switch/#relationships","text":"Inherits from View .","title":"Relationships"},{"location":"reference/ui/text/","text":"Text \u00b6 A std::variant of String and std::shared_ptr< AttributedString >. Declaration \u00b6 namespace bdn :: ui { class Text : public std :: variant < String , std :: shared_ptr < AttributedString >> } Example \u00b6 #include <bdn/ui/Text.h> #include <bdn/Json.h> int main () { bdn :: ui :: Text text ; bdn :: json j = JsonStringify ({ \"text\" : { \"html\" : \"<a href= \\\" http://www.boden.io \\\" >www.boden.io</a>\" } }); text = j . get < bdn :: ui :: Text > (); return 0 ; } Operators \u00b6 String operator() Returns a String whether the variant holds a String or an AttributedString . bool operator!=(const bdn::ui::Text &lhs, const bdn::ui::Text &rhs) Checks for inequality. Stylesheet \u00b6 You can de-/serialize Text objects into JSON taking two forms: A single string results in a String . A dictionary results in an AttributedString (see AttributedString serialization for details).","title":"Text"},{"location":"reference/ui/text/#text","text":"A std::variant of String and std::shared_ptr< AttributedString >.","title":"Text"},{"location":"reference/ui/text/#declaration","text":"namespace bdn :: ui { class Text : public std :: variant < String , std :: shared_ptr < AttributedString >> }","title":"Declaration"},{"location":"reference/ui/text/#example","text":"#include <bdn/ui/Text.h> #include <bdn/Json.h> int main () { bdn :: ui :: Text text ; bdn :: json j = JsonStringify ({ \"text\" : { \"html\" : \"<a href= \\\" http://www.boden.io \\\" >www.boden.io</a>\" } }); text = j . get < bdn :: ui :: Text > (); return 0 ; }","title":"Example"},{"location":"reference/ui/text/#operators","text":"String operator() Returns a String whether the variant holds a String or an AttributedString . bool operator!=(const bdn::ui::Text &lhs, const bdn::ui::Text &rhs) Checks for inequality.","title":"Operators"},{"location":"reference/ui/text/#stylesheet","text":"You can de-/serialize Text objects into JSON taking two forms: A single string results in a String . A dictionary results in an AttributedString (see AttributedString serialization for details).","title":"Stylesheet"},{"location":"reference/ui/text_field/","text":"TextField \u00b6 A simple single-line editable text field. Declaration \u00b6 namespace bdn :: ui { class TextField : public View } Example \u00b6 #include <bdn/ui/TextField.h> //... auto textField = std :: make_shared < TextField > (); textField -> text = \"Hello world!\" ; textField -> onSubmit () += []( auto event ) { // Do something on submit }; Properties \u00b6 Property <std::string> text The text displayed in the text field. Property < Text > placeholder A placeholder text displayed when the text field is empty. Property < AutocorrectionType > autocorrectionType The autocorrection type used by the text field. If not set, the platform's default behavior will be used. If set to AutocorrectionType::Yes , the text field will display typing suggestions and apply platform-specific autocorrection and autocomplete. Note that on Android, the implementation of the software keyboard may override the behavior indicated by the autocorrectionType property. This property is supported on Android and iOS only. Warning On Android, this function uses the EditText widget's input type flag TYPE_TEXT_FLAG_NO_SUGGESTIONS to deactivate autocorrection, autocomplete, and typing suggestions. Based on the software keyboard implementation used by the operating system, this flag may or may not have an effect. Setting the autocorrectionType property to AutocorrectionType::No is hence not a guarantee that autocorrection will be deactivated on Android. Property < ReturnKeyType > returnKeyType The type of return key to use when displaying a software keyboard. Defaults to ReturnKeyType::Default which corresponds to input action IME_ACTION_UNSPECIFIED on Android and to UIReturnKeyDefault on iOS. The default indicates that the operating system should decide what return key type to display. Typically, iOS will show \"return\" and Android will show \"return\" or \"done\" in the return key button. See ReturnKeyType for details. This property is supported on Android and iOS only. Property < TextInputType > textInputType The type of content that the user is supposed to enter. Defaults to TextInputType::Text which corresponds to UIKeyboardTypeDefault on iOS and InputType::TYPE_CLASS_TEXT on Android. This property is supported on Android and iOS only. Property <bool> obscureInput Controls whether the text field should hide the users input or not. The default is false. Note that on Android this is only supported for certain TextInputType s, namely Text and Number . This property is supported on Android and iOS only. Stylesheet \u00b6 { \"font\" : Font } Controls the font of the TextField. Actions \u00b6 void submit() Informs observers of the onSubmit() notifier about a submit event. void focus() Sets focus to the text field. Events \u00b6 Notifier <const SubmitEvent &> &onSubmit() Notifies subscribers when the Enter key is pressed by the user. Subscribe to this notifier if you want to be notified about submit events posted to the text field. Submit events are posted when the user presses the Enter key or when submit() is called programmatically. Relationships \u00b6 Inherits from: View","title":"TextField"},{"location":"reference/ui/text_field/#textfield","text":"A simple single-line editable text field.","title":"TextField"},{"location":"reference/ui/text_field/#declaration","text":"namespace bdn :: ui { class TextField : public View }","title":"Declaration"},{"location":"reference/ui/text_field/#example","text":"#include <bdn/ui/TextField.h> //... auto textField = std :: make_shared < TextField > (); textField -> text = \"Hello world!\" ; textField -> onSubmit () += []( auto event ) { // Do something on submit };","title":"Example"},{"location":"reference/ui/text_field/#properties","text":"Property <std::string> text The text displayed in the text field. Property < Text > placeholder A placeholder text displayed when the text field is empty. Property < AutocorrectionType > autocorrectionType The autocorrection type used by the text field. If not set, the platform's default behavior will be used. If set to AutocorrectionType::Yes , the text field will display typing suggestions and apply platform-specific autocorrection and autocomplete. Note that on Android, the implementation of the software keyboard may override the behavior indicated by the autocorrectionType property. This property is supported on Android and iOS only. Warning On Android, this function uses the EditText widget's input type flag TYPE_TEXT_FLAG_NO_SUGGESTIONS to deactivate autocorrection, autocomplete, and typing suggestions. Based on the software keyboard implementation used by the operating system, this flag may or may not have an effect. Setting the autocorrectionType property to AutocorrectionType::No is hence not a guarantee that autocorrection will be deactivated on Android. Property < ReturnKeyType > returnKeyType The type of return key to use when displaying a software keyboard. Defaults to ReturnKeyType::Default which corresponds to input action IME_ACTION_UNSPECIFIED on Android and to UIReturnKeyDefault on iOS. The default indicates that the operating system should decide what return key type to display. Typically, iOS will show \"return\" and Android will show \"return\" or \"done\" in the return key button. See ReturnKeyType for details. This property is supported on Android and iOS only. Property < TextInputType > textInputType The type of content that the user is supposed to enter. Defaults to TextInputType::Text which corresponds to UIKeyboardTypeDefault on iOS and InputType::TYPE_CLASS_TEXT on Android. This property is supported on Android and iOS only. Property <bool> obscureInput Controls whether the text field should hide the users input or not. The default is false. Note that on Android this is only supported for certain TextInputType s, namely Text and Number . This property is supported on Android and iOS only.","title":"Properties"},{"location":"reference/ui/text_field/#stylesheet","text":"{ \"font\" : Font } Controls the font of the TextField.","title":"Stylesheet"},{"location":"reference/ui/text_field/#actions","text":"void submit() Informs observers of the onSubmit() notifier about a submit event. void focus() Sets focus to the text field.","title":"Actions"},{"location":"reference/ui/text_field/#events","text":"Notifier <const SubmitEvent &> &onSubmit() Notifies subscribers when the Enter key is pressed by the user. Subscribe to this notifier if you want to be notified about submit events posted to the text field. Submit events are posted when the user presses the Enter key or when submit() is called programmatically.","title":"Events"},{"location":"reference/ui/text_field/#relationships","text":"Inherits from: View","title":"Relationships"},{"location":"reference/ui/text_input_type/","text":"TextInputType \u00b6 The type of input which a text entry view and its keyboard should optimize for. Definition \u00b6 namespace bdn :: ui { enum class TextInputType { Text , URL , Number , Phone , EMail , DateTime , MultiLine , }; } Enum Values \u00b6 TextInputType::Text Use case: A single line of text Corresponds to UIKeyboardTypeDefault on iOS and to InputType::TYPE_CLASS_TEXT on Android. TextInputType::URL Use case: A URL Corresponds to UIKeyboardTypeURL on iOS and to InputType::TYPE_CLASS_TEXT | InputType::TYPE_TEXT_VARIATION_URI on Android. TextInputType::Number Use case: A single number with possible decimal and sign Corresponds to UIKeyboardTypeNumbersAndPunctuation on iOS and to InputType::TYPE_CLASS_NUMBER | InputType::TYPE_NUMBER_FLAG_DECIMAL | InputType::TYPE_NUMBER_FLAG_SIGNED on Android. TextInputType::Phone Use case: A phone number Corresponds to UIKeyboardTypePhonePad on iOS and to InputType::TYPE_CLASS_PHONE on Android. TextInputType::EMail Use case: An email address Corresponds to UIKeyboardTypeEmailAddress on iOS and to InputType::TYPE_CLASS_TEXT | InputType::TYPE_TEXT_VARIATION_EMAIL_ADDRESS on Android. TextInputType::DateTime Use case: A date and time value Corresponds to UITextContentTypeDefault on iOS and to InputType::TYPE_CLASS_DATETIME on Android. TextInputType::MultiLine Use case: A multiline text input Corresponds to UITextContentTypeDefault on iOS and to InputType::TYPE_CLASS_TEXT | InputType::TYPE_TEXT_VARIATION_LONG_MESSAGE on Android.","title":"TextInputType"},{"location":"reference/ui/text_input_type/#textinputtype","text":"The type of input which a text entry view and its keyboard should optimize for.","title":"TextInputType"},{"location":"reference/ui/text_input_type/#definition","text":"namespace bdn :: ui { enum class TextInputType { Text , URL , Number , Phone , EMail , DateTime , MultiLine , }; }","title":"Definition"},{"location":"reference/ui/text_input_type/#enum-values","text":"TextInputType::Text Use case: A single line of text Corresponds to UIKeyboardTypeDefault on iOS and to InputType::TYPE_CLASS_TEXT on Android. TextInputType::URL Use case: A URL Corresponds to UIKeyboardTypeURL on iOS and to InputType::TYPE_CLASS_TEXT | InputType::TYPE_TEXT_VARIATION_URI on Android. TextInputType::Number Use case: A single number with possible decimal and sign Corresponds to UIKeyboardTypeNumbersAndPunctuation on iOS and to InputType::TYPE_CLASS_NUMBER | InputType::TYPE_NUMBER_FLAG_DECIMAL | InputType::TYPE_NUMBER_FLAG_SIGNED on Android. TextInputType::Phone Use case: A phone number Corresponds to UIKeyboardTypePhonePad on iOS and to InputType::TYPE_CLASS_PHONE on Android. TextInputType::EMail Use case: An email address Corresponds to UIKeyboardTypeEmailAddress on iOS and to InputType::TYPE_CLASS_TEXT | InputType::TYPE_TEXT_VARIATION_EMAIL_ADDRESS on Android. TextInputType::DateTime Use case: A date and time value Corresponds to UITextContentTypeDefault on iOS and to InputType::TYPE_CLASS_DATETIME on Android. TextInputType::MultiLine Use case: A multiline text input Corresponds to UITextContentTypeDefault on iOS and to InputType::TYPE_CLASS_TEXT | InputType::TYPE_TEXT_VARIATION_LONG_MESSAGE on Android.","title":"Enum Values"},{"location":"reference/ui/text_overflow/","text":"TextOverflow \u00b6 Represents the way text views (e.g. Label ) handle cases where the text does not fit inside the view's geometry. Definition \u00b6 namespace bdn :: ui { enum class TextOverflow { EllipsisHead , EllipsisTail , EllipsisMiddle , Clip , ClipWord }; } Enum Values \u00b6 TextOverflow::EllipsisHead The text is shortened such that the end fits in the container. The overflow is replaced with an ellipsis glyph. TextOverflow::EllipsisTail The text is shortened such that the beginning fits in the container. The overflow is replaced with an ellipsis glyph. TextOverflow::EllipsisMiddle The text is shortened such that the beginning and end fits in the container. The overflow is replaced with an ellipsis glyph. TextOverflow::Clip The text is shortened such that the beginning fits in the container. The overflow is clipped. TextOverflow::ClipWord The text is shortened such that the beginning fits in the container. The text is clipped at the start of the first word that does not fully fit in the container.","title":"TextOverflow"},{"location":"reference/ui/text_overflow/#textoverflow","text":"Represents the way text views (e.g. Label ) handle cases where the text does not fit inside the view's geometry.","title":"TextOverflow"},{"location":"reference/ui/text_overflow/#definition","text":"namespace bdn :: ui { enum class TextOverflow { EllipsisHead , EllipsisTail , EllipsisMiddle , Clip , ClipWord }; }","title":"Definition"},{"location":"reference/ui/text_overflow/#enum-values","text":"TextOverflow::EllipsisHead The text is shortened such that the end fits in the container. The overflow is replaced with an ellipsis glyph. TextOverflow::EllipsisTail The text is shortened such that the beginning fits in the container. The overflow is replaced with an ellipsis glyph. TextOverflow::EllipsisMiddle The text is shortened such that the beginning and end fits in the container. The overflow is replaced with an ellipsis glyph. TextOverflow::Clip The text is shortened such that the beginning fits in the container. The overflow is clipped. TextOverflow::ClipWord The text is shortened such that the beginning fits in the container. The text is clipped at the start of the first word that does not fully fit in the container.","title":"Enum Values"},{"location":"reference/ui/tri_state/","text":"TriState \u00b6 Represents the on, off, or mixed state of a Checkbox . Definition \u00b6 namespace bdn :: ui { enum TriState { Off , On , Mixed }; } Enum Values \u00b6 TriState::Off The control is in off state. TriState::On The control is in on state. TriState::Mixed The control is in mixed state representing a combination of other on/off controls, some of which are turned on and some of which are turned off currently.","title":"TriState"},{"location":"reference/ui/tri_state/#tristate","text":"Represents the on, off, or mixed state of a Checkbox .","title":"TriState"},{"location":"reference/ui/tri_state/#definition","text":"namespace bdn :: ui { enum TriState { Off , On , Mixed }; }","title":"Definition"},{"location":"reference/ui/tri_state/#enum-values","text":"TriState::Off The control is in off state. TriState::On The control is in on state. TriState::Mixed The control is in mixed state representing a combination of other on/off controls, some of which are turned on and some of which are turned off currently.","title":"Enum Values"},{"location":"reference/ui/view/","text":"View \u00b6 Abstract base class for all user interface elements. Declaration \u00b6 namespace bdn :: ui { class View : public std :: enable_shared_from_this < View > } Properties \u00b6 Property<Rect> geometry Current geometry of the view on screen. Property<bool> visible = true Whether the view is visible. Property<std::shared_ptr<json>> stylesheet A stylesheet defining the styling and layout of the view. Property<bool> isLayoutRoot = false Whether the view is treated as a layout root. If set to true, the view's geometry will not be changed by the layout system. Children are not affected by this setting and will still be processed by the layout system. Defaults to false . const Property<std::weak_ptr<View>> &parentView (read-only) The current parent view. Stylesheet \u00b6 { \"background-color\" : Color } Controls the background color of the view. Layout \u00b6 virtual Size sizeForSpace(Size availableSpace = Size::none()) const Calculates the view's Size for the given space. std::shared_ptr<Layout> getLayout() Returns the view's Layout . void setLayout(std::shared_ptr<Layout> layout) Sets the view's Layout . void setFallbackLayout(std::shared_ptr<Layout> layout) Sets the view's Layout fallback. A view that has no layout set (via setLayout ) will use the given layout . View Core \u00b6 std::shared_ptr<ViewCore> viewCore() const Returns the view's ViewCore . std::shared_ptr<ViewCoreFactory> viewCoreFactory() Returns the view's ViewCoreFactory . virtual void bindViewCore() Called after a new ViewCore is created to connect it to the view's properties and notifiers virtual const std::type_info &typeInfoForCoreCreation() const Returns the std::type_info that should be used to determine the ViewCore type. The default implementation returns typeid(*this) . Override if you want to use a different ViewCore . View Hierarchy \u00b6 virtual std::vector<std::shared_ptr<View>> childViews() const Returns the view's child views. Misc \u00b6 std::shared_ptr<View> shared_from_this() Returns an std::shared_ptr referencing the view. Relationships \u00b6 Inherits from std::enable_shared_from_this<View> .","title":"View"},{"location":"reference/ui/view/#view","text":"Abstract base class for all user interface elements.","title":"View"},{"location":"reference/ui/view/#declaration","text":"namespace bdn :: ui { class View : public std :: enable_shared_from_this < View > }","title":"Declaration"},{"location":"reference/ui/view/#properties","text":"Property<Rect> geometry Current geometry of the view on screen. Property<bool> visible = true Whether the view is visible. Property<std::shared_ptr<json>> stylesheet A stylesheet defining the styling and layout of the view. Property<bool> isLayoutRoot = false Whether the view is treated as a layout root. If set to true, the view's geometry will not be changed by the layout system. Children are not affected by this setting and will still be processed by the layout system. Defaults to false . const Property<std::weak_ptr<View>> &parentView (read-only) The current parent view.","title":"Properties"},{"location":"reference/ui/view/#stylesheet","text":"{ \"background-color\" : Color } Controls the background color of the view.","title":"Stylesheet"},{"location":"reference/ui/view/#layout","text":"virtual Size sizeForSpace(Size availableSpace = Size::none()) const Calculates the view's Size for the given space. std::shared_ptr<Layout> getLayout() Returns the view's Layout . void setLayout(std::shared_ptr<Layout> layout) Sets the view's Layout . void setFallbackLayout(std::shared_ptr<Layout> layout) Sets the view's Layout fallback. A view that has no layout set (via setLayout ) will use the given layout .","title":"Layout"},{"location":"reference/ui/view/#view-core","text":"std::shared_ptr<ViewCore> viewCore() const Returns the view's ViewCore . std::shared_ptr<ViewCoreFactory> viewCoreFactory() Returns the view's ViewCoreFactory . virtual void bindViewCore() Called after a new ViewCore is created to connect it to the view's properties and notifiers virtual const std::type_info &typeInfoForCoreCreation() const Returns the std::type_info that should be used to determine the ViewCore type. The default implementation returns typeid(*this) . Override if you want to use a different ViewCore .","title":"View Core"},{"location":"reference/ui/view/#view-hierarchy","text":"virtual std::vector<std::shared_ptr<View>> childViews() const Returns the view's child views.","title":"View Hierarchy"},{"location":"reference/ui/view/#misc","text":"std::shared_ptr<View> shared_from_this() Returns an std::shared_ptr referencing the view.","title":"Misc"},{"location":"reference/ui/view/#relationships","text":"Inherits from std::enable_shared_from_this<View> .","title":"Relationships"},{"location":"reference/ui/view_core/","text":"View::Core \u00b6 Interface representing a platform specific \"view core\". Classes inheriting from ViewCore implement the actual user interface logic to display user interfaces on screen. Declaration \u00b6 namespace bdn :: ui { class View { class Core } } Properties \u00b6 Property <Rect> geometry Property <bool> visible Functions \u00b6 virtual void init() = 0 Deriving classes must override this method to implement initialization of platform-specific objects. virtual Size sizeForSpace( Size availableSize = Size ::none()) const Returns the fitting size for the view given the available size. Setting availableSize to Size::none() indicates that infinite space is available to the view. virtual bool canMoveToParentView(std::shared_ptr< View > newParentView) const = 0 Returns whether the view core can move to another parent view. virtual void dispose() = 0 Called when the view core should be disposed. virtual void scheduleLayout() = 0 void startLayout() void markDirty() virtual void setLayout(std::shared_ptr< Layout > layout)","title":"View::Core"},{"location":"reference/ui/view_core/#viewcore","text":"Interface representing a platform specific \"view core\". Classes inheriting from ViewCore implement the actual user interface logic to display user interfaces on screen.","title":"View::Core"},{"location":"reference/ui/view_core/#declaration","text":"namespace bdn :: ui { class View { class Core } }","title":"Declaration"},{"location":"reference/ui/view_core/#properties","text":"Property <Rect> geometry Property <bool> visible","title":"Properties"},{"location":"reference/ui/view_core/#functions","text":"virtual void init() = 0 Deriving classes must override this method to implement initialization of platform-specific objects. virtual Size sizeForSpace( Size availableSize = Size ::none()) const Returns the fitting size for the view given the available size. Setting availableSize to Size::none() indicates that infinite space is available to the view. virtual bool canMoveToParentView(std::shared_ptr< View > newParentView) const = 0 Returns whether the view core can move to another parent view. virtual void dispose() = 0 Called when the view core should be disposed. virtual void scheduleLayout() = 0 void startLayout() void markDirty() virtual void setLayout(std::shared_ptr< Layout > layout)","title":"Functions"},{"location":"reference/ui/view_core_factory/","text":"ViewCoreFactory \u00b6 Allows you to easily instantiate ViewCore classes for a specific platform. Declaration \u00b6 namespace bdn :: ui { class ViewCoreFactory : public bdn :: Factory < std :: shared_ptr < View :: Core > , std :: shared_ptr < ViewCoreFactory >> , public std :: enable_shared_from_this < ViewCoreFactory > } Create \u00b6 std::shared_ptr< View::Core > createViewCore(const std::type_info &viewType); Creates a new View::Core object for the given view type. Register \u00b6 template <class CoreType, class ViewType> void registerCoreType(); Registers a new core type and associates it with the given view type. Context \u00b6 template <class T> static std::shared_ptr<T> getContextStackTop() Returns the top of the context stack static void pushContext(std::shared_ptr<bdn::UIContext> &context); Pushes a new context to the top of the stack static void popContext(); Removes the top context from the stack Relationships \u00b6 Inherits from bdn::Factory and std::enable_shared_from_this .","title":"ViewCoreFactory"},{"location":"reference/ui/view_core_factory/#viewcorefactory","text":"Allows you to easily instantiate ViewCore classes for a specific platform.","title":"ViewCoreFactory"},{"location":"reference/ui/view_core_factory/#declaration","text":"namespace bdn :: ui { class ViewCoreFactory : public bdn :: Factory < std :: shared_ptr < View :: Core > , std :: shared_ptr < ViewCoreFactory >> , public std :: enable_shared_from_this < ViewCoreFactory > }","title":"Declaration"},{"location":"reference/ui/view_core_factory/#create","text":"std::shared_ptr< View::Core > createViewCore(const std::type_info &viewType); Creates a new View::Core object for the given view type.","title":"Create"},{"location":"reference/ui/view_core_factory/#register","text":"template <class CoreType, class ViewType> void registerCoreType(); Registers a new core type and associates it with the given view type.","title":"Register"},{"location":"reference/ui/view_core_factory/#context","text":"template <class T> static std::shared_ptr<T> getContextStackTop() Returns the top of the context stack static void pushContext(std::shared_ptr<bdn::UIContext> &context); Pushes a new context to the top of the stack static void popContext(); Removes the top context from the stack","title":"Context"},{"location":"reference/ui/view_core_factory/#relationships","text":"Inherits from bdn::Factory and std::enable_shared_from_this .","title":"Relationships"},{"location":"reference/ui/view_event/","text":"ViewEvent \u00b6 Base class for view events. Declaration \u00b6 namespace bdn :: ui { class ViewEvent }","title":"ViewEvent"},{"location":"reference/ui/view_event/#viewevent","text":"Base class for view events.","title":"ViewEvent"},{"location":"reference/ui/view_event/#declaration","text":"namespace bdn :: ui { class ViewEvent }","title":"Declaration"},{"location":"reference/ui/web_view/","text":"WebView \u00b6 A view for displaying web content within your app. Declaration \u00b6 namespace bdn :: ui { class WebView : public View } Example \u00b6 #include <bdn/ui/WebView.h> // ... auto webView = std :: make_shared < WebView > (); webView -> url = \"https://www.example.com\" Properties \u00b6 Property <std::string> url The URL of the web page to be displayed in the web view. Set this property to load a given URL. Property <std::string> userAgent (Optional.) The user agent string that will be sent as part of the HTTP request made to load the web view's url . If not set, the default system user agent will be used. Property <std::function<bool( RedirectRequest )>> redirectHandler (Optional.) A function for handling redirect requests. If not set, the default redirect handling logic of the native web view implementation will be used. Loading a Web Page \u00b6 void loadURL(const std::string &url) Loads the web page with the given URL and sets the url property accordingly. Calling loadURL() is essentially identical to setting the url property directly. Once the URL is set, the framework will load the resource asynchronously and display it to the user when it becomes ready. Types \u00b6 RedirectRequest \u00b6 Represents a redirect request returned by a HTTP server. Public Members \u00b6 std::string url The redirect URL requested by the server. Relationships \u00b6 Inherits from View .","title":"WebView"},{"location":"reference/ui/web_view/#webview","text":"A view for displaying web content within your app.","title":"WebView"},{"location":"reference/ui/web_view/#declaration","text":"namespace bdn :: ui { class WebView : public View }","title":"Declaration"},{"location":"reference/ui/web_view/#example","text":"#include <bdn/ui/WebView.h> // ... auto webView = std :: make_shared < WebView > (); webView -> url = \"https://www.example.com\"","title":"Example"},{"location":"reference/ui/web_view/#properties","text":"Property <std::string> url The URL of the web page to be displayed in the web view. Set this property to load a given URL. Property <std::string> userAgent (Optional.) The user agent string that will be sent as part of the HTTP request made to load the web view's url . If not set, the default system user agent will be used. Property <std::function<bool( RedirectRequest )>> redirectHandler (Optional.) A function for handling redirect requests. If not set, the default redirect handling logic of the native web view implementation will be used.","title":"Properties"},{"location":"reference/ui/web_view/#loading-a-web-page","text":"void loadURL(const std::string &url) Loads the web page with the given URL and sets the url property accordingly. Calling loadURL() is essentially identical to setting the url property directly. Once the URL is set, the framework will load the resource asynchronously and display it to the user when it becomes ready.","title":"Loading a Web Page"},{"location":"reference/ui/web_view/#types","text":"","title":"Types"},{"location":"reference/ui/web_view/#redirectrequest","text":"Represents a redirect request returned by a HTTP server.","title":"RedirectRequest"},{"location":"reference/ui/web_view/#public-members","text":"std::string url The redirect URL requested by the server.","title":"Public Members"},{"location":"reference/ui/web_view/#relationships","text":"Inherits from View .","title":"Relationships"},{"location":"reference/ui/window/","text":"Window \u00b6 Represents a native window. On iOS and Android there can be only a single Window instance at a time currently. Declaration \u00b6 namespace bdn :: ui { class Window : public View } Example \u00b6 #include <bdn/ui/Window.h> // ... auto window = std :: make_shared < Window > (); window -> title = \"My Awesome App\" ; Properties \u00b6 const Property <Rect> contentGeometry (Read-only) The \"safe\" area that the content view will occupy. Property <std::string> title The title of the window. On Android this will be reflected in the Activities Toolbar. Property <std::shared_ptr< View >> contentView The content view of the window. Property <Orientation> allowedOrientations The orientations the UI will rotate too. Property <Orientation> currentOrientation The current orientation of the device. Enums \u00b6 enum Orientation : int { Portrait = 0x1 , LandscapeLeft = 0x2 , LandscapeRight = 0x4 , PortraitUpsideDown = 0x8 , LandscapeMask = ( LandscapeLeft | LandscapeRight ), PortraitMask = ( Portrait | PortraitUpsideDown ), All = ( LandscapeMask | PortraitMask ) }; Relationships \u00b6 Inherits from: View","title":"Window"},{"location":"reference/ui/window/#window","text":"Represents a native window. On iOS and Android there can be only a single Window instance at a time currently.","title":"Window"},{"location":"reference/ui/window/#declaration","text":"namespace bdn :: ui { class Window : public View }","title":"Declaration"},{"location":"reference/ui/window/#example","text":"#include <bdn/ui/Window.h> // ... auto window = std :: make_shared < Window > (); window -> title = \"My Awesome App\" ;","title":"Example"},{"location":"reference/ui/window/#properties","text":"const Property <Rect> contentGeometry (Read-only) The \"safe\" area that the content view will occupy. Property <std::string> title The title of the window. On Android this will be reflected in the Activities Toolbar. Property <std::shared_ptr< View >> contentView The content view of the window. Property <Orientation> allowedOrientations The orientations the UI will rotate too. Property <Orientation> currentOrientation The current orientation of the device.","title":"Properties"},{"location":"reference/ui/window/#enums","text":"enum Orientation : int { Portrait = 0x1 , LandscapeLeft = 0x2 , LandscapeRight = 0x4 , PortraitUpsideDown = 0x8 , LandscapeMask = ( LandscapeLeft | LandscapeRight ), PortraitMask = ( Portrait | PortraitUpsideDown ), All = ( LandscapeMask | PortraitMask ) };","title":"Enums"},{"location":"reference/ui/window/#relationships","text":"Inherits from: View","title":"Relationships"},{"location":"reference/ui/ios/view_core/","text":"ios::ViewCore \u00b6 Base class for iOS view cores. This effectively wraps UIView and serves as a foundation for all other iOS view cores. Declaration \u00b6 namespace bdn :: ios { class ViewCore : public bdn :: View :: Core , public std :: enable_shared_from_this < ViewCore > } Construction \u00b6 ViewCore(const std::shared_ptr<bdn::ViewCoreFactory> &viewCoreFactory, id<UIViewWithFrameNotification> uiView) void init() override Parent/Child relations \u00b6 bool canMoveToParentView(std::shared_ptr newParentView) const override Always returns true on iOS as UIView s can move to any parent view. virtual void addChildViewCore(const std::shared_ptr &core) virtual void removeFromUISuperview() Geometry \u00b6 virtual void frameChanged() Updates the geometry Property based on the UIView's frame. virtual void onGeometryChanged(Rect newGeometry) Updates the UIView's frame to the Rect given in newGeometry . Layout \u00b6 Size sizeForSpace(Size availableSpace = Size::none()) const override Uses UIView::systemLayoutSizeFittingSize to calculate the preferred Size of the View . void scheduleLayout() override Triggers the setNeedsLayout method of the managed UIView . virtual bool canAdjustToAvailableWidth() const Override to influence how sizeForSpace behaves. virtual bool canAdjustToAvailableHeight() const Override to influence how sizeForSpace behaves. Helper \u00b6 template <class T> std::shared_ptr<T> shared_from_this() Returns shared_from_this casted to std::shared_ptr<T> using std::dynamic_pointer_cast<T> . UIView *uiView() const Returns the UIView that was passed to the constructor. Reporting Size Changes to the Core \u00b6 The Boden Framework supports native layout updates from the target platform. This is especially useful in cases where native widget layouts should be reused to eliminate the need for custom non-native layout implementations, e.g. in list views ( UITableView on iOS). When an iOS view changes its size, the framework therefore needs to be informed so it can update the view's geometry property. To accommodate for native layout updates, ios::ViewCore and all subclasses wrapping native UIView s must implement the UIViewWithFrameNotification protocol: @protocol UIViewWithFrameNotification - ( void ) setViewCore: ( std :: weak_ptr < bdn :: ios :: ViewCore > ) viewCore ; @end The ios::ViewCore constructor will call setViewCore on its native UIView instance. The UIView subclass then needs to call back the core's frameChanged method when its frame changes. For instance, this is the implementation used by ios::ButtonCore : @interface BodenUIButton : UIButton < UIViewWithFrameNotification > @property ( nonatomic , assign ) std :: weak_ptr < bdn :: ios :: ButtonCore > core ; @end @implementation BodenUIButton - ( void ) setViewCore: ( std :: weak_ptr < bdn :: ios :: ViewCore > ) viewCore { self . core = std :: dynamic_pointer_cast < bdn :: ios :: ButtonCore > ( viewCore . lock ()); } - ( void ) setFrame: ( CGRect ) frame { [ super setFrame : frame ]; if ( auto core = self . core . lock ()) { core -> frameChanged (); } } //... @end","title":"ios::ViewCore"},{"location":"reference/ui/ios/view_core/#iosviewcore","text":"Base class for iOS view cores. This effectively wraps UIView and serves as a foundation for all other iOS view cores.","title":"ios::ViewCore"},{"location":"reference/ui/ios/view_core/#declaration","text":"namespace bdn :: ios { class ViewCore : public bdn :: View :: Core , public std :: enable_shared_from_this < ViewCore > }","title":"Declaration"},{"location":"reference/ui/ios/view_core/#construction","text":"ViewCore(const std::shared_ptr<bdn::ViewCoreFactory> &viewCoreFactory, id<UIViewWithFrameNotification> uiView) void init() override","title":"Construction"},{"location":"reference/ui/ios/view_core/#parentchild-relations","text":"bool canMoveToParentView(std::shared_ptr newParentView) const override Always returns true on iOS as UIView s can move to any parent view. virtual void addChildViewCore(const std::shared_ptr &core) virtual void removeFromUISuperview()","title":"Parent/Child relations"},{"location":"reference/ui/ios/view_core/#geometry","text":"virtual void frameChanged() Updates the geometry Property based on the UIView's frame. virtual void onGeometryChanged(Rect newGeometry) Updates the UIView's frame to the Rect given in newGeometry .","title":"Geometry"},{"location":"reference/ui/ios/view_core/#layout","text":"Size sizeForSpace(Size availableSpace = Size::none()) const override Uses UIView::systemLayoutSizeFittingSize to calculate the preferred Size of the View . void scheduleLayout() override Triggers the setNeedsLayout method of the managed UIView . virtual bool canAdjustToAvailableWidth() const Override to influence how sizeForSpace behaves. virtual bool canAdjustToAvailableHeight() const Override to influence how sizeForSpace behaves.","title":"Layout"},{"location":"reference/ui/ios/view_core/#helper","text":"template <class T> std::shared_ptr<T> shared_from_this() Returns shared_from_this casted to std::shared_ptr<T> using std::dynamic_pointer_cast<T> . UIView *uiView() const Returns the UIView that was passed to the constructor.","title":"Helper"},{"location":"reference/ui/ios/view_core/#reporting-size-changes-to-the-core","text":"The Boden Framework supports native layout updates from the target platform. This is especially useful in cases where native widget layouts should be reused to eliminate the need for custom non-native layout implementations, e.g. in list views ( UITableView on iOS). When an iOS view changes its size, the framework therefore needs to be informed so it can update the view's geometry property. To accommodate for native layout updates, ios::ViewCore and all subclasses wrapping native UIView s must implement the UIViewWithFrameNotification protocol: @protocol UIViewWithFrameNotification - ( void ) setViewCore: ( std :: weak_ptr < bdn :: ios :: ViewCore > ) viewCore ; @end The ios::ViewCore constructor will call setViewCore on its native UIView instance. The UIView subclass then needs to call back the core's frameChanged method when its frame changes. For instance, this is the implementation used by ios::ButtonCore : @interface BodenUIButton : UIButton < UIViewWithFrameNotification > @property ( nonatomic , assign ) std :: weak_ptr < bdn :: ios :: ButtonCore > core ; @end @implementation BodenUIButton - ( void ) setViewCore: ( std :: weak_ptr < bdn :: ios :: ViewCore > ) viewCore { self . core = std :: dynamic_pointer_cast < bdn :: ios :: ButtonCore > ( viewCore . lock ()); } - ( void ) setFrame: ( CGRect ) frame { [ super setFrame : frame ]; if ( auto core = self . core . lock ()) { core -> frameChanged (); } } //... @end","title":"Reporting Size Changes to the Core"},{"location":"reference/ui/yoga/layout/","text":"Layout \u00b6 A Flexbox layout implementation based on Facebook's Yoga library . Declaration \u00b6 namespace bdn :: ui :: yoga { class Layout : public ui :: Layout } Example \u00b6 First, create the layout object and apply it to the window: auto window = std :: make_shared < bdn :: ui :: Window > (); window -> setLayout ( std :: make_shared < bdn :: ui :: yoga :: Layout > ()); Then set the stylesheet: ```C++ tab=\"C++\" nlohmann::json jsonStylesheet = {{\"flex\", {{\"direction\", FlexStylesheet::Direction::Column}, {\"flexGrow\", 1.0}, {\"flexShrink\", 1.0}, {\"alignItems\", FlexStylesheet::Align::Stretch}, {\"padding\", {{\"all\", 20.0}}}, } }}; window->styleSheet = jsonStylesheet; ```C++ tab=\"Stringify\" window->styleSheet = FlexJsonStringify( { \"direction\" : \"Column\", \"flexGrow\" : 1.0, \"flexShrink\" : 1.0, \"alignItems\" : \"Stretch\", \"padding\" : {\"all\" : 20.0} }); Stylesheet \u00b6 The layout is configured using the View 's stylesheet property. The layout retrieves its setting from the \"flex\" entry. Defaults \u00b6 If the View 's stylesheet does not specify a value, the following defaults are used: { \"flex\" : { \"alignContents\" : \"Stretch\" , \"alignItems\" : \"Stretch\" , \"alignSelf\" : \"Auto\" , \"direction\" : \"Column\" , \"flexBasis\" : null , \"flexGrow\" : 0.0 , \"flexShrink\" : 1.0 , \"flexWrap\" : \"NoWrap\" , \"justifyContent\" : \"FlexStart\" , \"layoutDirection\" : \"Inherit\" , \"margin\" : { \"all\" : null , \"bottom\" : null , \"left\" : null , \"right\" : null , \"top\" : null }, \"padding\" : { \"all\" : null , \"bottom\" : null , \"left\" : null , \"right\" : null , \"top\" : null }, \"size\" : { \"height\" : null , \"width\" : null }, \"maximumSize\" : { \"height\" : null , \"width\" : null }, \"minimumSize\" : { \"height\" : null , \"width\" : null }, \"aspectRatio\" : null } } Container \u00b6 direction Specifies the layout direction. Value Direction Column (default) left to right ColumnReverse right to left Row top to bottom RowReverse bottom to top layoutDirection Specifies the layout anchor. Value Direction LTR (default) left to right RTL right to left flexWrap Allows items to wrap to the next line if they don't fit. Value Result NoWrap (default) overflow / shrink Wrap move to next line WrapReverse start at end, overflow into previous Alignment \u00b6 Available values for alignItems/alignSelf/alignContent: Value Description Auto inherit parents alignItems FlexStart Align towards parent start Center Align towards parent center FlexEnd Align towards parent end Stretch fill parent secondary axis Baseline align to baseline of neighbouring items SpaceBetween move to next line SpaceAround move to next line alignItems Alignment of children along the cross axis of the container. Defaults to Stretch . alignSelf Same as alignItems but for a single child (overrides the parents alignItems). Defaults to Auto . alignContent Alignment of lines along the cross-axis. Only affects containers with flexWrap enabled. Defaults to Stretch . justifyContent Aligns child nodes along the main axis. Possible values: Value Distribution FlexStart (default) start of the container Center center of the container FlexEnd end of the container SpaceEvenly evenly across the container, remaining space split evenly around items SpaceBetween evenly across the container, remaining space split between items SpaceAround evenly across the container, remaining space split around the items Defaults to FlexStart . Flex \u00b6 flexBasis Specifies the default size of the item along the containers main axis. Similar to size/width for row containers or size/height for column containers. flexBasis can be specified in pixels or as percentage value (string): { \"flexBasis\" : 100 }, { \"flexBasis\" : \"100px\" }, { \"flexBasis\" : \"100%\" } flexGrow Specifies the fraction of a container's empty space the item should request. The default value is 0. flexShrink Specifies how much to shrink an item if there is not enough space. Border \u00b6 Margin and padding can be specified as pixels or percentage value (string): { \"margin\" : { \"all\" : 100 } }, { \"margin\" : { \"all\" : \"100px\" } }, { \"margin\" : { \"all\" : \"100%\" } } As a shorthand for all you can also use this form: { \"margin\" : 100 }, { \"padding\" : 100 }, margin Specifies the border around the item padding Specifies the border inside the item Size \u00b6 Sizes are specified as dictionaries containing width and height . Boden CSS equivalent size width , height minimumSize min-width , min-height maximumSize max-width , max-height minimumSize / maximumSize can be specified as pixels or percentage value (string): { \"size\" : { \"width\" : 100 } }, { \"minimumSize\" : { \"width\" : \"100px\" } }, { \"maximumSize\" : { \"width\" : \"100%\" } } size Specifies the width and height of the item. size/width size/height minimumSize Specifies the minimum width and height of the item. minimumSize/width minimumSize/height maximumSize Specifies the maximum width and height of the item. maximumSize/width maximumSize/height aspectRatio Defines the aspect ratio.","title":"Layout"},{"location":"reference/ui/yoga/layout/#layout","text":"A Flexbox layout implementation based on Facebook's Yoga library .","title":"Layout"},{"location":"reference/ui/yoga/layout/#declaration","text":"namespace bdn :: ui :: yoga { class Layout : public ui :: Layout }","title":"Declaration"},{"location":"reference/ui/yoga/layout/#example","text":"First, create the layout object and apply it to the window: auto window = std :: make_shared < bdn :: ui :: Window > (); window -> setLayout ( std :: make_shared < bdn :: ui :: yoga :: Layout > ()); Then set the stylesheet: ```C++ tab=\"C++\" nlohmann::json jsonStylesheet = {{\"flex\", {{\"direction\", FlexStylesheet::Direction::Column}, {\"flexGrow\", 1.0}, {\"flexShrink\", 1.0}, {\"alignItems\", FlexStylesheet::Align::Stretch}, {\"padding\", {{\"all\", 20.0}}}, } }}; window->styleSheet = jsonStylesheet; ```C++ tab=\"Stringify\" window->styleSheet = FlexJsonStringify( { \"direction\" : \"Column\", \"flexGrow\" : 1.0, \"flexShrink\" : 1.0, \"alignItems\" : \"Stretch\", \"padding\" : {\"all\" : 20.0} });","title":"Example"},{"location":"reference/ui/yoga/layout/#stylesheet","text":"The layout is configured using the View 's stylesheet property. The layout retrieves its setting from the \"flex\" entry.","title":"Stylesheet"},{"location":"reference/ui/yoga/layout/#defaults","text":"If the View 's stylesheet does not specify a value, the following defaults are used: { \"flex\" : { \"alignContents\" : \"Stretch\" , \"alignItems\" : \"Stretch\" , \"alignSelf\" : \"Auto\" , \"direction\" : \"Column\" , \"flexBasis\" : null , \"flexGrow\" : 0.0 , \"flexShrink\" : 1.0 , \"flexWrap\" : \"NoWrap\" , \"justifyContent\" : \"FlexStart\" , \"layoutDirection\" : \"Inherit\" , \"margin\" : { \"all\" : null , \"bottom\" : null , \"left\" : null , \"right\" : null , \"top\" : null }, \"padding\" : { \"all\" : null , \"bottom\" : null , \"left\" : null , \"right\" : null , \"top\" : null }, \"size\" : { \"height\" : null , \"width\" : null }, \"maximumSize\" : { \"height\" : null , \"width\" : null }, \"minimumSize\" : { \"height\" : null , \"width\" : null }, \"aspectRatio\" : null } }","title":"Defaults"},{"location":"reference/ui/yoga/layout/#container","text":"direction Specifies the layout direction. Value Direction Column (default) left to right ColumnReverse right to left Row top to bottom RowReverse bottom to top layoutDirection Specifies the layout anchor. Value Direction LTR (default) left to right RTL right to left flexWrap Allows items to wrap to the next line if they don't fit. Value Result NoWrap (default) overflow / shrink Wrap move to next line WrapReverse start at end, overflow into previous","title":"Container"},{"location":"reference/ui/yoga/layout/#alignment","text":"Available values for alignItems/alignSelf/alignContent: Value Description Auto inherit parents alignItems FlexStart Align towards parent start Center Align towards parent center FlexEnd Align towards parent end Stretch fill parent secondary axis Baseline align to baseline of neighbouring items SpaceBetween move to next line SpaceAround move to next line alignItems Alignment of children along the cross axis of the container. Defaults to Stretch . alignSelf Same as alignItems but for a single child (overrides the parents alignItems). Defaults to Auto . alignContent Alignment of lines along the cross-axis. Only affects containers with flexWrap enabled. Defaults to Stretch . justifyContent Aligns child nodes along the main axis. Possible values: Value Distribution FlexStart (default) start of the container Center center of the container FlexEnd end of the container SpaceEvenly evenly across the container, remaining space split evenly around items SpaceBetween evenly across the container, remaining space split between items SpaceAround evenly across the container, remaining space split around the items Defaults to FlexStart .","title":"Alignment"},{"location":"reference/ui/yoga/layout/#flex","text":"flexBasis Specifies the default size of the item along the containers main axis. Similar to size/width for row containers or size/height for column containers. flexBasis can be specified in pixels or as percentage value (string): { \"flexBasis\" : 100 }, { \"flexBasis\" : \"100px\" }, { \"flexBasis\" : \"100%\" } flexGrow Specifies the fraction of a container's empty space the item should request. The default value is 0. flexShrink Specifies how much to shrink an item if there is not enough space.","title":"Flex"},{"location":"reference/ui/yoga/layout/#border","text":"Margin and padding can be specified as pixels or percentage value (string): { \"margin\" : { \"all\" : 100 } }, { \"margin\" : { \"all\" : \"100px\" } }, { \"margin\" : { \"all\" : \"100%\" } } As a shorthand for all you can also use this form: { \"margin\" : 100 }, { \"padding\" : 100 }, margin Specifies the border around the item padding Specifies the border inside the item","title":"Border"},{"location":"reference/ui/yoga/layout/#size","text":"Sizes are specified as dictionaries containing width and height . Boden CSS equivalent size width , height minimumSize min-width , min-height maximumSize max-width , max-height minimumSize / maximumSize can be specified as pixels or percentage value (string): { \"size\" : { \"width\" : 100 } }, { \"minimumSize\" : { \"width\" : \"100px\" } }, { \"maximumSize\" : { \"width\" : \"100%\" } } size Specifies the width and height of the item. size/width size/height minimumSize Specifies the minimum width and height of the item. minimumSize/width minimumSize/height maximumSize Specifies the maximum width and height of the item. maximumSize/width maximumSize/height aspectRatio Defines the aspect ratio.","title":"Size"}]}